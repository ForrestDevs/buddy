"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_App_tsx";
exports.ids = ["src_App_tsx"];
exports.modules = {

/***/ "./src/App.tsx":
/*!*********************!*\
  !*** ./src/App.tsx ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"styled-jsx/style\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _game_PhaserGame__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game/PhaserGame */ \"./src/game/PhaserGame.tsx\");\n/* harmony import */ var _game_EventBus__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./game/EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var _lib_sets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/sets */ \"./src/lib/sets.ts\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\nfunction App() {\n    // The sprite can only be moved in the MainMenu Scene\n    // The sprite can only be moved in the MainMenu Scene\n    const [canMoveSprite, setCanMoveSprite] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    //  References to the PhaserGame component (game and scene are exposed)\n    const phaserRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [spritePosition, setSpritePosition] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        x: 0,\n        y: 0\n    });\n    // Event emitted from the PhaserGame component\n    const currentScene = (scene)=>{\n        setCanMoveSprite(scene.scene.key !== \"MainMenu\");\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        _game_EventBus__WEBPACK_IMPORTED_MODULE_4__.EventBus.on(\"show-info\", (show)=>{\n            setShowInfo(show);\n        });\n    }, []);\n    const [showInfo, setShowInfo] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isMobile, setIsMobile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const checkDevice = ()=>{\n            const mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n            setIsMobile(mobile);\n        };\n        checkDevice();\n        window.addEventListener(\"resize\", checkDevice);\n        return ()=>{\n            window.removeEventListener(\"resize\", checkDevice);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"app\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-966f9bb0c21057f\" + \" \" + \"game-container\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        id: \"966f9bb0c21057f\",\n                        children: \"@media(max-width:768px){.desktop-game.jsx-966f9bb0c21057f{display:none}.mobile-message.jsx-966f9bb0c21057f{display:block}}@media(min-width:769px){.desktop-game.jsx-966f9bb0c21057f{display:block}.mobile-message.jsx-966f9bb0c21057f{display:none}}\"\n                    }, void 0, false, void 0, this),\n                    !isMobile ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            border: \"2px solid #30cfd0\",\n                            borderRadius: \"8px\",\n                            boxShadow: \"0 0 20px rgba(48, 207, 208, 0.5), inset 0 0 10px rgba(48, 207, 208, 0.3)\",\n                            padding: \"4px\"\n                        },\n                        className: \"jsx-966f9bb0c21057f\" + \" \" + \"desktop-game\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_PhaserGame__WEBPACK_IMPORTED_MODULE_3__.PhaserGame, {\n                            ref: phaserRef,\n                            currentActiveScene: currentScene\n                        }, void 0, false, {\n                            fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                            lineNumber: 89,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                        lineNumber: 79,\n                        columnNumber: 11\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: \"20px\"\n                        },\n                        className: \"jsx-966f9bb0c21057f\" + \" \" + \"mobile-message\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                style: {\n                                    color: \"#30cfd0\",\n                                    textAlign: \"center\",\n                                    margin: \"20px 0\",\n                                    fontSize: \"2rem\",\n                                    textShadow: \"0 0 10px rgba(48, 207, 208, 0.5)\"\n                                },\n                                className: \"jsx-966f9bb0c21057f\",\n                                children: \"$Buddy\"\n                            }, void 0, false, {\n                                fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                                lineNumber: 93,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_6___default()), {\n                                src: \"/og.png\",\n                                alt: \"Game screenshot\",\n                                style: {\n                                    maxWidth: \"100%\",\n                                    height: \"auto\"\n                                }\n                            }, void 0, false, {\n                                fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                                lineNumber: 104,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    gap: \"20px\",\n                                    margin: \"20px 0\",\n                                    flexDirection: window.innerWidth <= 768 ? \"column\" : \"row\",\n                                    alignItems: \"center\",\n                                    width: \"100%\",\n                                    padding: \"0 10px\"\n                                },\n                                className: \"jsx-966f9bb0c21057f\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                        href: _lib_sets__WEBPACK_IMPORTED_MODULE_5__.X_LINK,\n                                        target: \"_blank\",\n                                        rel: \"noopener noreferrer\",\n                                        style: {\n                                            color: \"#30cfd0\",\n                                            fontSize: \"1.5rem\",\n                                            transition: \"transform 0.2s\",\n                                            textDecoration: \"none\",\n                                            padding: \"10px 20px\",\n                                            border: \"1px solid rgba(48, 207, 208, 0.3)\",\n                                            borderRadius: \"8px\",\n                                            background: \"rgba(48, 207, 208, 0.1)\",\n                                            boxShadow: \"0 0 15px rgba(48, 207, 208, 0.2)\"\n                                        },\n                                        onMouseOver: (e)=>e.currentTarget.style.transform = \"scale(1.1)\",\n                                        onMouseOut: (e)=>e.currentTarget.style.transform = \"scale(1)\",\n                                        className: \"jsx-966f9bb0c21057f\",\n                                        children: \"Twitter\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                                        lineNumber: 121,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                        href: _lib_sets__WEBPACK_IMPORTED_MODULE_5__.TELEGRAM_LINK,\n                                        target: \"_blank\",\n                                        rel: \"noopener noreferrer\",\n                                        style: {\n                                            color: \"#30cfd0\",\n                                            fontSize: \"1.5rem\",\n                                            transition: \"transform 0.2s\",\n                                            textDecoration: \"none\",\n                                            padding: \"10px 20px\",\n                                            border: \"1px solid rgba(48, 207, 208, 0.3)\",\n                                            borderRadius: \"8px\",\n                                            background: \"rgba(48, 207, 208, 0.1)\",\n                                            boxShadow: \"0 0 15px rgba(48, 207, 208, 0.2)\"\n                                        },\n                                        onMouseOver: (e)=>e.currentTarget.style.transform = \"scale(1.1)\",\n                                        onMouseOut: (e)=>e.currentTarget.style.transform = \"scale(1)\",\n                                        className: \"jsx-966f9bb0c21057f\",\n                                        children: \"Telegram\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                                        lineNumber: 145,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                        href: _lib_sets__WEBPACK_IMPORTED_MODULE_5__.DEX_LINK,\n                                        target: \"_blank\",\n                                        rel: \"noopener noreferrer\",\n                                        style: {\n                                            color: \"#30cfd0\",\n                                            fontSize: \"1.5rem\",\n                                            transition: \"transform 0.2s\",\n                                            textDecoration: \"none\",\n                                            padding: \"10px 20px\",\n                                            border: \"1px solid rgba(48, 207, 208, 0.3)\",\n                                            borderRadius: \"8px\",\n                                            background: \"rgba(48, 207, 208, 0.1)\",\n                                            boxShadow: \"0 0 15px rgba(48, 207, 208, 0.2)\"\n                                        },\n                                        onMouseOver: (e)=>e.currentTarget.style.transform = \"scale(1.1)\",\n                                        onMouseOut: (e)=>e.currentTarget.style.transform = \"scale(1)\",\n                                        className: \"jsx-966f9bb0c21057f\",\n                                        children: \"Buy Now\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                                        lineNumber: 169,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                                lineNumber: 109,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                style: {\n                                    color: \"#fff\",\n                                    textAlign: \"center\",\n                                    margin: \"20px 0\",\n                                    fontSize: \"1.1rem\",\n                                    padding: \"15px 25px\",\n                                    background: \"rgba(48, 207, 208, 0.1)\",\n                                    border: \"1px solid rgba(48, 207, 208, 0.3)\",\n                                    borderRadius: \"8px\",\n                                    boxShadow: \"0 0 15px rgba(48, 207, 208, 0.2)\",\n                                    letterSpacing: \"0.5px\",\n                                    lineHeight: \"1.5\"\n                                },\n                                className: \"jsx-966f9bb0c21057f\",\n                                children: \"Please use a computer to play this game for the best experience.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                                lineNumber: 194,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                        lineNumber: 92,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                lineNumber: 59,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"game-info\",\n                style: {\n                    display: \"flex\",\n                    padding: \"20px\",\n                    color: \"#fff\",\n                    gap: \"20px\"\n                },\n                children: showInfo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        flex: 1,\n                        textAlign: \"center\"\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        style: {\n                            fontSize: \"1.2rem\",\n                            margin: \"0 auto\",\n                            color: \"#888888\",\n                            letterSpacing: \"0.1em\",\n                            padding: \"0 60px\"\n                        },\n                        children: \"Experience the first kick-the-buddy game on the blockchain! Unleash mayhem with an arsenal of devastating weapons and stylish character skins. The more you play, the more $BUDDY tokens you earn - use them to unlock epic new weapons and rare skins! Help grow our community and raise the market cap to unlock even more awesome content. Join the chaos and start earning today!\"\n                    }, void 0, false, {\n                        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                        lineNumber: 225,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                    lineNumber: 224,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n                lineNumber: 214,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/App.tsx\",\n        lineNumber: 50,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/App.tsx\n");

/***/ }),

/***/ "./src/game/EventBus.ts":
/*!******************************!*\
  !*** ./src/game/EventBus.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventBus: () => (/* binding */ EventBus)\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"phaser\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n\n// Used to emit events between React components and Phaser scenes\n// https://newdocs.phaser.io/docs/3.70.0/Phaser.Events.EventEmitter\nconst EventBus = new phaser__WEBPACK_IMPORTED_MODULE_0__.Events.EventEmitter();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9FdmVudEJ1cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0M7QUFFaEMsaUVBQWlFO0FBQ2pFLG1FQUFtRTtBQUM1RCxNQUFNQyxXQUFXLElBQUlELDBDQUFNQSxDQUFDRSxZQUFZLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9waGFzZXItZWRpdG9yLXRlbXBsYXRlLW5leHRqcy8uL3NyYy9nYW1lL0V2ZW50QnVzLnRzP2I4MWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRzIH0gZnJvbSAncGhhc2VyJztcblxuLy8gVXNlZCB0byBlbWl0IGV2ZW50cyBiZXR3ZWVuIFJlYWN0IGNvbXBvbmVudHMgYW5kIFBoYXNlciBzY2VuZXNcbi8vIGh0dHBzOi8vbmV3ZG9jcy5waGFzZXIuaW8vZG9jcy8zLjcwLjAvUGhhc2VyLkV2ZW50cy5FdmVudEVtaXR0ZXJcbmV4cG9ydCBjb25zdCBFdmVudEJ1cyA9IG5ldyBFdmVudHMuRXZlbnRFbWl0dGVyKCk7Il0sIm5hbWVzIjpbIkV2ZW50cyIsIkV2ZW50QnVzIiwiRXZlbnRFbWl0dGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game/EventBus.ts\n");

/***/ }),

/***/ "./src/game/PhaserGame.tsx":
/*!*********************************!*\
  !*** ./src/game/PhaserGame.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PhaserGame: () => (/* binding */ PhaserGame)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./main */ \"./src/game/main.ts\");\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EventBus */ \"./src/game/EventBus.ts\");\n\n\n\n\nconst PhaserGame = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function PhaserGame({ currentActiveScene }, ref) {\n    const game = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        if (game.current === null) {\n            game.current = (0,_main__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"game-container\");\n            if (typeof ref === \"function\") {\n                ref({\n                    game: game.current,\n                    scene: null\n                });\n            } else if (ref) {\n                ref.current = {\n                    game: game.current,\n                    scene: null\n                };\n            }\n        }\n        return ()=>{\n            if (game.current) {\n                game.current.destroy(true);\n                if (game.current !== null) {\n                    game.current = null;\n                }\n            }\n        };\n    }, [\n        ref\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        _EventBus__WEBPACK_IMPORTED_MODULE_3__.EventBus.on(\"current-scene-ready\", (scene_instance)=>{\n            if (currentActiveScene && typeof currentActiveScene === \"function\") {\n                currentActiveScene(scene_instance);\n            }\n            if (typeof ref === \"function\") {\n                ref({\n                    game: game.current,\n                    scene: scene_instance\n                });\n            } else if (ref) {\n                ref.current = {\n                    game: game.current,\n                    scene: scene_instance\n                };\n            }\n        });\n        return ()=>{\n            _EventBus__WEBPACK_IMPORTED_MODULE_3__.EventBus.removeListener(\"current-scene-ready\");\n        };\n    }, [\n        currentActiveScene,\n        ref\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"game-container\"\n    }, void 0, false, {\n        fileName: \"/Users/forrestdevs/dev/phaser/kickmev2/src/game/PhaserGame.tsx\",\n        lineNumber: 56,\n        columnNumber: 12\n    }, this);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9QaGFzZXJHYW1lLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF1RTtBQUN4QztBQUNPO0FBVy9CLE1BQU1NLDJCQUFhTixpREFBVUEsQ0FDbEMsU0FBU00sV0FBVyxFQUFFQyxrQkFBa0IsRUFBRSxFQUFFQyxHQUFHO0lBQzdDLE1BQU1DLE9BQU9OLDZDQUFNQSxDQUFxQjtJQUV4Q0Qsc0RBQWVBLENBQUM7UUFDZCxJQUFJTyxLQUFLQyxPQUFPLEtBQUssTUFBTTtZQUN6QkQsS0FBS0MsT0FBTyxHQUFHTixpREFBU0EsQ0FBQztZQUV6QixJQUFJLE9BQU9JLFFBQVEsWUFBWTtnQkFDN0JBLElBQUk7b0JBQUVDLE1BQU1BLEtBQUtDLE9BQU87b0JBQUVDLE9BQU87Z0JBQUs7WUFDeEMsT0FBTyxJQUFJSCxLQUFLO2dCQUNkQSxJQUFJRSxPQUFPLEdBQUc7b0JBQUVELE1BQU1BLEtBQUtDLE9BQU87b0JBQUVDLE9BQU87Z0JBQUs7WUFDbEQ7UUFDRjtRQUVBLE9BQU87WUFDTCxJQUFJRixLQUFLQyxPQUFPLEVBQUU7Z0JBQ2hCRCxLQUFLQyxPQUFPLENBQUNFLE9BQU8sQ0FBQztnQkFDckIsSUFBSUgsS0FBS0MsT0FBTyxLQUFLLE1BQU07b0JBQ3pCRCxLQUFLQyxPQUFPLEdBQUc7Z0JBQ2pCO1lBQ0Y7UUFDRjtJQUNGLEdBQUc7UUFBQ0Y7S0FBSTtJQUVSUCxnREFBU0EsQ0FBQztRQUNSSSwrQ0FBUUEsQ0FBQ1EsRUFBRSxDQUFDLHVCQUF1QixDQUFDQztZQUNsQyxJQUFJUCxzQkFBc0IsT0FBT0EsdUJBQXVCLFlBQVk7Z0JBQ2xFQSxtQkFBbUJPO1lBQ3JCO1lBRUEsSUFBSSxPQUFPTixRQUFRLFlBQVk7Z0JBQzdCQSxJQUFJO29CQUFFQyxNQUFNQSxLQUFLQyxPQUFPO29CQUFFQyxPQUFPRztnQkFBZTtZQUNsRCxPQUFPLElBQUlOLEtBQUs7Z0JBQ2RBLElBQUlFLE9BQU8sR0FBRztvQkFBRUQsTUFBTUEsS0FBS0MsT0FBTztvQkFBRUMsT0FBT0c7Z0JBQWU7WUFDNUQ7UUFDRjtRQUNBLE9BQU87WUFDTFQsK0NBQVFBLENBQUNVLGNBQWMsQ0FBQztRQUMxQjtJQUNGLEdBQUc7UUFBQ1I7UUFBb0JDO0tBQUk7SUFFNUIscUJBQU8sOERBQUNRO1FBQUlDLElBQUc7Ozs7OztBQUNqQixHQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGhhc2VyLWVkaXRvci10ZW1wbGF0ZS1uZXh0anMvLi9zcmMvZ2FtZS9QaGFzZXJHYW1lLnRzeD81YTk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcndhcmRSZWYsIHVzZUVmZmVjdCwgdXNlTGF5b3V0RWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBTdGFydEdhbWUgZnJvbSBcIi4vbWFpblwiO1xuaW1wb3J0IHsgRXZlbnRCdXMgfSBmcm9tIFwiLi9FdmVudEJ1c1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIElSZWZQaGFzZXJHYW1lIHtcbiAgZ2FtZTogUGhhc2VyLkdhbWUgfCBudWxsO1xuICBzY2VuZTogUGhhc2VyLlNjZW5lIHwgbnVsbDtcbn1cblxuaW50ZXJmYWNlIElQcm9wcyB7XG4gIGN1cnJlbnRBY3RpdmVTY2VuZT86IChzY2VuZV9pbnN0YW5jZTogUGhhc2VyLlNjZW5lKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgUGhhc2VyR2FtZSA9IGZvcndhcmRSZWY8SVJlZlBoYXNlckdhbWUsIElQcm9wcz4oXG4gIGZ1bmN0aW9uIFBoYXNlckdhbWUoeyBjdXJyZW50QWN0aXZlU2NlbmUgfSwgcmVmKSB7XG4gICAgY29uc3QgZ2FtZSA9IHVzZVJlZjxQaGFzZXIuR2FtZSB8IG51bGw+KG51bGwhKTtcblxuICAgIHVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgICBpZiAoZ2FtZS5jdXJyZW50ID09PSBudWxsKSB7XG4gICAgICAgIGdhbWUuY3VycmVudCA9IFN0YXJ0R2FtZShcImdhbWUtY29udGFpbmVyXCIpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgcmVmID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICByZWYoeyBnYW1lOiBnYW1lLmN1cnJlbnQsIHNjZW5lOiBudWxsIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHJlZikge1xuICAgICAgICAgIHJlZi5jdXJyZW50ID0geyBnYW1lOiBnYW1lLmN1cnJlbnQsIHNjZW5lOiBudWxsIH07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaWYgKGdhbWUuY3VycmVudCkge1xuICAgICAgICAgIGdhbWUuY3VycmVudC5kZXN0cm95KHRydWUpO1xuICAgICAgICAgIGlmIChnYW1lLmN1cnJlbnQgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGdhbWUuY3VycmVudCA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sIFtyZWZdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBFdmVudEJ1cy5vbihcImN1cnJlbnQtc2NlbmUtcmVhZHlcIiwgKHNjZW5lX2luc3RhbmNlOiBQaGFzZXIuU2NlbmUpID0+IHtcbiAgICAgICAgaWYgKGN1cnJlbnRBY3RpdmVTY2VuZSAmJiB0eXBlb2YgY3VycmVudEFjdGl2ZVNjZW5lID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICBjdXJyZW50QWN0aXZlU2NlbmUoc2NlbmVfaW5zdGFuY2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiByZWYgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgIHJlZih7IGdhbWU6IGdhbWUuY3VycmVudCwgc2NlbmU6IHNjZW5lX2luc3RhbmNlIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHJlZikge1xuICAgICAgICAgIHJlZi5jdXJyZW50ID0geyBnYW1lOiBnYW1lLmN1cnJlbnQsIHNjZW5lOiBzY2VuZV9pbnN0YW5jZSB9O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIEV2ZW50QnVzLnJlbW92ZUxpc3RlbmVyKFwiY3VycmVudC1zY2VuZS1yZWFkeVwiKTtcbiAgICAgIH07XG4gICAgfSwgW2N1cnJlbnRBY3RpdmVTY2VuZSwgcmVmXSk7XG5cbiAgICByZXR1cm4gPGRpdiBpZD1cImdhbWUtY29udGFpbmVyXCI+PC9kaXY+O1xuICB9XG4pO1xuXG4iXSwibmFtZXMiOlsiZm9yd2FyZFJlZiIsInVzZUVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZVJlZiIsIlN0YXJ0R2FtZSIsIkV2ZW50QnVzIiwiUGhhc2VyR2FtZSIsImN1cnJlbnRBY3RpdmVTY2VuZSIsInJlZiIsImdhbWUiLCJjdXJyZW50Iiwic2NlbmUiLCJkZXN0cm95Iiwib24iLCJzY2VuZV9pbnN0YW5jZSIsInJlbW92ZUxpc3RlbmVyIiwiZGl2IiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/PhaserGame.tsx\n");

/***/ }),

/***/ "./src/game/classes/Character.ts":
/*!***************************************!*\
  !*** ./src/game/classes/Character.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Character: () => (/* binding */ Character)\n/* harmony export */ });\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ \"./src/game/config.ts\");\n/* harmony import */ var _InputState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InputState */ \"./src/game/classes/InputState.ts\");\n\n\n\nvar DamageState;\n(function(DamageState) {\n    DamageState[\"CLEAN\"] = \"clean\";\n    DamageState[\"LIGHT\"] = \"light\";\n    DamageState[\"HEAVY\"] = \"heavy\";\n    DamageState[\"DEAD\"] = \"dead\";\n})(DamageState || (DamageState = {}));\n//TODO: Finish weapon projectiles\n//TODO: Make it work on mobile\n//TODO: Setup CDN Server\nclass Character {\n    constructor(config, effects){\n        this.health = 100;\n        this.bodyParts = new Map([\n            [\n                \"head\",\n                null\n            ],\n            [\n                \"body\",\n                null\n            ],\n            [\n                \"leftArm\",\n                null\n            ],\n            [\n                \"rightArm\",\n                null\n            ],\n            [\n                \"leftLeg\",\n                null\n            ],\n            [\n                \"rightLeg\",\n                null\n            ]\n        ]);\n        this.currentDamageState = \"clean\";\n        this.DAMAGE_THRESHOLDS = {\n            LIGHT: 75,\n            HEAVY: 35,\n            DEAD: 0\n        };\n        this.headCategory = 1;\n        this.bodyCategory = 2;\n        this.armCategory = 4;\n        this.legCategory = 8;\n        this.worldCategory = 16;\n        this.isRespawning = false;\n        this.onHealthChanged = (damage)=>{\n            // If already dead or will be dead after damage, handle death immediately\n            if (this.health <= 0 || this.health - damage <= 0) {\n                this.health = 0;\n                this.currentDamageState = \"dead\";\n                _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"damage-state-changed\", \"dead\");\n                this.updateCharacterAppearance();\n                this.initiateDeathSequence();\n                return;\n            }\n            // Otherwise process normal damage\n            this.health -= damage;\n            const previousState = this.currentDamageState;\n            this.playRandomBuddySound();\n            this.updateDamageState();\n            if (previousState !== this.currentDamageState) {\n                console.log(\"updateCharacterAppearance\");\n                this.updateCharacterAppearance();\n            }\n        };\n        this.scene = config.scene;\n        this.effects = effects;\n        this.characterSkin = config.tier || \"paper\";\n        this.collisionGroup = config.collisionGroup;\n        this.inputState = _InputState__WEBPACK_IMPORTED_MODULE_2__.InputState.getInstance();\n        this.createCharacter(config.x, config.y);\n        this.setupEventListeners();\n    }\n    createCharacter(x, y) {\n        const characterShapes = this.scene.cache.json.get(\"characterShapes\");\n        const bodyPartConfigs = {\n            head: {\n                x,\n                y,\n                width: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_WIDTH,\n                height: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT,\n                depth: 3,\n                texture: `${this.characterSkin}-head-${this.currentDamageState}`,\n                shape: characterShapes.head,\n                config: {\n                    friction: 1,\n                    density: 0.5\n                }\n            },\n            body: {\n                x,\n                y: y + 80,\n                width: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_WIDTH,\n                height: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT,\n                depth: 2,\n                texture: `${this.characterSkin}-body-${this.currentDamageState}`,\n                shape: characterShapes.body,\n                config: {\n                    friction: 1,\n                    density: 2\n                }\n            },\n            leftArm: {\n                x: x - 62,\n                y: y + 100,\n                width: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_WIDTH - 20,\n                height: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT - 20,\n                depth: 1,\n                texture: `${this.characterSkin}-rarm-${this.currentDamageState}`,\n                shape: characterShapes.larm,\n                config: {\n                    friction: 1,\n                    density: 0.05\n                }\n            },\n            rightArm: {\n                x: x + 138,\n                y: y + 100,\n                width: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_WIDTH - 20,\n                height: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT - 20,\n                depth: 1,\n                texture: `${this.characterSkin}-larm-${this.currentDamageState}`,\n                shape: characterShapes.rarm,\n                config: {\n                    friction: 1,\n                    density: 0.05\n                }\n            },\n            leftLeg: {\n                x: x - 62,\n                y: y + 200,\n                width: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_WIDTH - 30,\n                height: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT - 30,\n                depth: 1,\n                texture: `${this.characterSkin}-rleg-${this.currentDamageState}`,\n                shape: characterShapes.lleg,\n                config: {\n                    friction: 1,\n                    density: 3\n                }\n            },\n            rightLeg: {\n                x: x + 138,\n                y: y + 200,\n                width: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_WIDTH - 30,\n                height: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT - 30,\n                depth: 1,\n                texture: `${this.characterSkin}-lleg-${this.currentDamageState}`,\n                shape: characterShapes.rleg,\n                config: {\n                    friction: 1,\n                    density: 3\n                }\n            }\n        };\n        for (const [part, config] of Object.entries(bodyPartConfigs)){\n            const bodyPart = this.createBodyPart(config);\n            bodyPart.inertia = 9999999;\n            bodyPart.inverseInertia = 1 / 9999999;\n            this.bodyParts.set(part, bodyPart);\n        }\n        this.createJoints();\n    }\n    createBodyPart({ x, y, width, height, depth, texture, shape, config }) {\n        return this.scene.matter.add.image(x, y, texture, undefined, {\n            shape,\n            ...config\n        })// .setFixedRotation()\n        .setDisplaySize(width, height).setCollisionCategory(1).setDepth(depth).setCollisionGroup(this.collisionGroup);\n    }\n    createJoints() {\n        const jointConfigs = {\n            neck: {\n                bodyA: \"head\",\n                bodyB: \"body\",\n                length: 6,\n                stiffness: 0.9,\n                options: {\n                    pointA: {\n                        x: 0,\n                        y: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT / 2.6\n                    },\n                    pointB: {\n                        x: 0,\n                        y: -_config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT / 2.6\n                    }\n                }\n            },\n            neckLeft: {\n                bodyA: \"head\",\n                bodyB: \"body\",\n                length: 6,\n                stiffness: 0.8,\n                options: {\n                    pointA: {\n                        x: -15,\n                        y: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT / 2.6\n                    },\n                    pointB: {\n                        x: -25,\n                        y: -_config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT / 2.6\n                    }\n                }\n            },\n            neckRight: {\n                bodyA: \"head\",\n                bodyB: \"body\",\n                length: 6,\n                stiffness: 0.8,\n                options: {\n                    pointA: {\n                        x: 15,\n                        y: _config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT / 2.6\n                    },\n                    pointB: {\n                        x: 25,\n                        y: -_config__WEBPACK_IMPORTED_MODULE_1__.CHARACTER_HEIGHT / 2.6\n                    }\n                }\n            },\n            leftShoulder: {\n                bodyA: \"leftArm\",\n                bodyB: \"body\",\n                length: 10,\n                stiffness: 0.9,\n                options: {\n                    pointA: {\n                        x: 30,\n                        y: -15\n                    },\n                    pointB: {\n                        x: -25,\n                        y: -35\n                    }\n                }\n            },\n            leftElbow: {\n                bodyA: \"leftArm\",\n                bodyB: \"body\",\n                length: 40,\n                stiffness: 0.8,\n                options: {\n                    pointA: {\n                        x: -30,\n                        y: 20\n                    },\n                    pointB: {\n                        x: -30,\n                        y: 35\n                    }\n                }\n            },\n            rightShoulder: {\n                bodyA: \"rightArm\",\n                bodyB: \"body\",\n                length: 10,\n                stiffness: 0.9,\n                options: {\n                    pointA: {\n                        x: -35,\n                        y: -15\n                    },\n                    pointB: {\n                        x: 25,\n                        y: -35\n                    }\n                }\n            },\n            rightElbow: {\n                bodyA: \"rightArm\",\n                bodyB: \"body\",\n                length: 40,\n                stiffness: 0.8,\n                options: {\n                    pointA: {\n                        x: 30,\n                        y: 20\n                    },\n                    pointB: {\n                        x: 30,\n                        y: 35\n                    }\n                }\n            },\n            leftKnee: {\n                bodyA: \"leftLeg\",\n                bodyB: \"body\",\n                length: 10,\n                stiffness: 0.9,\n                options: {\n                    pointA: {\n                        x: -5,\n                        y: -20\n                    },\n                    pointB: {\n                        x: -30,\n                        y: 35\n                    }\n                }\n            },\n            rightKnee: {\n                bodyA: \"rightLeg\",\n                bodyB: \"body\",\n                length: 10,\n                stiffness: 0.9,\n                options: {\n                    pointA: {\n                        x: 0,\n                        y: -20\n                    },\n                    pointB: {\n                        x: 30,\n                        y: 35\n                    }\n                }\n            },\n            legConnector: {\n                bodyA: \"leftLeg\",\n                bodyB: \"rightLeg\",\n                length: 25,\n                stiffness: 0.8,\n                options: {\n                    pointA: {\n                        x: 20,\n                        y: 0\n                    },\n                    pointB: {\n                        x: -20,\n                        y: 0\n                    }\n                }\n            }\n        };\n        // Create all joints\n        Object.values(jointConfigs).forEach((config)=>{\n            const bodyA = this.bodyParts.get(config.bodyA);\n            const bodyB = this.bodyParts.get(config.bodyB);\n            if (bodyA && bodyB) {\n                this.scene.matter.add.joint(bodyA, bodyB, config.length, config.stiffness, config.options);\n            }\n        });\n    // const head = this.bodyParts.get(\"head\") as unknown as MatterJS.BodyType;\n    // this.scene.matter.add.constraint(head, head, 50, 0.9, {\n    //   pointB: { x: 0, y: -50 },\n    // });\n    }\n    setupEventListeners() {\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"health-changed\", this.onHealthChanged, this);\n    // EventBus.on(\"projectile-hit\", this.onProjectileHit, this);\n    }\n    updateDamageState() {\n        const healthPercentage = this.health / 100 * 100;\n        // console.log(\"updateDamageState\", healthPercentage);\n        if (healthPercentage <= this.DAMAGE_THRESHOLDS.DEAD) {\n            // console.log(\"updateDamageState DEAD\");\n            this.currentDamageState = \"dead\";\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"damage-state-changed\", \"dead\");\n        } else if (healthPercentage <= this.DAMAGE_THRESHOLDS.HEAVY) {\n            // console.log(\"updateDamageState HEAVY\");\n            this.currentDamageState = \"heavy\";\n            this.effects.spawnCoin(this.getPosition().x, this.getPosition().y, 200);\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"damage-state-changed\", \"heavy\");\n        } else if (healthPercentage <= this.DAMAGE_THRESHOLDS.LIGHT) {\n            // console.log(\"updateDamageState LIGHT\");\n            this.currentDamageState = \"light\";\n            this.effects.spawnCoin(this.getPosition().x, this.getPosition().y, 200);\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"damage-state-changed\", \"light\");\n        } else {\n            // console.log(\"updateDamageState CLEAN\");\n            this.currentDamageState = \"clean\";\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"damage-state-changed\", \"clean\");\n        }\n    }\n    updateCharacterAppearance() {\n        const state = this.currentDamageState;\n        this.bodyParts.forEach((part, partName)=>{\n            if (part) {\n                const baseTexture = `${this.characterSkin}-${this.getPartBaseName(partName)}`;\n                const damageTexture = state === \"clean\" ? baseTexture : `${baseTexture}-${state}`;\n                part.setTexture(damageTexture);\n            }\n        });\n    }\n    getPartBaseName(partName) {\n        const nameMap = {\n            head: \"head\",\n            body: \"body\",\n            leftArm: \"rarm\",\n            rightArm: \"larm\",\n            leftLeg: \"rleg\",\n            rightLeg: \"lleg\"\n        };\n        return nameMap[partName] || partName;\n    }\n    async initiateDeathSequence() {\n        if (this.isRespawning) return;\n        this.isRespawning = true;\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"stop-firing\");\n        this.inputState.lock(\"character-death\");\n        // Play death sound\n        // this.sounds.get(\"death\")?.play();\n        // First remove constraints to let parts disconnect\n        const constraints = this.scene.matter.world.getAllConstraints();\n        constraints.forEach((constraint)=>{\n            const bodyA = constraint.bodyA;\n            const bodyB = constraint.bodyB;\n            if (!bodyA || !bodyB) return;\n            if (this.isCharacterBody(bodyA) || this.isCharacterBody(bodyB)) {\n                this.scene.matter.world.removeConstraint(constraint);\n            }\n        });\n        const characterPos = this.getPosition();\n        for(let i = 0; i < 10; i++){\n            this.effects.spawnCoin(characterPos.x, characterPos.y, 75);\n        }\n        this.scene.sound.play(\"buddy-bone1\");\n        this.scene.sound.play(\"buddy-death\");\n        // Add stronger random forces to scatter parts dramatically\n        this.bodyParts.forEach((part)=>{\n            if (part) {\n                const randomForce = new Phaser.Math.Vector2(Phaser.Math.Between(-0.02, 0.02), Phaser.Math.Between(-0.015, -0.005) // More upward bias\n                );\n                const randomTorque = Phaser.Math.Between(-0.001, 0.001);\n                part.applyForce(randomForce);\n                part.setAngularVelocity(randomTorque);\n            }\n        });\n        // Wait for parts to scatter\n        await new Promise((resolve)=>setTimeout(resolve, 1500));\n        // Start fading parts\n        const fadePromises = Array.from(this.bodyParts.values()).map((part)=>{\n            if (part) {\n                return new Promise((resolve)=>{\n                    // Slow down physics as we fade\n                    if (part.body) {\n                        const currentVel = part.body.velocity;\n                        part.setVelocity(currentVel.x * 0.5, currentVel.y * 0.5);\n                    }\n                    this.scene.tweens.add({\n                        targets: part,\n                        alpha: 0,\n                        duration: 2000,\n                        ease: \"Power1\",\n                        onComplete: ()=>{\n                            // Create smoke effect at final position\n                            // this.createSmokeEffect(part.x, part.y);\n                            resolve();\n                        }\n                    });\n                });\n            }\n            return Promise.resolve();\n        });\n        // Wait for all fades and smoke effects\n        await Promise.all(fadePromises);\n        // Additional delay before respawn\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"reset-health-bar\");\n        // Finally respawn\n        this.respawnCharacter();\n    }\n    playRandomBuddySound() {\n        const sounds = [\n            \"grunt\",\n            \"ouch\",\n            \"scream\",\n            \"swear\",\n            \"thump\",\n            \"buddy-bone2\"\n        ];\n        const randomSound = sounds[Math.floor(Math.random() * sounds.length)];\n        this.scene.sound.play(randomSound);\n    }\n    isCharacterBody(body) {\n        return Array.from(this.bodyParts.values()).some((part)=>part && part.body === body);\n    }\n    respawnCharacter() {\n        // Reset health\n        this.health = 100;\n        this.currentDamageState = \"clean\";\n        // Clear existing body parts\n        this.bodyParts.forEach((part)=>part?.destroy());\n        this.bodyParts.clear();\n        // Recreate character at spawn position\n        const centerX = this.scene.game.config.width / 2;\n        const centerY = this.scene.game.config.height / 2;\n        this.createCharacter(centerX, centerY);\n        // Fade in new character\n        this.bodyParts.forEach((part)=>{\n            if (part) {\n                part.setAlpha(0);\n                this.scene.tweens.add({\n                    targets: part,\n                    alpha: 1,\n                    duration: 500,\n                    ease: \"Power2\"\n                });\n            }\n        });\n        this.scene.sound.play(\"buddy-respawn\");\n        this.inputState.unlock(\"character-death\");\n        this.isRespawning = false;\n        // Emit respawn event\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"character-respawned\");\n    }\n    getPosition() {\n        const body = this.bodyParts.get(\"body\");\n        if (!body) {\n            return new Phaser.Math.Vector2(0, 0);\n        }\n        // Get the body bounds to find true center\n        const bounds = body.getBounds();\n        return new Phaser.Math.Vector2(bounds.centerX, bounds.centerY);\n    }\n    changeSkin(newTier) {\n        this.characterSkin = newTier;\n        this.bodyParts.get(\"head\")?.setTexture(`${this.characterSkin}-head-${this.currentDamageState}`);\n        this.bodyParts.get(\"body\")?.setTexture(`${this.characterSkin}-body-${this.currentDamageState}`);\n        this.bodyParts.get(\"leftArm\")?.setTexture(`${this.characterSkin}-rarm-${this.currentDamageState}`);\n        this.bodyParts.get(\"rightArm\")?.setTexture(`${this.characterSkin}-larm-${this.currentDamageState}`);\n        this.bodyParts.get(\"leftLeg\")?.setTexture(`${this.characterSkin}-rleg-${this.currentDamageState}`);\n        this.bodyParts.get(\"rightLeg\")?.setTexture(`${this.characterSkin}-lleg-${this.currentDamageState}`);\n    }\n    update() {\n        this.ensureCharacterBounds();\n    }\n    ensureCharacterBounds() {\n        const gameWidth = this.scene.game.config.width;\n        const gameHeight = this.scene.game.config.height;\n        const inset = 50; // 50 pixel inset from bounds\n        const isOutOfBounds = (part)=>{\n            if (!part) return false;\n            return part.x > gameWidth - inset || part.x < inset || part.y > gameHeight - inset || part.y < inset;\n        };\n        // Check if any body part is out of bounds\n        const outOfBounds = Array.from(this.bodyParts.values()).some(isOutOfBounds);\n        if (outOfBounds) {\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"character-out-of-bounds\");\n            this.bodyParts.forEach((part)=>{\n                if (part) {\n                    // Calculate force direction based on position\n                    const forceX = part.x > gameWidth ? -0.005 : part.x < 0 ? 0.005 : 0;\n                    const forceY = part.y > gameHeight ? -0.005 : part.y < 0 ? 0.005 : 0;\n                    // Apply force in opposite direction of out-of-bounds movement\n                    part.applyForce(new Phaser.Math.Vector2(forceX, forceY));\n                }\n            });\n        // this.resetPosition();\n        }\n    }\n    resetPosition() {\n        const centerX = this.scene.game.config.width / 2;\n        const positions = [\n            [\n                \"head\",\n                centerX,\n                200\n            ],\n            [\n                \"body\",\n                centerX,\n                384\n            ],\n            [\n                \"leftArm\",\n                centerX + 238,\n                200\n            ],\n            [\n                \"rightArm\",\n                centerX - 162,\n                200\n            ],\n            [\n                \"leftLeg\",\n                centerX - 162,\n                500\n            ],\n            [\n                \"rightLeg\",\n                centerX + 238,\n                500\n            ]\n        ];\n        positions.forEach(([part, x, y])=>{\n            this.bodyParts.get(part)?.setPosition(x, y);\n        });\n    }\n    // Don't forget to clean up in the destroy method\n    destroy() {\n        // EventBus.off(\"projectile-hit\", this.onProjectileHit, this);\n        // Clean up all body parts\n        this.bodyParts.forEach((part)=>{\n            if (part) {\n                part.destroy();\n            }\n        });\n        // Clear the maps\n        this.bodyParts.clear();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/classes/Character.ts\n");

/***/ }),

/***/ "./src/game/classes/Effects.ts":
/*!*************************************!*\
  !*** ./src/game/classes/Effects.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Effects: () => (/* binding */ Effects)\n/* harmony export */ });\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n\nclass Effects {\n    static{\n        this.effectConfig = {\n            slash1: {\n                animKey: \"slash1\",\n                texture: \"slash1_00001\",\n                isPlaying: false,\n                timer: undefined\n            },\n            slash2: {\n                animKey: \"slash2\",\n                texture: \"slash2_00010\",\n                isPlaying: false,\n                timer: undefined\n            },\n            slash3: {\n                animKey: \"slash3\",\n                texture: \"slash3_00016\",\n                isPlaying: false,\n                timer: undefined\n            },\n            slash4: {\n                animKey: \"slash4\",\n                texture: \"slash4_00027\",\n                isPlaying: false,\n                timer: undefined\n            },\n            b1: {\n                animKey: \"b1\",\n                texture: \"blood1_00018\",\n                isPlaying: false,\n                timer: undefined\n            },\n            b2: {\n                animKey: \"b2\",\n                texture: \"bloodgush3_018\",\n                isPlaying: false,\n                timer: undefined\n            },\n            b3: {\n                animKey: \"b4\",\n                texture: \"darkerblood1_00018\",\n                isPlaying: false,\n                timer: undefined\n            },\n            explosion1: {\n                animKey: \"explosion\",\n                texture: \"firstexplosion_00001\",\n                isPlaying: false,\n                timer: undefined\n            },\n            explosion2: {\n                animKey: \"explosion2\",\n                texture: \"expl2fixed_00000\",\n                isPlaying: false,\n                timer: undefined\n            },\n            fire1: {\n                animKey: \"fire\",\n                texture: \"groundfire_00016\",\n                isPlaying: false,\n                timer: undefined\n            },\n            fire2: {\n                animKey: \"fire2\",\n                texture: \"fire2fixed_00012\",\n                isPlaying: false,\n                timer: undefined\n            },\n            coin: {\n                animKey: \"coin-spin\",\n                texture: \"SpinningMoney0041\",\n                isPlaying: false,\n                timer: undefined\n            }\n        };\n    }\n    constructor(scene){\n        this.scene = scene;\n        this.groundY = this.scene.cameras.main.height - 50;\n        this.finalX = this.scene.cameras.main.width - 200;\n        this.finalY = 30;\n    }\n    //   public playEffect(key: EffectType, x: number, y: number): void {\n    //     const config = Effects.effectConfig[key];\n    //     if (!config) return;\n    //     const sprite = this.scene.add\n    //       .sprite(x, y, config.texture)\n    //       .setDepth(4)\n    //       .setVisible(true); // Start visible\n    //     // Example of a tween to fade out and destroy the sprite\n    //     sprite.setAlpha(0); // Start invisible\n    //     this.scene.tweens.add({\n    //       targets: sprite,\n    //       alpha: 1, // Fade in\n    //       duration: 500,\n    //       onComplete: () => {\n    //         // this.playEffect(key, \"b1\");\n    //       },\n    //     });\n    //     // If effect is already playing, just reset its stop timer\n    //     if (config.isPlaying) {\n    //       if (config.timer) {\n    //         config.timer.reset({\n    //           delay: 500,\n    //           callback: () => {\n    //             config.isPlaying = false;\n    //             sprite.stop();\n    //             sprite.setVisible(false); // Hide the sprite\n    //             sprite.off(\"animationcomplete\");\n    //           },\n    //         });\n    //       }\n    //       return;\n    //     }\n    //     // Start playing the effect\n    //     config.isPlaying = true;\n    //     sprite.setVisible(true); // Show the sprite\n    //     sprite.play(config.animKey);\n    //     // Set up auto-repeat on animation complete\n    //     sprite.on(\"animationcomplete\", () => {\n    //       if (config.isPlaying) {\n    //         sprite.play(config.animKey);\n    //       }\n    //     });\n    //     // Create a timer to stop the effect if no more hits occur\n    //     config.timer = this.scene.time.delayedCall(500, () => {\n    //       config.isPlaying = false;\n    //       sprite.destroy();\n    //     });\n    //     return sprite;\n    //   }\n    playEffect(key, x, y, loops = 1) {\n        const config = Effects.effectConfig[key];\n        if (!config) return;\n        const sprite = this.scene.add.sprite(x, y, config.texture).setDepth(4).setAlpha(0);\n        let loopCount = 0;\n        sprite.on(\"animationcomplete\", ()=>{\n            loopCount++;\n            if (loopCount < loops) {\n                sprite.play(config.animKey);\n            } else {\n                // Start fade out when loops are complete\n                this.scene.tweens.add({\n                    targets: sprite,\n                    alpha: 0,\n                    duration: 200,\n                    onComplete: ()=>sprite.destroy()\n                });\n            }\n        });\n        // Fade in and start animation\n        this.scene.tweens.add({\n            targets: sprite,\n            alpha: 1,\n            duration: 50,\n            onComplete: ()=>sprite.play(config.animKey)\n        });\n    }\n    spawnCoin(x, y, dropAmount) {\n        const coin = this.scene.add.sprite(x, y, \"coin\").setDepth(4).setScale(0.2);\n        // Random initial direction with full 360 degree range\n        const randomAngle = Phaser.Math.FloatBetween(-Math.PI, Math.PI);\n        const force = Phaser.Math.FloatBetween(100, 200); // Randomize force\n        const dx = Math.cos(randomAngle) * force;\n        const dy = Math.sin(randomAngle) * force;\n        // Random initial height and distance\n        const initialHeight = Phaser.Math.FloatBetween(-150, -50);\n        const bounceHeight = Phaser.Math.FloatBetween(10, 30);\n        // Initial throw animation with physics-like motion\n        this.scene.tweens.add({\n            targets: coin,\n            x: x + dx,\n            y: y + initialHeight,\n            duration: Phaser.Math.FloatBetween(300, 500),\n            ease: \"Quad.easeOut\",\n            onComplete: ()=>{\n                // Get ground position (50px from bottom)\n                // Falling animation with natural gravity\n                this.scene.tweens.add({\n                    targets: coin,\n                    y: this.groundY - bounceHeight,\n                    duration: Phaser.Math.FloatBetween(600, 800),\n                    ease: \"Cubic.easeIn\",\n                    onComplete: ()=>{\n                        // Small settling bounces\n                        this.scene.tweens.add({\n                            targets: coin,\n                            y: this.groundY,\n                            duration: Phaser.Math.FloatBetween(150, 250),\n                            ease: \"Quad.easeOut\",\n                            onComplete: ()=>{\n                                // Random delay before flying to corner\n                                this.scene.time.delayedCall(Phaser.Math.FloatBetween(200, 400), ()=>{\n                                    // Final animation to top right corner\n                                    this.scene.tweens.add({\n                                        targets: coin,\n                                        x: this.finalX,\n                                        y: this.finalY,\n                                        scale: 0.1,\n                                        duration: Phaser.Math.FloatBetween(500, 700),\n                                        ease: \"Back.easeIn\",\n                                        onComplete: ()=>{\n                                            this.scene.sound.play(\"coin-pickup\", {\n                                                volume: 0.4\n                                            });\n                                            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"coins-changed\", dropAmount ?? 3);\n                                            coin.destroy();\n                                        }\n                                    });\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n        // Spin animation while bouncing\n        coin.play(\"coin-spin\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/classes/Effects.ts\n");

/***/ }),

/***/ "./src/game/classes/GameButtons.ts":
/*!*****************************************!*\
  !*** ./src/game/classes/GameButtons.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameButtons: () => (/* binding */ GameButtons)\n/* harmony export */ });\n/* harmony import */ var _lib_sets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/sets */ \"./src/lib/sets.ts\");\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var _InputState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InputState */ \"./src/game/classes/InputState.ts\");\n\n\n\nclass GameButtons extends Phaser.GameObjects.Container {\n    constructor(config){\n        super(config.scene, config.x, config.y);\n        this.buttons = new Map();\n        this.buttonStates = new Map();\n        this.muteButtonState = \"unmuted\";\n        this.infoButtonState = \"closed\";\n        this.socialsButtonState = \"closed\";\n        this.socialButtons = new Map();\n        this.SMALL_BUTTON_SIZE = 50;\n        this.SOCIAL_BUTTON_SPACING = 70;\n        this.scene = config.scene;\n        this.spacing = config.spacing || 60;\n        this.scene.add.existing(this);\n        this.inputState = _InputState__WEBPACK_IMPORTED_MODULE_2__.InputState.getInstance();\n        this.createUtilityButtons();\n        this.createMainButtons();\n        this.setupEventListeners();\n    }\n    createUtilityButtons() {\n        // Create mute button\n        this.muteButton = this.scene.add.image(-25, -150, \"unmuted\").setDisplaySize(this.SMALL_BUTTON_SIZE, this.SMALL_BUTTON_SIZE).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>this.onExtraButtonHover()).on(\"pointerout\", ()=>this.onExtraButtonOut()).on(\"pointerdown\", ()=>this.onMuteButtonClick());\n        // Create socials toggle button\n        this.socialsButton = this.scene.add.image(35, -150, \"logo-select\").setDisplaySize(this.SMALL_BUTTON_SIZE, this.SMALL_BUTTON_SIZE).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>this.onExtraButtonHover()).on(\"pointerout\", ()=>this.onExtraButtonOut()).on(\"pointerdown\", ()=>this.onSocialsButtonClick());\n        this.infoButton = this.scene.add.image(1120, 450, \"info-button-active\").setDisplaySize(this.SMALL_BUTTON_SIZE, this.SMALL_BUTTON_SIZE).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerdown\", ()=>this.onInfoButtonClick());\n        // Create social media buttons (initially hidden)\n        const socialTypes = [\n            \"twitter\",\n            \"telegram\",\n            \"dex\"\n        ];\n        socialTypes.forEach((type, index)=>{\n            const button = this.scene.add.image(this.socialsButton.x + (index + 1) * this.SOCIAL_BUTTON_SPACING, -150, `${type}-button`).setDisplaySize(this.SMALL_BUTTON_SIZE, this.SMALL_BUTTON_SIZE).setInteractive({\n                useHandCursor: true\n            }).on(\"pointerover\", ()=>{\n                // this.onExtraButtonHover();\n                button.setTexture(`${type}-button-active`);\n            }).on(\"pointerout\", ()=>{\n                this.onExtraButtonOut();\n                button.setTexture(`${type}-button`);\n            }).on(\"pointerdown\", ()=>this.onSocialClick(type)).setVisible(false);\n            this.socialButtons.set(type, button);\n            this.add(button);\n        });\n        this.add([\n            this.muteButton,\n            this.socialsButton,\n            this.infoButton\n        ]);\n    }\n    onInfoButtonClick() {\n        this.scene.sound.play(\"click\");\n        this.infoButtonState = this.infoButtonState === \"open\" ? \"closed\" : \"open\";\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"show-info\", this.infoButtonState === \"open\");\n        // Update info button texture based on state\n        this.infoButton.setTexture(this.infoButtonState === \"open\" ? \"info-button\" : \"info-button-active\");\n    }\n    createMainButtons() {\n        const buttonKeys = [\n            \"levels\",\n            \"shop\",\n            \"boxes\",\n            \"skins\"\n        ];\n        buttonKeys.forEach((key, index)=>{\n            const button = this.scene.add.image(0, index * this.spacing - 50, key).setDisplaySize(100, 100).setInteractive({\n                useHandCursor: true\n            }).on(\"pointerover\", ()=>this.onButtonHover(key)).on(\"pointerout\", ()=>this.onButtonOut(key)).on(\"pointerdown\", ()=>this.onButtonClick(key));\n            this.add(button);\n            this.buttons.set(key, button);\n            this.buttonStates.set(key, \"default\");\n        });\n    }\n    setupEventListeners() {\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"journal-closed\", this.resetButtonStates, this);\n    }\n    onExtraButtonHover() {\n        this.inputState.lock(\"extra\");\n    }\n    onExtraButtonOut() {\n        this.inputState.unlock(\"extra\");\n    }\n    onMuteButtonClick() {\n        this.toggleMute();\n    }\n    onSocialsButtonClick() {\n        this.scene.sound.play(\"click\");\n        this.socialsButtonState = this.socialsButtonState === \"open\" ? \"closed\" : \"open\";\n        // Show/hide social buttons based on state\n        this.socialButtons.forEach((button)=>{\n            button.setVisible(this.socialsButtonState === \"open\");\n        });\n    }\n    onButtonHover(key) {\n        const button = this.buttons.get(key);\n        if (!button || this.buttonStates.get(key) === \"selected\") return;\n        button.setTexture(`${key}-selected`);\n        this.buttonStates.set(key, \"hover\");\n        // Emit event to hide weapon\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"hide-weapon\", true);\n    // Play hover sound\n    // this.scene.sound.play(\"hover\");\n    }\n    onButtonOut(key) {\n        const button = this.buttons.get(key);\n        if (!button || this.buttonStates.get(key) === \"selected\") return;\n        button.setTexture(key);\n        this.buttonStates.set(key, \"default\");\n        // Check if pointer is outside container bounds\n        if (!this.isPointerOver()) {\n            _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"hide-weapon\", false);\n        }\n    }\n    onButtonClick(key) {\n        const button = this.buttons.get(key);\n        if (!button) return;\n        // Handle mute button separately\n        if (key === \"mute\") {\n            this.toggleMute();\n            return;\n        }\n        // Reset all buttons except clicked one\n        this.buttons.forEach((btn, btnKey)=>{\n            if (btnKey !== key) {\n                btn.setTexture(btnKey);\n                this.buttonStates.set(btnKey, \"default\");\n            }\n        });\n        // Set clicked button to selected state\n        button.setTexture(`${key}-selected`);\n        this.buttonStates.set(key, \"selected\");\n        // Emit event for journal opening\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"open-journal\", key);\n        // Play click sound\n        this.scene.sound.play(\"click\");\n    }\n    toggleMute() {\n        this.scene.sound.play(\"click\");\n        const isMuted = this.muteButtonState === \"muted\";\n        this.muteButton.setTexture(isMuted ? \"unmuted\" : \"mute\");\n        this.muteButtonState = isMuted ? \"unmuted\" : \"muted\";\n        if (this.muteButtonState === \"muted\") {\n            this.scene.game.sound.stopByKey(\"bgMusic\");\n        } else if (!this.scene.game.sound.isPlaying(\"bgMusic\") && this.muteButtonState === \"unmuted\") {\n            this.scene.game.sound.play(\"bgMusic\");\n        }\n        // Emit mute event\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"toggle-mute\", !isMuted);\n    }\n    isPointerOver() {\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"hide-weapon\", true);\n        const bounds = this.getBounds();\n        return bounds.contains(this.scene.input.activePointer.x, this.scene.input.activePointer.y);\n    }\n    resetButtonStates() {\n        this.buttons.forEach((button, key)=>{\n            if (key !== \"mute\") {\n                // Preserve mute state\n                button.setTexture(key);\n                this.buttonStates.set(key, \"default\");\n            }\n        });\n    }\n    onSocialClick(type) {\n        this.scene.sound.play(\"click\");\n        // Open appropriate link based on type\n        let url = \"\";\n        switch(type){\n            case \"twitter\":\n                url = _lib_sets__WEBPACK_IMPORTED_MODULE_0__.X_LINK;\n                break;\n            case \"telegram\":\n                url = _lib_sets__WEBPACK_IMPORTED_MODULE_0__.TELEGRAM_LINK;\n                break;\n            case \"DexLogo\":\n                url = _lib_sets__WEBPACK_IMPORTED_MODULE_0__.DEX_LINK;\n                break;\n        }\n        if (url) {\n            window.open(url, \"_blank\");\n        }\n    }\n    destroy() {\n        // Clean up event listeners\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.off(\"journal-closed\", this.resetButtonStates, this);\n        // Clean up social buttons\n        this.socialButtons.forEach((button)=>button.destroy());\n        this.socialButtons.clear();\n        // Container's destroy method will handle destroying all child objects\n        super.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/classes/GameButtons.ts\n");

/***/ }),

/***/ "./src/game/classes/InputState.ts":
/*!****************************************!*\
  !*** ./src/game/classes/InputState.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputState: () => (/* binding */ InputState)\n/* harmony export */ });\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n\n// First, let's create an InputState manager\nclass InputState {\n    constructor(){\n        this._isLocked = false;\n        this._lockSources = new Set();\n    }\n    static getInstance() {\n        if (!InputState.instance) {\n            InputState.instance = new InputState();\n        }\n        return InputState.instance;\n    }\n    lock(source) {\n        const wasLocked = this._isLocked;\n        this._lockSources.add(source);\n        this._isLocked = true;\n        if (!wasLocked) {\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"input-locked\", {\n                source\n            });\n        }\n    }\n    unlock(source) {\n        this._lockSources.delete(source);\n        const wasLocked = this._isLocked;\n        this._isLocked = this._lockSources.size > 0;\n        if (wasLocked && !this._isLocked) {\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"input-unlocked\", {\n                source\n            });\n        }\n    }\n    get isLocked() {\n        return this._isLocked;\n    }\n    get lockSources() {\n        return Array.from(this._lockSources);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jbGFzc2VzL0lucHV0U3RhdGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFFdkMsNENBQTRDO0FBQ3JDLE1BQU1DO0lBS1gsYUFBc0I7YUFIZEMsWUFBcUI7YUFDckJDLGVBQTRCLElBQUlDO0lBRWpCO0lBRXZCLE9BQU9DLGNBQTBCO1FBQy9CLElBQUksQ0FBQ0osV0FBV0ssUUFBUSxFQUFFO1lBQ3hCTCxXQUFXSyxRQUFRLEdBQUcsSUFBSUw7UUFDNUI7UUFDQSxPQUFPQSxXQUFXSyxRQUFRO0lBQzVCO0lBRU9DLEtBQUtDLE1BQWMsRUFBUTtRQUNoQyxNQUFNQyxZQUFZLElBQUksQ0FBQ1AsU0FBUztRQUNoQyxJQUFJLENBQUNDLFlBQVksQ0FBQ08sR0FBRyxDQUFDRjtRQUN0QixJQUFJLENBQUNOLFNBQVMsR0FBRztRQUVqQixJQUFJLENBQUNPLFdBQVc7WUFDZFQsK0NBQVFBLENBQUNXLElBQUksQ0FBQyxnQkFBZ0I7Z0JBQUVIO1lBQU87UUFDekM7SUFDRjtJQUVPSSxPQUFPSixNQUFjLEVBQVE7UUFDbEMsSUFBSSxDQUFDTCxZQUFZLENBQUNVLE1BQU0sQ0FBQ0w7UUFDekIsTUFBTUMsWUFBWSxJQUFJLENBQUNQLFNBQVM7UUFDaEMsSUFBSSxDQUFDQSxTQUFTLEdBQUcsSUFBSSxDQUFDQyxZQUFZLENBQUNXLElBQUksR0FBRztRQUUxQyxJQUFJTCxhQUFhLENBQUMsSUFBSSxDQUFDUCxTQUFTLEVBQUU7WUFDaENGLCtDQUFRQSxDQUFDVyxJQUFJLENBQUMsa0JBQWtCO2dCQUFFSDtZQUFPO1FBQzNDO0lBQ0Y7SUFFQSxJQUFXTyxXQUFvQjtRQUM3QixPQUFPLElBQUksQ0FBQ2IsU0FBUztJQUN2QjtJQUVBLElBQVdjLGNBQXdCO1FBQ2pDLE9BQU9DLE1BQU1DLElBQUksQ0FBQyxJQUFJLENBQUNmLFlBQVk7SUFDckM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3BoYXNlci1lZGl0b3ItdGVtcGxhdGUtbmV4dGpzLy4vc3JjL2dhbWUvY2xhc3Nlcy9JbnB1dFN0YXRlLnRzP2UyNjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRCdXMgfSBmcm9tIFwiLi4vRXZlbnRCdXNcIjtcblxuLy8gRmlyc3QsIGxldCdzIGNyZWF0ZSBhbiBJbnB1dFN0YXRlIG1hbmFnZXJcbmV4cG9ydCBjbGFzcyBJbnB1dFN0YXRlIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IElucHV0U3RhdGU7XG4gIHByaXZhdGUgX2lzTG9ja2VkOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX2xvY2tTb3VyY2VzOiBTZXQ8c3RyaW5nPiA9IG5ldyBTZXQoKTtcblxuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge31cblxuICBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogSW5wdXRTdGF0ZSB7XG4gICAgaWYgKCFJbnB1dFN0YXRlLmluc3RhbmNlKSB7XG4gICAgICBJbnB1dFN0YXRlLmluc3RhbmNlID0gbmV3IElucHV0U3RhdGUoKTtcbiAgICB9XG4gICAgcmV0dXJuIElucHV0U3RhdGUuaW5zdGFuY2U7XG4gIH1cblxuICBwdWJsaWMgbG9jayhzb3VyY2U6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IHdhc0xvY2tlZCA9IHRoaXMuX2lzTG9ja2VkO1xuICAgIHRoaXMuX2xvY2tTb3VyY2VzLmFkZChzb3VyY2UpO1xuICAgIHRoaXMuX2lzTG9ja2VkID0gdHJ1ZTtcblxuICAgIGlmICghd2FzTG9ja2VkKSB7XG4gICAgICBFdmVudEJ1cy5lbWl0KFwiaW5wdXQtbG9ja2VkXCIsIHsgc291cmNlIH0pO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyB1bmxvY2soc291cmNlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLl9sb2NrU291cmNlcy5kZWxldGUoc291cmNlKTtcbiAgICBjb25zdCB3YXNMb2NrZWQgPSB0aGlzLl9pc0xvY2tlZDtcbiAgICB0aGlzLl9pc0xvY2tlZCA9IHRoaXMuX2xvY2tTb3VyY2VzLnNpemUgPiAwO1xuXG4gICAgaWYgKHdhc0xvY2tlZCAmJiAhdGhpcy5faXNMb2NrZWQpIHtcbiAgICAgIEV2ZW50QnVzLmVtaXQoXCJpbnB1dC11bmxvY2tlZFwiLCB7IHNvdXJjZSB9KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0IGlzTG9ja2VkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9pc0xvY2tlZDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgbG9ja1NvdXJjZXMoKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuX2xvY2tTb3VyY2VzKTtcbiAgfVxufVxuXG4iXSwibmFtZXMiOlsiRXZlbnRCdXMiLCJJbnB1dFN0YXRlIiwiX2lzTG9ja2VkIiwiX2xvY2tTb3VyY2VzIiwiU2V0IiwiZ2V0SW5zdGFuY2UiLCJpbnN0YW5jZSIsImxvY2siLCJzb3VyY2UiLCJ3YXNMb2NrZWQiLCJhZGQiLCJlbWl0IiwidW5sb2NrIiwiZGVsZXRlIiwic2l6ZSIsImlzTG9ja2VkIiwibG9ja1NvdXJjZXMiLCJBcnJheSIsImZyb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/classes/InputState.ts\n");

/***/ }),

/***/ "./src/game/classes/Journal.ts":
/*!*************************************!*\
  !*** ./src/game/classes/Journal.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JournalManager: () => (/* binding */ JournalManager)\n/* harmony export */ });\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/utils */ \"./src/lib/utils.ts\");\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var _InputState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InputState */ \"./src/game/classes/InputState.ts\");\n\n\n\nconst JOURNAL_SCALE = 0.6;\nconst HITAREA_ALPHA = 0;\nclass JournalManager extends Phaser.GameObjects.Container {\n    // three states: locked by mc, unlocked by mc, purchased by user\n    // ex. musk-skin-locked, musk-skin-unlocked, musk-skin-purchased\n    constructor(config){\n        super(config.scene, config.x, config.y);\n        this.currentJournal = null;\n        this.currentState = \"closed\";\n        this.currentTier = 1;\n        this.currentBox = 1;\n        this.currentSkin = 1;\n        this.currentShop = 1;\n        this.isAnimating = false;\n        this.isAdvancing = false;\n        // Position constants\n        this.HIDDEN_X = 1480;\n        this.VISIBLE_X = 1000;\n        this.pointerOver = false;\n        this.handleJournalOpen = (journalType)=>{\n            this.inputState.lock(\"journal\");\n            if (this.isAnimating) return;\n            if (this.currentJournal === journalType && (this.currentState === \"main\" || this.currentState === \"tier\" || this.currentState === \"shop\")) {\n                this.closeJournal();\n                return;\n            }\n            if (!this.currentJournal) {\n                this.openJournal(journalType);\n            } else {\n                this.switchJournal(journalType);\n            }\n        };\n        this.inputState = _InputState__WEBPACK_IMPORTED_MODULE_2__.InputState.getInstance();\n        this.setDepth(100);\n        this.scene.add.existing(this);\n        this.journalContents = new Map();\n        this.tierContents = new Map();\n        this.shopContents = new Map();\n        this.TIER_INFO = this.scene.registry.get(\"tier-buttons\");\n        this.SHOP_INFO = this.scene.registry.get(\"shop-buttons\");\n        this.WEAPON_INFO = this.scene.registry.get(\"weapon-buttons\");\n        this.SKIN_INFO = this.scene.registry.get(\"skin-buttons\");\n        this.BOX_INFO = this.scene.registry.get(\"box-buttons\");\n        this.createBase();\n        this.createNavigationButtons();\n        this.createLevelsJournal();\n        this.createShopJournal();\n        this.createSkinsJournal();\n        this.createBoxesJournal();\n        this.setupEventListeners();\n        this.setX(this.HIDDEN_X);\n        this.setVisible(false);\n    }\n    createBase() {\n        this.basePaper = this.scene.add.image(0, 0, \"Page\").setOrigin(0.5).setScale(JOURNAL_SCALE);\n        this.add(this.basePaper);\n    }\n    createNavigationButtons() {\n        // Close button (always visible)\n        this.closeButton = this.scene.add.image(-250, -260, \"close\").setScale(0.15, 0.15).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>this.closeButton.setTint(0xff9999)).on(\"pointerout\", ()=>this.closeButton.clearTint()).on(\"pointerdown\", ()=>{\n            this.scene.sound.play(\"click\");\n            this.closeJournal();\n        });\n        //drop weapon button\n        this.dropButton = this.scene.add.image(-260, -170, \"drop-button\").setOrigin(0.5).setScale(0.15).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>this.dropButton.setTexture(\"drop-button-active\")).on(\"pointerout\", ()=>this.dropButton.setTexture(\"drop-button\")).on(\"pointerdown\", ()=>{\n            this.scene.sound.play(\"click\");\n            _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"set-weapon\", undefined);\n            this.closeJournal();\n        });\n        // Back button (only visible in tier view)\n        const backButtonUI = this.scene.add.image(0, 0, \"backarrow3\").setOrigin(0.5).setScale(JOURNAL_SCALE);\n        // Create invisible hit area for the button\n        const backHitArea = this.scene.add.rectangle(185, 245, 70, 70, 0xff0000, HITAREA_ALPHA // Alpha (completely transparent)\n        ).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            backButtonUI.setTexture(\"backarrow1\");\n        }).on(\"pointerout\", ()=>{\n            backButtonUI.setTexture(\"backarrow3\");\n        }).on(\"pointerdown\", ()=>{\n            this.goBack();\n        });\n        this.backButton = new Phaser.GameObjects.Container(this.scene, 0, 0);\n        this.backButton.setVisible(false);\n        this.backButton.add([\n            backButtonUI,\n            backHitArea\n        ]);\n        // Advance button (only visible in levels main view)\n        const advanceButtonUI = this.scene.add.image(0, 0, \"backarrow\").setOrigin(0.5).setScale(JOURNAL_SCALE);\n        // Create invisible hit area for the button\n        const hitArea = this.scene.add.rectangle(185, 245, 70, 70, 0xff0000, HITAREA_ALPHA // Alpha (completely transparent)\n        ).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            advanceButtonUI.setScale(JOURNAL_SCALE + 0.005);\n        }).on(\"pointerout\", ()=>{\n            advanceButtonUI.setScale(JOURNAL_SCALE);\n        }).on(\"pointerdown\", ()=>{\n            switch(this.currentJournal){\n                case \"levels\":\n                    this.advanceTier();\n                    break;\n                case \"boxes\":\n                    this.advanceBox();\n                    break;\n                case \"skins\":\n                    this.advanceSkin();\n                    break;\n                case \"shop\":\n                    this.advanceShop();\n                    break;\n                default:\n                    break;\n            }\n        });\n        this.advanceButton = new Phaser.GameObjects.Container(this.scene, 0, 0);\n        this.advanceButton.setVisible(false);\n        this.advanceButton.add([\n            advanceButtonUI,\n            hitArea\n        ]);\n        this.add([\n            this.closeButton,\n            this.advanceButton,\n            this.backButton,\n            this.dropButton\n        ]);\n    }\n    setupEventListeners() {\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"open-journal\", this.handleJournalOpen, this);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"marketcap-changed\", this.onMarketcapChange, this);\n    }\n    // LEVELS FUNCTIONALITY\n    createLevelsJournal() {\n        const container = new Phaser.GameObjects.Container(this.scene, 0, 0);\n        const texture = this.TIER_INFO[this.currentTier].unlocked ? `tier${this.currentTier}-button` : `tier${this.currentTier}-button-locked`;\n        // Create the tier page that will change textures\n        this.tierPage = this.scene.add.image(0, 0, texture).setOrigin(0.5).setScale(JOURNAL_SCALE);\n        const tierHitArea = this.scene.add.rectangle(-25, 0, 350, 400, 0xff0000, HITAREA_ALPHA // Alpha (completely transparent)\n        ).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            this.tierPage.setScale(JOURNAL_SCALE + 0.01);\n        }).on(\"pointerout\", ()=>{\n            this.tierPage.setScale(JOURNAL_SCALE);\n        }).on(\"pointerdown\", ()=>{\n            this.openTier(this.currentTier);\n        });\n        // Add everything to the container\n        container.add([\n            this.tierPage,\n            tierHitArea\n        ]);\n        this.journalContents.set(\"levels\", container);\n        this.add(container);\n        container.setVisible(false);\n        // Create containers for each tier\n        for(let tier = 1; tier <= 4; tier++){\n            const container = new Phaser.GameObjects.Container(this.scene, 0, 0).setName(`tier${tier}-container`);\n            // Add weapon buttons for this tier\n            const weapons = this.WEAPON_INFO.filter((weapon)=>weapon.tier === tier);\n            weapons.forEach((weapon, index)=>{\n                const weaponButton = this.createWeaponButton(weapon, index);\n                container.add(weaponButton);\n            });\n            this.tierContents.set(tier, container);\n            this.add(container);\n            container.setVisible(false);\n        }\n    }\n    advanceTier() {\n        // Increment tier or loop back to 1\n        this.currentTier = this.currentTier % 4 + 1;\n        const texture = this.TIER_INFO[this.currentTier].unlocked ? `tier${this.currentTier}-button` : `tier${this.currentTier}-button-locked`;\n        // Create a fade transition\n        this.scene.tweens.add({\n            targets: [\n                this.tierPage\n            ],\n            alpha: 0,\n            duration: 200,\n            onComplete: ()=>{\n                // Update the texture and text\n                this.tierPage.setTexture(texture);\n                // Fade back in\n                this.scene.tweens.add({\n                    targets: [\n                        this.tierPage\n                    ],\n                    alpha: 1,\n                    duration: 200\n                });\n            }\n        });\n        // Play page turn sound\n        this.scene.sound.play(\"page-turn\");\n    }\n    createWeaponButton(weaponData, index) {\n        const button = new Phaser.GameObjects.Container(this.scene, 0, 0).setName(`${weaponData.name}-button-container`);\n        const weaponTexture = weaponData.purchased ? `${weaponData.name}-button` : `${weaponData.name}-button-locked`;\n        // Create weapon display\n        const weaponButton = this.scene.add.image(0, 0, weaponTexture).setOrigin(0.5).setScale(JOURNAL_SCALE).setName(`${weaponData.name}-button-texture`);\n        // Create hit area\n        const hitArea = this.scene.add.rectangle(weaponData.hitbox.x, weaponData.hitbox.y, weaponData.hitbox.width, weaponData.hitbox.height, 0xff0000, HITAREA_ALPHA).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            weaponButton.setScale(JOURNAL_SCALE + 0.01);\n        }).on(\"pointerout\", ()=>{\n            weaponButton.setScale(JOURNAL_SCALE);\n        }).on(\"pointerdown\", ()=>this.handleWeaponSelection(weaponData));\n        button.add([\n            hitArea,\n            weaponButton\n        ]);\n        return button;\n    }\n    handleWeaponSelection(weaponData) {\n        this.scene.sound.play(\"click\");\n        if (!weaponData.purchased) {\n            if (!this.canAfford(weaponData.price)) {\n                this.scene.sound.play(\"click-deny\");\n                return;\n            }\n            // deduct coins, update config/ localstore, update texture\n            this.scene.sound.play(\"coin-pickup\");\n            _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"coins-changed\", -weaponData.price);\n            const page = this.tierContents.get(this.currentTier);\n            const buttonContainer = page?.getByName(`${weaponData.name}-button-container`);\n            const texture = buttonContainer?.getByName(`${weaponData.name}-button-texture`);\n            const foundWeapon = this.WEAPON_INFO.find((weapon)=>weapon.name === weaponData.name);\n            if (foundWeapon) {\n                foundWeapon.purchased = true;\n            }\n            texture.setTexture(`${weaponData.name}-button`);\n            // set purchased state in local storage\n            this.updatePurchaseState(\"weapon\", weaponData.name);\n        }\n        this.scene.registry.set(\"equiped-item\", weaponData.name);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"set-weapon\", weaponData.name);\n        this.closeJournal();\n        return;\n    }\n    openTier(tier) {\n        if (!this.TIER_INFO[tier].unlocked) {\n            this.scene.sound.play(\"click-deny\");\n            return;\n        }\n        this.scene.sound.play(\"page-turn\");\n        this.currentTier = tier;\n        this.currentState = \"tier\";\n        // Change tier page texture\n        this.basePaper.setTexture(this.TIER_INFO[this.currentTier].bg);\n        // Hide main content\n        this.journalContents.get(this.currentJournal)?.setVisible(false);\n        // Show tier content\n        this.tierContents.get(this.currentTier)?.setVisible(true);\n        // Show back button, hide advance button\n        this.backButton.setVisible(true);\n        this.advanceButton.setVisible(false);\n    }\n    goBack() {\n        this.scene.sound.play(\"page-turn\");\n        if (this.currentState === \"tier\") {\n            // Return to main level select\n            this.basePaper.setTexture(\"levels-page\");\n            this.tierContents.get(this.currentTier)?.setVisible(false);\n            this.journalContents.get(\"levels\")?.setVisible(true);\n            this.currentState = \"main\";\n            // Update buttons\n            this.backButton.setVisible(false);\n            this.advanceButton.setVisible(true);\n        }\n    }\n    // SHOP FUNCTIONALITY\n    createShopJournal() {\n        const container = new Phaser.GameObjects.Container(this.scene, 0, 0);\n        this.journalContents.set(\"shop\", container);\n        this.add(container);\n        container.setVisible(false);\n        for(let i = 1; i < 4; i++){\n            const container = new Phaser.GameObjects.Container(this.scene, 0, 0);\n            const items = this.SHOP_INFO.filter((item)=>item.tier === i);\n            items.forEach((item, index)=>{\n                const itemButton = this.createItemButton(item, index);\n                container.add(itemButton);\n            });\n            this.shopContents.set(i, container);\n            this.add(container);\n            container.setVisible(false);\n        }\n    }\n    advanceShop() {\n        // Prevent multiple advances while animation is playing\n        if (this.isAdvancing) return;\n        this.isAdvancing = true;\n        const currentContent = this.shopContents.get(this.currentShop);\n        if (!currentContent) {\n            this.isAdvancing = false;\n            return;\n        }\n        // Ensure current content is visible and at full alpha before starting fade\n        currentContent.setVisible(true);\n        currentContent.setAlpha(1);\n        // Calculate next shop number\n        const nextShop = this.currentShop === 3 ? 1 : this.currentShop + 1;\n        const nextContent = this.shopContents.get(nextShop);\n        if (!nextContent) {\n            this.isAdvancing = false;\n            return;\n        }\n        // Fade out current content\n        this.scene.tweens.add({\n            targets: currentContent,\n            alpha: 0,\n            duration: 200,\n            onComplete: ()=>{\n                // Hide current content\n                currentContent.setVisible(false);\n                currentContent.setAlpha(1);\n                // Update shop number and prepare next content\n                this.currentShop = nextShop;\n                nextContent.setAlpha(0);\n                nextContent.setVisible(true);\n                // Fade in new content\n                this.scene.tweens.add({\n                    targets: nextContent,\n                    alpha: 1,\n                    duration: 200,\n                    onComplete: ()=>{\n                        this.isAdvancing = false;\n                    }\n                });\n            }\n        });\n        // Play page turn sound\n        this.scene.sound.play(\"page-turn\");\n    }\n    createItemButton(item, index) {\n        const button = new Phaser.GameObjects.Container(this.scene, 0, 0).setName(item.name);\n        let texture = item.purchased ? `${item.name}-item` : `${item.name}-item-locked`;\n        if (item.name === \"flamethrower\") {\n            texture = item.unlocked ? \"flamethrower-unreleased\" : texture;\n        }\n        // const itemTexture = item.unlocked ? item.texture : item.texture + \"-locked\";\n        // Create weapon display\n        const itemSprite = this.scene.add.image(0, 0, texture).setOrigin(0.5).setScale(JOURNAL_SCALE).setName(`${item.name}-texture`);\n        // Create hit area\n        const hitArea = this.scene.add.rectangle(item.hitbox.x, item.hitbox.y, item.hitbox.width, item.hitbox.height, 0xff0000, HITAREA_ALPHA).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            itemSprite.setScale(JOURNAL_SCALE + 0.01);\n        }).on(\"pointerout\", ()=>{\n            itemSprite.setScale(JOURNAL_SCALE);\n        }).on(\"pointerdown\", ()=>this.handleItemSelection(item));\n        button.add([\n            hitArea,\n            itemSprite\n        ]);\n        return button;\n    }\n    handleItemSelection(item) {\n        this.scene.sound.play(\"click\");\n        if (!item.unlocked) {\n            // un released item, deny and return\n            this.scene.sound.play(\"click-deny\");\n            return;\n        }\n        if (!item.purchased) {\n            if (!this.canAfford(item.price)) {\n                this.scene.sound.play(\"click-deny\");\n                return;\n            }\n            // deduct coins, update config/ localstore, update texture\n            this.scene.sound.play(\"coin-pickup\");\n            _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"coins-changed\", -item.price);\n            const page = this.shopContents.get(this.currentShop)?.getByName(item.name);\n            const texture = page.getByName(`${item.name}-texture`);\n            const foundItem = this.SHOP_INFO.find((itemOut)=>itemOut.name === item.name);\n            if (foundItem) {\n                foundItem.purchased = true;\n            }\n            texture.setTexture(`${item.name}-item`);\n            // set purchased state in local storage\n            this.updatePurchaseState(\"item\", item.name);\n        }\n        this.scene.registry.set(\"equiped-item\", item.name);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"set-weapon\", item.name);\n        this.closeJournal();\n        return;\n    }\n    // SKINS FUNCTIONALITY\n    createSkinsJournal() {\n        const container = new Phaser.GameObjects.Container(this.scene, 0, 0);\n        const config = this.SKIN_INFO[this.currentSkin];\n        const texture = config.unlocked ? config.purchased ? `${config.name}-skin-purchased` : `${config.name}-skin-unlocked` : `${config.name}-skin-locked`;\n        this.skinPage = this.scene.add.image(0, 0, texture).setOrigin(0.5).setScale(JOURNAL_SCALE);\n        const skinHitArea = this.scene.add.rectangle(-25, 25, 350, 400, 0xff0000, HITAREA_ALPHA // Alpha (completely transparent)\n        ).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            this.skinPage.setScale(JOURNAL_SCALE + 0.01);\n        }).on(\"pointerout\", ()=>{\n            this.skinPage.setScale(JOURNAL_SCALE);\n        }).on(\"pointerdown\", ()=>{\n            this.handleSelectSkin(this.SKIN_INFO[this.currentSkin]);\n        });\n        container.add([\n            this.skinPage,\n            skinHitArea\n        ]);\n        this.journalContents.set(\"skins\", container);\n        this.add(container);\n        container.setVisible(false);\n    }\n    advanceSkin() {\n        if (this.isAnimating || this.isAdvancing) return;\n        this.isAdvancing = true;\n        this.isAnimating = true;\n        this.currentSkin = this.currentSkin % 7 + 1;\n        const config = this.SKIN_INFO[this.currentSkin];\n        const texture = config.unlocked ? config.purchased ? `${config.name}-skin-purchased` : `${config.name}-skin-unlocked` : `${config.name}-skin-locked`;\n        this.scene.tweens.add({\n            targets: [\n                this.skinPage\n            ],\n            alpha: 0,\n            duration: 200,\n            onComplete: ()=>{\n                this.skinPage.setTexture(texture);\n                this.scene.tweens.add({\n                    targets: [\n                        this.skinPage\n                    ],\n                    alpha: 1,\n                    duration: 200,\n                    onComplete: ()=>{\n                        this.isAnimating = false;\n                        this.isAdvancing = false;\n                    }\n                });\n            }\n        });\n        this.scene.sound.play(\"page-turn\");\n    }\n    handleSelectSkin(skin) {\n        this.scene.sound.play(\"click\");\n        // If the skin isnt unlocked by MC\n        if (!skin.unlocked) {\n            this.scene.sound.play(\"click-deny\");\n            return;\n        }\n        // If the skin isn't purchased\n        if (!skin.purchased) {\n            if (!this.canAfford(skin.price)) {\n                this.scene.sound.play(\"click-deny\");\n                return;\n            }\n            // deduct coins, update config/ localstore, update texture\n            this.scene.sound.play(\"coin-pickup\");\n            _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"coins-changed\", -skin.price);\n            this.SKIN_INFO[this.currentSkin].purchased = true;\n            this.skinPage.setTexture(`${skin.name}-skin-purchased`);\n            // set purchased state in local storage\n            this.updatePurchaseState(\"skin\", skin.name);\n        }\n        // Equip Skin\n        this.scene.registry.set(\"equipped-skin\", skin.name);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"skin-equipped\", skin.name);\n        this.closeJournal();\n        return;\n    }\n    // BOXES FUNCTIONALITY\n    createBoxesJournal() {\n        const container = new Phaser.GameObjects.Container(this.scene, 0, 0);\n        const config = this.BOX_INFO[this.currentBox];\n        const texture = config.purchased ? `${config.name}-box` : `${config.name}-box-locked`;\n        this.boxPage = this.scene.add.image(0, 0, texture).setOrigin(0.5).setScale(JOURNAL_SCALE);\n        const boxHitArea = this.scene.add.rectangle(-25, 0, 350, 350, 0xff0000, HITAREA_ALPHA // Alpha (completely transparent)\n        ).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            this.boxPage.setScale(JOURNAL_SCALE + 0.01);\n        }).on(\"pointerout\", ()=>{\n            this.boxPage.setScale(JOURNAL_SCALE);\n        }).on(\"pointerdown\", ()=>{\n            this.handleSelectBox(this.BOX_INFO[this.currentBox]);\n        });\n        // Add everything to the container\n        container.add([\n            this.boxPage,\n            boxHitArea\n        ]);\n        this.journalContents.set(\"boxes\", container);\n        this.add(container);\n        container.setVisible(false);\n    }\n    advanceBox() {\n        if (this.isAnimating || this.isAdvancing) return;\n        this.isAdvancing = true;\n        this.isAnimating = true;\n        this.currentBox = this.currentBox % 6 + 1;\n        const config = this.BOX_INFO[this.currentBox];\n        const texture = config.purchased ? `${config.name}-box` : `${config.name}-box-locked`;\n        this.scene.tweens.add({\n            targets: [\n                this.boxPage\n            ],\n            alpha: 0,\n            duration: 200,\n            onComplete: ()=>{\n                this.boxPage.setTexture(texture);\n                // Fade back in\n                this.scene.tweens.add({\n                    targets: [\n                        this.boxPage\n                    ],\n                    alpha: 1,\n                    duration: 200,\n                    onComplete: ()=>{\n                        this.isAnimating = false;\n                        this.isAdvancing = false;\n                    }\n                });\n            }\n        });\n        this.scene.sound.play(\"page-turn\");\n    }\n    handleSelectBox(box) {\n        this.scene.sound.play(\"click\");\n        if (box.name === \"coming-soon\") {\n            this.scene.sound.play(\"click-deny\");\n            return;\n        }\n        if (!box.purchased) {\n            if (!this.canAfford(box.price)) {\n                this.scene.sound.play(\"click-deny\");\n                return;\n            }\n            // deduct coins, update config/ localstore, update texture\n            this.scene.sound.play(\"coin-pickup\");\n            _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"coins-changed\", -box.price);\n            this.BOX_INFO[this.currentBox].purchased = true;\n            this.boxPage.setTexture(`${box.name}-box`);\n            // set purchased state in local storage\n            this.updatePurchaseState(\"box\", box.name);\n        }\n        this.scene.registry.set(`equipped-bg`, box.name);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"bg-change\", box.bg);\n        this.closeJournal();\n        return;\n    }\n    // JOURNAL FUNCTIONALITY\n    openJournal(type) {\n        this.isAnimating = true;\n        this.currentJournal = type;\n        this.currentState = \"main\";\n        this.setVisible(true);\n        switch(type){\n            case \"levels\":\n                this.basePaper.setTexture(\"levels-page\");\n                break;\n            case \"boxes\":\n                this.basePaper.setTexture(\"boxes-page\");\n                break;\n            case \"skins\":\n                this.basePaper.setTexture(\"skins-page\");\n                break;\n            case \"shop\":\n                this.currentState = \"shop\";\n                this.basePaper.setTexture(\"shop-page\");\n                this.shopContents.get(this.currentShop)?.setVisible(true);\n                break;\n        }\n        this.advanceButton.setVisible(true);\n        // Show correct content\n        this.journalContents.forEach((content, journalType)=>{\n            content.setVisible(journalType === type);\n        });\n        // Slide in animation\n        this.scene.tweens.add({\n            targets: this,\n            x: this.VISIBLE_X,\n            duration: 500,\n            ease: \"Power2\",\n            onComplete: ()=>{\n                this.isAnimating = false;\n            }\n        });\n    }\n    switchJournal(newType) {\n        this.scene.sound.play(\"page-turn\");\n        this.basePaper.setTexture(\"Page\");\n        if (this.currentState === \"tier\") {\n            this.tierContents.get(this.currentTier)?.setVisible(false);\n            this.backButton.setVisible(false);\n        }\n        if (this.currentState === \"shop\") {\n            this.shopContents.get(this.currentShop)?.setVisible(false);\n            this.backButton.setVisible(false);\n        }\n        switch(newType){\n            case \"levels\":\n                this.currentState = \"main\";\n                this.basePaper.setTexture(\"levels-page\");\n                break;\n            case \"shop\":\n                this.currentState = \"shop\";\n                this.basePaper.setTexture(\"shop-page\");\n                this.shopContents.get(this.currentShop)?.setVisible(true);\n                break;\n            case \"skins\":\n                this.currentState = \"main\";\n                this.basePaper.setTexture(\"skins-page\");\n                break;\n            case \"boxes\":\n                this.currentState = \"main\";\n                this.basePaper.setTexture(\"boxes-page\");\n                break;\n        }\n        // Hide current content\n        this.journalContents.get(this.currentJournal)?.setVisible(false);\n        // Show new content\n        this.journalContents.get(newType)?.setVisible(true);\n        // Update current journal\n        this.currentJournal = newType;\n        // Update button visibility\n        this.advanceButton.setVisible(true);\n    }\n    closeJournal() {\n        if (this.currentState === \"tier\") {\n            this.tierContents.get(this.currentTier)?.setVisible(false);\n            this.backButton.setVisible(false);\n        }\n        if (this.currentState === \"shop\") {\n            this.shopContents.get(this.currentShop)?.setVisible(false);\n        }\n        if (this.isAnimating) return;\n        this.isAnimating = true;\n        // Slide out animation\n        this.scene.tweens.add({\n            targets: this,\n            x: this.HIDDEN_X,\n            duration: 500,\n            ease: \"Power2\",\n            onComplete: ()=>{\n                this.isAnimating = false;\n                this.setVisible(false);\n                this.currentJournal = null;\n                this.currentState = \"closed\";\n                this.inputState.unlock(\"journal\");\n                _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"journal-closed\");\n            }\n        });\n    }\n    // Utility methods\n    onMarketcapChange(newMarketcap) {\n        this.closeJournal();\n        this.scene.registry.set(\"marketcap\", newMarketcap);\n        this.TIER_INFO[2].unlocked = newMarketcap >= 1000000;\n        this.TIER_INFO[3].unlocked = newMarketcap >= 5000000;\n        this.TIER_INFO[4].unlocked = newMarketcap >= 10000000;\n        this.SKIN_INFO[3].unlocked = newMarketcap >= 1000000;\n        this.SKIN_INFO[4].unlocked = newMarketcap >= 5000000;\n        this.SKIN_INFO[6].unlocked = newMarketcap >= 10000000;\n    }\n    updatePurchaseState(type, itemName) {\n        const storageKey = `${type}-purchases`;\n        const currentPurchases = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_0__.getPurchasedStates)(storageKey);\n        currentPurchases[itemName] = true;\n        localStorage.setItem(storageKey, JSON.stringify(currentPurchases));\n    }\n    getCoins() {\n        const currentCoins = localStorage.getItem(\"coins\");\n        if (!currentCoins) {\n            localStorage.setItem(\"coins\", \"0\");\n            return 0;\n        }\n        const coinNum = parseInt(currentCoins);\n        return coinNum;\n    }\n    canAfford(price) {\n        // Get current coins from game state\n        const coins = this.getCoins();\n        return coins >= price;\n    }\n    destroy() {\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.off(\"open-journal\", this.handleJournalOpen, this);\n        super.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/classes/Journal.ts\n");

/***/ }),

/***/ "./src/game/classes/ScoreBar.ts":
/*!**************************************!*\
  !*** ./src/game/classes/ScoreBar.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScoreBar: () => (/* binding */ ScoreBar)\n/* harmony export */ });\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n\nclass ScoreBar extends Phaser.GameObjects.Container {\n    constructor(config){\n        super(config.scene, config.x, config.y);\n        this.skin = \"paper\";\n        this.damageState = \"clean\";\n        this.scene.add.existing(this);\n        this.healthBarWidth = 420;\n        this.health = config.health;\n        const kills = parseInt(localStorage.getItem(\"kills\") || \"0\");\n        const coins = parseInt(localStorage.getItem(\"coins\") || \"0\");\n        this.kills = kills;\n        this.coins = coins;\n        this.createHealthBar(config.health);\n        this.createKillCount(kills);\n        this.createCoins(coins);\n        this.setupEventListeners();\n    }\n    createHealthBar(initialHealth) {\n        // Health Bar Fill\n        this.healthBarFill = this.scene.add.rectangle(0, 10, this.healthBarWidth, 20, 0x30cfd0).setOrigin(0.5).setDepth(1).setScrollFactor(0);\n        this.add(this.healthBarFill);\n        // Health Bar Background\n        this.healthBarBackground = this.scene.add.image(0, 10, \"healthbar\").setScale(0.45).setOrigin(0.5).setDepth(4).setScrollFactor(0);\n        this.add(this.healthBarBackground);\n        // Health Bar Marker\n        this.healthBarMarker = this.scene.add.image(200, 8, \"paper-clean\").setScale(0.2).setOrigin(0.5).setDepth(5).setScrollFactor(0);\n        this.add(this.healthBarMarker);\n    }\n    createKillCount(initialKills) {\n        this.killCountText = this.scene.add.text(350, 0, `Kills: ${initialKills}`, {\n            fontFamily: \"Ultra\",\n            fontSize: \"24px\",\n            stroke: \"#000000\",\n            strokeThickness: 4,\n            color: \"#ffffff\"\n        }).setOrigin(0.5).setScrollFactor(0);\n        this.add(this.killCountText);\n    }\n    createCoins(initialCoins) {\n        this.coinsText = this.scene.add.text(525, 0, `${initialCoins}`, {\n            fontFamily: \"Ultra\",\n            fontSize: \"24px\",\n            stroke: \"#000000\",\n            strokeThickness: 4,\n            color: \"#ffffff\"\n        }).setOrigin(0.5).setScrollFactor(0);\n        this.coinImage = this.scene.add.image(455, 0, \"coin\").setOrigin(0.5).setScale(0.07).setScrollFactor(0);\n        this.add([\n            this.coinsText,\n            this.coinImage\n        ]);\n    }\n    setupEventListeners() {\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"health-update\", this.setHealth, this);\n        // Listen to health changes\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"health-changed\", this.updateHealth, this);\n        // Listen to kill count changes\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"kill-count-changed\", this.updateKills, this);\n        // Listen to coins changes\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"coins-changed\", this.updateCoins, this);\n        // Listen to Skin changes\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"skin-equipped\", this.updateSkin, this);\n        // Listen to Damage State changes\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"damage-state-changed\", this.updateDamageState, this);\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"reset-health-bar\", this.resetHealthBar, this);\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"set-coins\", this.setCoins, this);\n    }\n    updateSkin(skin) {\n        this.skin = skin;\n        this.healthBarMarker.setTexture(this.skin + \"-\" + this.damageState);\n    }\n    updateDamageState(damageState) {\n        this.damageState = damageState;\n        this.healthBarMarker.setTexture(this.skin + \"-\" + this.damageState);\n    }\n    updateKills() {\n        this.kills += 1;\n        this.killCountText.setText(`Kills: ${this.kills}`);\n        localStorage.setItem(\"kills\", this.kills.toString());\n    }\n    setHealth(amount) {\n        this.health = amount;\n        const healthPercent = Phaser.Math.Clamp(this.health / 100, 0, 1);\n        this.healthBarFill.width = this.healthBarWidth * healthPercent;\n        this.moveHealthBarMarker(healthPercent);\n    }\n    setCoins(value) {\n        this.coins = value;\n        this.coinsText.setText(`${this.coins}`);\n        localStorage.setItem(\"coins\", this.coins.toString());\n    }\n    moveHealthBarMarker(healthPercent) {\n        // Stop marker movement at 5% health\n        const minHealthPercent = 0.05;\n        if (healthPercent < minHealthPercent) {\n            healthPercent = minHealthPercent;\n        }\n        const newWidth = this.healthBarWidth * healthPercent;\n        const markerX = 200 - (this.healthBarWidth - newWidth); // Start at 200 and move right based on remaining health\n        this.healthBarMarker.setX(markerX);\n    }\n    updateHealth(amount) {\n        // Don't update health if already at 0 (dead and respawning)\n        if (this.health <= 0) {\n            return;\n        }\n        // Prevent health from going negative by clamping the amount\n        const newHealth = Math.max(0, this.health - amount);\n        this.health = Phaser.Math.Clamp(newHealth, 0, 100);\n        const healthPercent = Phaser.Math.Clamp(this.health / 100, 0, 1);\n        this.healthBarFill.width = this.healthBarWidth * healthPercent;\n        this.moveHealthBarMarker(healthPercent);\n    }\n    resetHealthBar() {\n        this.updateKills();\n        this.health = 100;\n        this.healthBarFill.width = this.healthBarWidth;\n        this.moveHealthBarMarker(1);\n        this.damageState = \"clean\";\n        this.healthBarMarker.setTexture(this.skin + \"-\" + this.damageState);\n    }\n    updateCoins(amount = 1) {\n        this.coins = Math.min(this.coins + amount, 99999);\n        this.coinsText.setText(`${this.coins}`);\n        localStorage.setItem(\"coins\", this.coins.toString());\n    }\n    destroy(fromScene) {\n        // Remove event listeners\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.off(\"health-changed\", this.updateHealth, this);\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.off(\"kill-count-changed\", this.updateKills, this);\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.off(\"coins-changed\", this.updateCoins, this);\n        super.destroy(fromScene);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/classes/ScoreBar.ts\n");

/***/ }),

/***/ "./src/game/classes/Weapon.ts":
/*!************************************!*\
  !*** ./src/game/classes/Weapon.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Weapon: () => (/* binding */ Weapon)\n/* harmony export */ });\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var _InputState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InputState */ \"./src/game/classes/InputState.ts\");\n\n\n//TODO: Make sure to remove the joints for sticky bombs working on it\n//TODO: lightsaber, chainsaw, sitckybomb, katana, dynamite\nclass Weapon {\n    static{\n        this.TRIGGER_DELAY = 100 // 100ms hold requirement before firing\n        ;\n    }\n    static{\n        // Add to class properties\n        this.FLAMETHROWER_CONFIG = {\n            damagePerTick: 0.5,\n            damageInterval: 100,\n            range: 250\n        };\n    }\n    static{\n        this.WEAPON_CONFIGS = {\n            knife: {\n                texture: \"knife\",\n                width: 120,\n                height: 80,\n                name: \"knife\",\n                fireSound: [\n                    \"throwknife-fire\"\n                ],\n                impactSound: [\n                    \"throwknife-impact\"\n                ],\n                fireRate: 500,\n                burstSize: 1,\n                damage: 0.8,\n                isThrowable: true,\n                specialCase: false,\n                projectileSpeed: 40,\n                projectileDisplaySize: {\n                    width: 120,\n                    height: 80\n                },\n                projectileTexture: \"knife\"\n            },\n            deagle: {\n                texture: \"deaglefiring_00018\",\n                width: 200,\n                height: 100,\n                name: \"deagle\",\n                fireRate: 500,\n                burstSize: 1,\n                fireSound: [\n                    \"deagle-fire\",\n                    \"deagle-cock\"\n                ],\n                animationKey: \"deagleFire\",\n                damage: 1,\n                isThrowable: false,\n                specialCase: false,\n                projectileSpeed: 75,\n                projectileScale: {\n                    x: 0.06,\n                    y: 0.1\n                },\n                projectileTexture: \"deagle-bullet\"\n            },\n            grenade: {\n                texture: \"grenade\",\n                width: 100,\n                height: 80,\n                name: \"grenade\",\n                fireRate: 1000,\n                burstSize: 1,\n                fireSound: [\n                    \"grenade-fire\"\n                ],\n                damage: 2,\n                isThrowable: true,\n                specialCase: false,\n                projectileSpeed: 25,\n                projectileDisplaySize: {\n                    width: 100,\n                    height: 80\n                },\n                projectileTexture: \"grenade\",\n                projectileConfig: {\n                    shape: {\n                        type: \"circle\",\n                        radius: 15\n                    },\n                    angularVelocity: 0.2,\n                    label: \"grenade\"\n                }\n            },\n            tommy: {\n                texture: \"tommy\",\n                width: 300,\n                height: 150,\n                name: \"tommy\",\n                fireRate: 60,\n                burstSize: 4,\n                burstDelay: 400,\n                fireSound: [\n                    \"tommy-fire\"\n                ],\n                animationKey: \"tommyFire\",\n                damage: 0.8,\n                isThrowable: false,\n                specialCase: false,\n                projectileSpeed: 50,\n                projectileScale: {\n                    x: 0.04,\n                    y: 0.08\n                },\n                projectileTexture: \"tommy-bullet\"\n            },\n            \"sticky-bomb\": {\n                texture: \"sticky-bomb\",\n                width: 200,\n                height: 100,\n                name: \"sticky-bomb\",\n                fireRate: 1000,\n                burstSize: 1,\n                fireSound: [\n                    \"throwknife-fire\"\n                ],\n                impactSound: [\n                    \"sticky-bomb-impact\"\n                ],\n                damage: 3,\n                isThrowable: true,\n                specialCase: false,\n                projectileSpeed: 25,\n                projectileDisplaySize: {\n                    width: 200,\n                    height: 100\n                },\n                projectileTexture: \"sticky-bomb\",\n                projectileConfig: {\n                    shape: {\n                        type: \"circle\",\n                        radius: 15\n                    },\n                    angularVelocity: 0.2,\n                    label: \"sticky-bomb\"\n                }\n            },\n            chainsaw: {\n                texture: \"chainsaw\",\n                width: 300,\n                height: 150,\n                name: \"chainsaw\",\n                fireRate: 100,\n                burstSize: 1,\n                fireSound: [\n                    \"chainsaw-fire\"\n                ],\n                animationKey: \"chainsawFire\",\n                damage: 0.3,\n                isThrowable: false,\n                specialCase: true\n            },\n            rpg: {\n                texture: \"rpg\",\n                width: 350,\n                height: 200,\n                name: \"rpg\",\n                fireRate: 1000,\n                burstSize: 1,\n                fireSound: [\n                    \"rpg-fire\"\n                ],\n                animationKey: \"rpgFire\",\n                damage: 3,\n                isThrowable: false,\n                specialCase: false,\n                projectileSpeed: 50,\n                projectileScale: {\n                    x: 0.25,\n                    y: 0.25\n                },\n                projectileTexture: \"rpg-bullet\"\n            },\n            mg: {\n                texture: \"mg\",\n                width: 350,\n                height: 200,\n                name: \"mg\",\n                fireRate: 100,\n                burstSize: 1,\n                fireSound: [\n                    \"mg-fire\"\n                ],\n                animationKey: \"mgFire\",\n                damage: 0.5,\n                isThrowable: false,\n                specialCase: false,\n                projectileSpeed: 50,\n                projectileScale: {\n                    x: 0.08,\n                    y: 0.08\n                },\n                projectileTexture: \"mg-bullet\"\n            },\n            \"fire-bomb\": {\n                texture: \"fire-bomb\",\n                width: 170,\n                height: 70,\n                name: \"fire-bomb\",\n                fireRate: 1000,\n                burstSize: 1,\n                fireSound: [\n                    \"fire-bomb-fire\"\n                ],\n                impactSound: [\n                    \"fire-bomb-impact\"\n                ],\n                damage: 2,\n                isThrowable: true,\n                specialCase: false,\n                projectileSpeed: 25,\n                projectileDisplaySize: {\n                    width: 170,\n                    height: 70\n                },\n                projectileTexture: \"fire-bomb\",\n                projectileConfig: {\n                    shape: {\n                        type: \"circle\",\n                        radius: 15\n                    },\n                    angularVelocity: 0.2,\n                    label: \"fire-bomb\"\n                }\n            },\n            lightsaber: {\n                texture: \"lightsaber-unlit\",\n                width: 300,\n                height: 150,\n                name: \"lightsaber\",\n                fireRate: 1000,\n                burstSize: 1,\n                damage: 0.5,\n                isThrowable: false,\n                specialCase: true\n            },\n            railgun: {\n                texture: \"railgun\",\n                width: 300,\n                height: 150,\n                name: \"railgun\",\n                fireRate: 1000,\n                burstSize: 1,\n                damage: 4,\n                isThrowable: false,\n                specialCase: true\n            },\n            raygun: {\n                texture: \"raygun\",\n                width: 200,\n                height: 100,\n                name: \"raygun\",\n                fireRate: 200,\n                burstSize: 1,\n                fireSound: [\n                    \"raygun-fire\"\n                ],\n                impactSound: [\n                    \"raygun-impact\"\n                ],\n                animationKey: \"raygunFire\",\n                damage: 2,\n                isThrowable: false,\n                specialCase: false,\n                projectileSpeed: 50,\n                projectileScale: {\n                    x: 0.7,\n                    y: 0.7\n                },\n                projectileTexture: \"raygun-bullet\"\n            },\n            dynamite: {\n                texture: \"dynamite\",\n                width: 80,\n                height: 120,\n                name: \"dynamite\",\n                fireRate: 1000,\n                burstSize: 1,\n                fireSound: [\n                    \"dynamite-fuze\",\n                    \"dynamite-flick\"\n                ],\n                animationKey: \"dynamiteFire\",\n                damage: 2,\n                isThrowable: true,\n                specialCase: false,\n                projectileSpeed: 25,\n                projectileDisplaySize: {\n                    width: 80,\n                    height: 120\n                },\n                projectileTexture: \"dynamite\",\n                projectileConfig: {\n                    shape: {\n                        type: \"circle\",\n                        radius: 15\n                    },\n                    angularVelocity: 0.2,\n                    label: \"dynamite\"\n                }\n            },\n            katana: {\n                texture: \"katana\",\n                width: 300,\n                height: 150,\n                name: \"katana\",\n                fireRate: 500,\n                burstSize: 1,\n                damage: 1,\n                isThrowable: true,\n                specialCase: true,\n                projectileSpeed: 40,\n                projectileDisplaySize: {\n                    width: 300,\n                    height: 150\n                },\n                projectileTexture: \"katana\"\n            },\n            kar98: {\n                texture: \"kar98\",\n                width: 350,\n                height: 175,\n                name: \"kar98\",\n                animationKey: \"kar98Fire\",\n                fireSound: [\n                    \"kar98-fire\",\n                    \"kar98-cock\"\n                ],\n                fireRate: 1000,\n                burstSize: 1,\n                damage: 2,\n                isThrowable: false,\n                specialCase: false,\n                projectileSpeed: 50,\n                projectileScale: {\n                    x: 0.05,\n                    y: 0.05\n                },\n                projectileTexture: \"deagle-bullet\"\n            },\n            flamethrower: {\n                texture: \"flamethrower\",\n                width: 700,\n                height: 350,\n                name: \"flamethrower\",\n                fireRate: 1000,\n                burstSize: 1,\n                animationKey: \"flamethrowerFire\",\n                damage: 0.5,\n                isThrowable: false,\n                specialCase: true\n            }\n        };\n    }\n    static{\n        this.CHAINSAW_CONFIG = {\n            damagePerTick: 1.5,\n            damageInterval: 100,\n            range: 150\n        };\n    }\n    static{\n        // Add lightsaber config similar to chainsaw and flamethrower\n        this.LIGHTSABER_CONFIG = {\n            damagePerTick: 5,\n            damageInterval: 100,\n            range: 200,\n            swingDelay: 300\n        };\n    }\n    constructor(scene, character, effects){\n        this.flipX = false;\n        this.flipY = false;\n        this.isOvercharged = false;\n        this.stickyBombNumber = 0;\n        this.isCharging = false;\n        this.lastFlameDamageTime = 0;\n        this.RAILGUN_CONFIG = {\n            minChargeTime: 500,\n            maxChargeTime: 3000,\n            overchargeDelay: 1000,\n            holdSound: \"railgun-hold\",\n            chargeSound: \"railgun-charge\",\n            fireSound: \"railgun-fire2\",\n            overchargeSound: \"railgun-explode\"\n        };\n        this.lastDamageTime = 0;\n        // Add to class properties\n        this.isLightsaberOpen = false;\n        this.updateRailgunCharge = ()=>{\n            if (!this.chargeStartTime || this.isOvercharged) return;\n            const currentTime = this.scene.time.now;\n            const chargeTime = currentTime - this.chargeStartTime;\n            // Visual feedback based on charge\n            this.updateChargeEffect(chargeTime);\n            // Check for overcharge\n            if (chargeTime >= this.RAILGUN_CONFIG.maxChargeTime) {\n                this.railgunOvercharge();\n            }\n        };\n        this.scene = scene;\n        this.character = character;\n        this.effects = effects;\n        this.inputState = _InputState__WEBPACK_IMPORTED_MODULE_1__.InputState.getInstance();\n        this.barrelPoint = new Phaser.Math.Vector2(0, 0);\n        this.setupEventListeners();\n    }\n    setupEventListeners() {\n        // Add any event listeners needed\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"set-weapon\", this.setWeapon, this);\n        _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.on(\"stop-firing\", this.stopFiring, this);\n    }\n    getCurrentWeaponConfig() {\n        return this.weapon ? Weapon.WEAPON_CONFIGS[this.weapon] : undefined;\n    }\n    setWeapon(weapon) {\n        // Remove and destroy current weapon\n        if (this.currentWeapon) {\n            this.currentWeapon.destroy();\n            this.currentWeapon = undefined;\n        }\n        if (!weapon) {\n            this.weapon = undefined;\n            return;\n        }\n        const config = Weapon.WEAPON_CONFIGS[weapon];\n        if (!config) return;\n        this.weapon = weapon;\n        this.currentWeapon = this.scene.add.sprite(0, 0, config.texture).setDisplaySize(config.width, config.height).setName(config.name).removeFromDisplayList();\n    }\n    railgunOvercharge() {\n        if (this.isOvercharged) return;\n        this.isOvercharged = true;\n        this.scene.sound.stopByKey(this.RAILGUN_CONFIG.holdSound);\n        // Play overcharge effects\n        this.scene.sound.play(this.RAILGUN_CONFIG.overchargeSound);\n        this.effects.playEffect(\"explosion1\", this.barrelPoint.x, this.barrelPoint.y);\n        this.currentWeapon?.stop();\n        // Hide the weapon\n        if (this.currentWeapon?.getDisplayList()) {\n            this.currentWeapon.removeFromDisplayList();\n        }\n        // Reset everything after delay\n        this.scene.time.delayedCall(this.RAILGUN_CONFIG.overchargeDelay, ()=>{\n            this.isOvercharged = false;\n            this.isCharging = false;\n            this.chargeStartTime = undefined;\n            if (this.firingTimer) {\n                this.firingTimer.destroy();\n                this.firingTimer = undefined;\n            }\n        });\n    }\n    updateChargeEffect(chargeTime) {\n        // Calculate charge percentage from 0 to 1 over 3 seconds\n        const chargePercent = Math.min(chargeTime / 3000, 1);\n        // Update visual effects based on charge percentage\n        if (this.currentWeapon) {\n            // Start with white (no tint)\n            if (chargePercent === 0) {\n                this.currentWeapon.setTint(0xffffff);\n            } else {\n                const intensity = Math.floor(255 * (1 - chargePercent));\n                this.currentWeapon.setTint(Phaser.Display.Color.GetColor(255, intensity, intensity));\n            }\n        }\n    }\n    startRailgunCharge() {\n        this.isCharging = true;\n        this.chargeStartTime = this.scene.time.now;\n        // Play charging sound\n        this.scene.sound.play(this.RAILGUN_CONFIG.chargeSound);\n        // Play charge animation\n        this.currentWeapon?.play(\"railgunCharge\");\n        this.currentWeapon?.on(\"animationcomplete\", ()=>{\n            this.currentWeapon?.play(\"railgunHold\");\n            this.scene.sound.play(this.RAILGUN_CONFIG.holdSound, {\n                volume: 0.5\n            });\n        // this.scene.sound.stopByKey(this.RAILGUN_CONFIG.chargeSound);\n        });\n        // Start the charge timer\n        this.firingTimer = this.scene.time.addEvent({\n            delay: 16,\n            callback: this.updateRailgunCharge,\n            callbackScope: this,\n            loop: true\n        });\n    }\n    fireRailgun(chargeTime) {\n        // Calculate damage multiplier based on charge time\n        const chargePercent = Math.min((chargeTime - this.RAILGUN_CONFIG.minChargeTime) / (this.RAILGUN_CONFIG.maxChargeTime - this.RAILGUN_CONFIG.minChargeTime), 1);\n        const config = this.getCurrentWeaponConfig();\n        if (!config) return;\n        // Play fire animation and sound\n        this.currentWeapon?.play(\"railgunFire\");\n        this.scene.sound.stopByKey(this.RAILGUN_CONFIG.holdSound);\n        this.scene.sound.play(this.RAILGUN_CONFIG.fireSound);\n        // Spawn projectile with increased damage based on charge\n        // You'll need to modify your projectile spawning to handle the damage multiplier\n        const baseDamage = config.damage;\n        const chargedDamage = baseDamage * (1 + chargePercent);\n        // TODO: Modify your projectile spawning to use chargedDamage\n        this.spawnProjectile(config, chargedDamage);\n        // Hide the weapon after firing\n        if (this.currentWeapon?.getDisplayList()) {\n            this.currentWeapon.removeFromDisplayList();\n        }\n    }\n    updateFlameDamage() {\n        // Return early if input is locked\n        if (this.inputState.isLocked) {\n            this.scene.sound.stopByKey(\"flamethrower-fire\");\n            if (this.firingTimer) {\n                this.firingTimer.destroy();\n                this.firingTimer = undefined;\n            }\n            return;\n        }\n        const currentTime = this.scene.time.now;\n        // Check if enough time has passed since last damage\n        if (currentTime - this.lastFlameDamageTime < Weapon.FLAMETHROWER_CONFIG.damageInterval) {\n            return;\n        }\n        const characterPos = this.character.getPosition();\n        if (!this.currentWeapon) return;\n        // Calculate distance between flame tip and character\n        const distance = Phaser.Math.Distance.Between(this.barrelPoint.x, this.barrelPoint.y, characterPos.x, characterPos.y);\n        // Only apply damage if within range\n        if (distance <= Weapon.FLAMETHROWER_CONFIG.range) {\n            // Apply damage\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"health-changed\", Weapon.FLAMETHROWER_CONFIG.damagePerTick);\n            // Visual effects\n            this.randomBloodEffect(characterPos);\n            this.randomFireEffect(characterPos);\n            // Spawn coins\n            for(let i = 0; i < 3; i++){\n                this.effects.spawnCoin(characterPos.x, characterPos.y);\n            }\n            this.lastFlameDamageTime = currentTime;\n        }\n        // Optional: Debug visualization of range\n        if (this.debugGraphics) {\n            this.debugGraphics.clear();\n            this.debugGraphics.lineStyle(2, 0xff0000, 0.5);\n            this.debugGraphics.strokeCircle(this.barrelPoint.x, this.barrelPoint.y, Weapon.FLAMETHROWER_CONFIG.range);\n        }\n    }\n    startFiring() {\n        if (this.inputState.isLocked || this.isOvercharged) return;\n        const config = this.getCurrentWeaponConfig();\n        if (!config || !this.weapon) return;\n        // Start tracking trigger hold time\n        this.triggerHoldStartTime = this.scene.time.now;\n        // Show current weapon if it exists but isn't displayed\n        if (this.currentWeapon && !this.currentWeapon.getDisplayList()) {\n            this.currentWeapon.addToDisplayList();\n        }\n        switch(this.weapon){\n            case \"railgun\":\n                if (!this.isCharging) {\n                    this.startRailgunCharge();\n                }\n                break;\n            case \"lightsaber\":\n                if (!this.isLightsaberOpen) {\n                    this.isLightsaberOpen = true;\n                    this.currentWeapon?.play(\"lightsaberOpen\");\n                    this.scene.sound.play(\"lightsaber-ignite\");\n                    this.scene.sound.play(\"lightsaber-active\", {\n                        loop: true\n                    });\n                    // Start swinging after opening animation\n                    this.scene.time.delayedCall(Weapon.LIGHTSABER_CONFIG.swingDelay, ()=>{\n                        this.startLightsaberSwing();\n                    });\n                }\n                break;\n            case \"chainsaw\":\n                if (!this.firingTimer && !this.inputState.isLocked) {\n                    this.currentWeapon?.play(\"chainsawFire\");\n                    this.scene.sound.play(\"chainsaw-fire\", {\n                        loop: true\n                    });\n                    // Start checking for chainsaw damage\n                    this.firingTimer = this.scene.time.addEvent({\n                        delay: 100,\n                        callback: this.updateChainsawDamage,\n                        callbackScope: this,\n                        loop: true\n                    });\n                }\n                break;\n            case \"flamethrower\":\n                // Only start the flamethrower if input is not locked\n                if (!this.firingTimer && !this.inputState.isLocked) {\n                    this.currentWeapon?.play(\"flamethrowerFire\");\n                    this.scene.sound.play(\"flamethrower-fire\", {\n                        loop: true\n                    });\n                    // Start checking for flame damage\n                    this.firingTimer = this.scene.time.addEvent({\n                        delay: 100,\n                        callback: this.updateFlameDamage,\n                        callbackScope: this,\n                        loop: true\n                    });\n                }\n                break;\n            case \"katana\":\n                this.scene.sound.play(\"katana-pullout\");\n            // Intentionally fall through to default case\n            default:\n                {\n                    // Clear any existing firing timer\n                    if (this.firingTimer) {\n                        this.firingTimer.destroy();\n                        this.firingTimer = undefined;\n                    }\n                    switch(this.weapon){\n                        case \"tommy\":\n                            if (config.fireSound) {\n                                config.fireSound.forEach((sound)=>{\n                                    this.scene.sound.play(sound, {\n                                        volume: 0.5,\n                                        loop: true\n                                    });\n                                });\n                            }\n                            break;\n                        case \"mg\":\n                            if (config.fireSound) {\n                                config.fireSound.forEach((sound)=>{\n                                    this.scene.sound.play(sound, {\n                                        volume: 0.5,\n                                        loop: true\n                                    });\n                                });\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                    let lastFired = 0;\n                    let burstCount = 0;\n                    let canFire = true;\n                    const attemptFire = ()=>{\n                        const currentTime = this.scene.time.now;\n                        // Check if trigger has been held long enough\n                        if (!this.triggerHoldStartTime || currentTime - this.triggerHoldStartTime < Weapon.TRIGGER_DELAY) {\n                            return;\n                        }\n                        if (!this.scene.input.activePointer.isDown) {\n                            canFire = true;\n                            burstCount = 0;\n                            return;\n                        }\n                        // Only fire if enough time has passed and we can fire\n                        if (currentTime - lastFired >= config.fireRate && canFire) {\n                            this.fireWeapon(config);\n                            lastFired = currentTime;\n                            if (config.burstSize > 1) {\n                                burstCount++;\n                                if (burstCount >= config.burstSize) {\n                                    canFire = false;\n                                    burstCount = 0;\n                                    this.scene.time.delayedCall(config.burstDelay || 300, ()=>{\n                                        canFire = true;\n                                    });\n                                }\n                            }\n                        }\n                    };\n                    this.firingTimer = this.scene.time.addEvent({\n                        delay: 16,\n                        callback: attemptFire,\n                        loop: true\n                    });\n                    break;\n                }\n        }\n    }\n    stopFiring() {\n        if (this.weapon === \"flamethrower\") {\n            this.currentWeapon?.stop();\n            this.scene.sound.stopByKey(\"flamethrower-fire\");\n        }\n        if (this.firingTimer) {\n            this.firingTimer.destroy();\n            this.firingTimer = undefined;\n        }\n        // Don't allow stopping firing during overcharge\n        if (this.isOvercharged) return;\n        switch(this.weapon){\n            case \"lightsaber\":\n                if (this.isLightsaberOpen) {\n                    this.currentWeapon?.play(\"lightsaberClose\");\n                    this.scene.sound.play(\"lightsaber-close\");\n                    this.scene.sound.stopByKey(\"lightsaber-active\");\n                    // Clean up lightsaber state\n                    if (this.lightsaberSwingTimer) {\n                        this.lightsaberSwingTimer.destroy();\n                        this.lightsaberSwingTimer = undefined;\n                    }\n                    // Hide weapon after close animation completes\n                    this.scene.time.delayedCall(500, ()=>{\n                        this.isLightsaberOpen = false;\n                        if (this.currentWeapon?.getDisplayList()) {\n                            this.currentWeapon.removeFromDisplayList();\n                        }\n                    });\n                }\n                break;\n            case \"railgun\":\n                if (this.isCharging && this.chargeStartTime) {\n                    const chargeTime = this.scene.time.now - this.chargeStartTime;\n                    // Only fire if within valid charge window\n                    if (chargeTime >= this.RAILGUN_CONFIG.minChargeTime && chargeTime < this.RAILGUN_CONFIG.maxChargeTime) {\n                        this.fireRailgun(chargeTime);\n                    }\n                    // Reset charging state\n                    this.scene.sound.stopByKey(this.RAILGUN_CONFIG.chargeSound);\n                    this.currentWeapon?.setTint(0xffffff);\n                    this.isCharging = false;\n                    this.chargeStartTime = undefined;\n                    if (this.currentWeapon && this.currentWeapon.getDisplayList()) {\n                        this.currentWeapon.removeFromDisplayList();\n                    }\n                }\n                break;\n            default:\n                if (this.currentWeapon && this.currentWeapon.getDisplayList()) {\n                    this.currentWeapon.removeFromDisplayList();\n                }\n                const config = this.getCurrentWeaponConfig();\n                if (config) {\n                    config.fireSound?.forEach((sound)=>{\n                        this.scene.sound.stopByKey(sound);\n                    });\n                }\n                break;\n        }\n        return;\n    }\n    debugDrawFlameArea() {\n        if (!this.currentWeapon) return;\n        // Get or create debug graphics\n        if (!this.debugGraphics) {\n            this.debugGraphics = this.scene.add.graphics();\n        }\n        // Clear previous frame\n        this.debugGraphics.clear();\n        // Draw flame area\n        this.debugGraphics.lineStyle(2, 0xff0000, 1);\n        this.debugGraphics.strokeCircle(this.barrelPoint.x, this.barrelPoint.y, Weapon.FLAMETHROWER_CONFIG.range);\n        // Optionally draw barrel point\n        this.debugGraphics.fillStyle(0x00ff00, 1);\n        this.debugGraphics.fillCircle(this.barrelPoint.x, this.barrelPoint.y, 5);\n    }\n    fireWeapon(config) {\n        if (config.specialCase) {\n            switch(config.name){\n                case \"chainsaw\":\n                    this.scene.sound.play(\"chainsaw-fire\");\n                    this.currentWeapon?.play(\"chainsawFire\");\n                    break;\n                case \"lightsaber\":\n                    this.scene.sound.play(\"lightsaber-ignite\");\n                    this.scene.sound.play(\"lightsaber-active\");\n                    this.currentWeapon?.play(\"lightsaberOpen\");\n                    break;\n                case \"katana\":\n                    this.scene.sound.play(\"katana-slash\");\n                    this.spawnProjectile(config);\n                    break;\n                case \"flamethrower\":\n                    this.currentWeapon?.play(\"flamethrowerFire\");\n                    break;\n                case \"railgun\":\n                    this.currentWeapon?.play(\"railgunFire\");\n                    break;\n                default:\n                    return;\n            }\n        } else {\n            switch(this.weapon){\n                case \"tommy\":\n                    break;\n                case \"mg\":\n                    break;\n                default:\n                    if (config.fireSound) {\n                        config.fireSound.forEach((sound)=>{\n                            this.scene.sound.play(sound, {\n                                volume: 0.5\n                            });\n                        });\n                    }\n            }\n            if (config.animationKey) {\n                this.currentWeapon?.play(config.animationKey);\n            }\n            this.spawnProjectile(config);\n        }\n    }\n    spawnProjectile(config, chargedDamage) {\n        let hasCollided = false;\n        const characterPos = this.character.getPosition();\n        // Calculate angle between start and target points\n        const angle = Phaser.Math.Angle.Between(this.barrelPoint.x, this.barrelPoint.y, characterPos.x, characterPos.y);\n        // Add railgun case\n        if (this.weapon === \"railgun\") {\n            // Calculate the distance between barrel and target\n            const distance = Phaser.Math.Distance.Between(this.barrelPoint.x, this.barrelPoint.y, characterPos.x, characterPos.y);\n            // Create the laser beam\n            const laser = this.scene.add.rectangle(this.barrelPoint.x, this.barrelPoint.y, distance, 4, 0xff0000, 1);\n            // Set the origin to left center for proper rotation\n            laser.setOrigin(0, 0.5);\n            // Rotate the laser to point at the target\n            laser.setRotation(angle);\n            // Add glow effect\n            laser.setPostPipeline(\"GlowPostFX\");\n            this.randomExplosionEffect(characterPos);\n            this.randomBloodEffect(characterPos);\n            // Apply damage\n            const damage = chargedDamage || this.getCurrentWeaponConfig()?.damage || 0.05;\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"health-changed\", damage);\n            // Fade out and destroy the laser\n            this.scene.tweens.add({\n                targets: laser,\n                alpha: 0,\n                duration: 100,\n                ease: \"Power2\",\n                onComplete: ()=>{\n                    laser.destroy();\n                }\n            });\n            // Spawn coins at character position\n            for(let i = 0; i < 5; i++){\n                this.effects.spawnCoin(characterPos.x, characterPos.y);\n            }\n            return;\n        }\n        const speed = config.projectileSpeed || 50;\n        const projectileConfig = {\n            friction: 0,\n            frictionStatic: 0,\n            frictionAir: 0.005,\n            restitution: 0.3,\n            angle: angle + Math.PI,\n            density: 0.001,\n            ignorePointer: true,\n            ...config.projectileConfig\n        };\n        const distance = Phaser.Math.Distance.Between(this.barrelPoint.x, this.barrelPoint.y, characterPos.x, characterPos.y);\n        const throwForce = Math.min(distance * 0.02, 25);\n        const projectile = this.scene.add.image(this.barrelPoint.x, this.barrelPoint.y, config.projectileTexture ?? \"\").setName(this.weapon ?? \"\").setFlipY(this.flipY);\n        if (config.projectileDisplaySize) {\n            projectile.setDisplaySize(config.projectileDisplaySize.width, config.projectileDisplaySize.height);\n        } else {\n            projectile.setScale(config.projectileScale?.x ?? 1, config.projectileScale?.y ?? 1);\n        }\n        // let projectileConfig = {\n        //   friction: 0,\n        //   frictionStatic: 0,\n        //   frictionAir: 0.005, // Add air friction for arcing motion\n        //   restitution: 0.3, // Reduce bounce\n        //   angle: angle + Math.PI,\n        //   density: 0.001, // Light enough to arc\n        //   ignorePointer: true,\n        // };\n        // switch (this.weapon) {\n        //   case \"deagle\":\n        //     speed = 75;\n        //     projectile = this.scene.add\n        //       .image(this.barrelPoint.x, this.barrelPoint.y, \"deagle-bullet\")\n        //       .setScale(0.06, 0.1);\n        //     break;\n        //   case \"tommy\":\n        //     speed = 50;\n        //     projectile = this.scene.add\n        //       .image(this.barrelPoint.x, this.barrelPoint.y, \"tommy-bullet\")\n        //       .setScale(0.04, 0.08);\n        //     break;\n        //   case \"rpg\":\n        //     speed = 50;\n        //     projectile = this.scene.add\n        //       .image(this.barrelPoint.x, this.barrelPoint.y, \"rpg-bullet\")\n        //       .setScale(0.1, 0.1);\n        //     break;\n        //   case \"knife\":\n        //     speed = 40;\n        //     projectile = this.scene.add\n        //       .image(this.barrelPoint.x, this.barrelPoint.y, \"knife\")\n        //       .setScale(0.08, 0.08);\n        //     break;\n        //   case \"raygun\":\n        //     speed = 50;\n        //     projectile = this.scene.add\n        //       .image(this.barrelPoint.x, this.barrelPoint.y, \"raygun-bullet\")\n        //       .setScale(1, 1);\n        //     break;\n        //   case \"mg\":\n        //     speed = 50;\n        //     projectile = this.scene.add\n        //       .image(this.barrelPoint.x, this.barrelPoint.y, \"mg-bullet\")\n        //       .setScale(0.08, 0.08);\n        //     break;\n        //   case \"grenade\":\n        //   case \"sticky-bomb\":\n        //   case \"fire-bomb\":\n        //     projectile = this.scene.add\n        //       .image(this.barrelPoint.x, this.barrelPoint.y, this.weapon)\n        //       .setScale(0.15)\n        //       .setName(this.weapon);\n        //     // Add rotation to the throwable\n        //     projectileConfig = {\n        //       ...projectileConfig,\n        //       //@ts-ignore\n        // shape: { type: \"circle\", radius: 15 },\n        // angularVelocity: 0.2, // Increased rotation speed\n        // label: this.weapon, // Used to identify projectile type in collision\n        //     };\n        //     // Calculate throw force based on distance to target with increased force\n        //     const distance = Phaser.Math.Distance.Between(\n        //       this.barrelPoint.x,\n        //       this.barrelPoint.y,\n        //       characterPos.x,\n        //       characterPos.y\n        //     );\n        //     throwForce = Math.min(distance * 0.02, 25); // Slightly reduced multiplier and max force\n        //     break;\n        //   default:\n        //     return;\n        // }\n        if (this.weapon === \"grenade\" || this.weapon === \"sticky-bomb\" || this.weapon === \"fire-bomb\" || this.weapon === \"dynamite\") {\n            console.log(\"spawn projectile bomb\");\n            const matterBomb = this.scene.matter.add.gameObject(projectile, {\n                ...projectileConfig,\n                ignorePointer: true,\n                onCollideCallback: (collision)=>{\n                    if (hasCollided) return;\n                    hasCollided = true;\n                    switch(this.weapon){\n                        case \"sticky-bomb\":\n                            {\n                                this.scene.sound.play(\"sticky-bomb-impact\");\n                                this.randomExplosionEffect(characterPos);\n                                matterBomb.destroy();\n                                break;\n                            }\n                        case \"fire-bomb\":\n                            {\n                                this.scene.sound.play(\"fire-bomb-impact\");\n                                this.randomFireEffect(characterPos);\n                                matterBomb.destroy();\n                                break;\n                            }\n                        case \"grenade\":\n                            {\n                                this.scene.sound.play(\"explode\");\n                                this.randomExplosionEffect(characterPos);\n                                matterBomb.destroy();\n                                break;\n                            }\n                        case \"dynamite\":\n                            {\n                                this.scene.sound.play(\"explode\");\n                                this.randomExplosionEffect(characterPos);\n                                matterBomb.destroy();\n                                break;\n                            }\n                    }\n                    this.randomBloodEffect(characterPos);\n                    this.scene.sound.play(\"coin-drop\");\n                    for(let i = 0; i < 3; i++){\n                        this.effects.spawnCoin(characterPos.x, characterPos.y);\n                    }\n                    const damage = this.getCurrentWeaponConfig()?.damage || 0.05;\n                    _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"health-changed\", damage);\n                }\n            });\n            this.stickyBombNumber++;\n            // Apply arc trajectory\n            this.scene.matter.setVelocity(matterBomb, Math.cos(angle) * throwForce, Math.sin(angle) * throwForce - 5 // Negative Y for upward arc\n            );\n        } else {\n            console.log(\"spawn projectile\");\n            const matterBullet = this.scene.matter.add.gameObject(projectile, {\n                friction: 0,\n                frictionStatic: 0,\n                frictionAir: 0,\n                restitution: 1,\n                density: 0.005,\n                angle: angle + Math.PI,\n                ignorePointer: true,\n                shape: {\n                    type: \"circle\",\n                    radius: 10\n                },\n                onCollideCallback: (collision)=>{\n                    if (hasCollided) return;\n                    hasCollided = true;\n                    const collisionPoint = {\n                        x: collision.collision.supports[0]?.x,\n                        y: collision.collision.supports[0]?.y\n                    };\n                    const characterPos = this.character.getPosition();\n                    switch(this.weapon){\n                        case \"rpg\":\n                            this.scene.sound.play(\"explode\");\n                            this.randomExplosionEffect(characterPos);\n                            break;\n                        case \"raygun\":\n                            this.scene.sound.play(\"raygun-impact\");\n                            break;\n                        case \"knife\":\n                            this.scene.sound.play(\"throwknife-impact\");\n                            this.randomSlashEffect(characterPos);\n                            break;\n                        case \"katana\":\n                            this.scene.sound.play(\"throwknife-impact\");\n                            this.randomSlashEffect(characterPos);\n                            break;\n                    }\n                    const damage = this.getCurrentWeaponConfig()?.damage || 0.05;\n                    this.randomBloodEffect(characterPos);\n                    _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"health-changed\", damage);\n                    this.scene.sound.play(\"coin-drop\");\n                    for(let i = 0; i < 3; i++){\n                        this.effects.spawnCoin(characterPos.x, characterPos.y);\n                    }\n                    matterBullet.destroy();\n                }\n            });\n            // Set velocity based on angle to target\n            this.scene.matter.setVelocity(matterBullet, speed * Math.cos(angle), speed * Math.sin(angle));\n        }\n    }\n    randomBloodEffect(characterPos) {\n        this.scene.sound.play(\"bloodspurt\");\n        const bloodEffect = `b${Math.floor(Math.random() * 3) + 1}`;\n        const offset = {\n            x: 0,\n            y: (Math.random() - 0.5) * 50\n        };\n        this.effects.playEffect(bloodEffect, characterPos.x + offset.x, characterPos.y + offset.y);\n    }\n    randomExplosionEffect(characterPos) {\n        const explosionEffect = `explosion${Math.random() < 0.5 ? 1 : 2}`;\n        const offset = {\n            x: 0,\n            y: 0\n        };\n        this.effects.playEffect(explosionEffect, characterPos.x + offset.x, characterPos.y + offset.y);\n    }\n    randomSlashEffect(characterPos) {\n        const slashEffect = `slash${Math.floor(Math.random() * 4) + 1}`;\n        const offset = {\n            x: 0,\n            y: 0\n        };\n        this.effects.playEffect(slashEffect, characterPos.x + offset.x, characterPos.y + offset.y);\n    }\n    randomFireEffect(characterPos) {\n        const fireEffect = `fire${Math.random() < 0.5 ? 1 : 2}`;\n        const offset = {\n            x: 0,\n            y: 0\n        };\n        this.effects.playEffect(fireEffect, characterPos.x + offset.x, characterPos.y + offset.y);\n    }\n    updateWeaponPosition() {\n        if (!this.currentWeapon || !this.character) return;\n        const characterPos = this.character.getPosition();\n        const pointer = this.scene.input.activePointer;\n        const worldPoint = pointer.positionToCamera(this.scene.cameras.main);\n        this.currentWeapon.setPosition(worldPoint.x, worldPoint.y);\n        // Calculate angle between weapon and body\n        const angle = Phaser.Math.Angle.Between(this.currentWeapon.x, this.currentWeapon.y, characterPos.x, characterPos.y);\n        // Add 180 degrees to point barrel at body\n        const adjustedAngle = angle + Math.PI;\n        // Normalize angle between -π and π\n        const normalizedAngle = (adjustedAngle + Math.PI) % (Math.PI * 2) - Math.PI;\n        // Flip weapon when angle would make it appear upside down\n        this.flipX = normalizedAngle > Math.PI / 2 || normalizedAngle < -Math.PI / 2;\n        this.flipY = normalizedAngle > Math.PI / 2 || normalizedAngle < -Math.PI / 2;\n        this.currentWeapon.setFlipX(this.flipX);\n        // Set rotation with flip adjustment\n        this.currentWeapon.setRotation(this.currentWeapon.flipX ? adjustedAngle + Math.PI : adjustedAngle);\n        // Scale constants for weapon tip positioning\n        // Different weapons need different scale multipliers\n        let GUN_SCALE;\n        switch(this.weapon){\n            case \"knife\":\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.3,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.001\n                };\n                break;\n            case \"railgun\":\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.3,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.001\n                };\n                break;\n            case \"tommy\":\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.5,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.08\n                };\n                break;\n            case \"rpg\":\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.3,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.05\n                };\n                break;\n            case \"mg\":\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.3,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.15\n                };\n                break;\n            case \"kar98\":\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.3,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.05\n                };\n                break;\n            case \"flamethrower\":\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.3,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.2\n                };\n                // Calculate the offset based on rotation\n                const FLAMETHROWER_OFFSET = 200; // Adjust this value as needed\n                const offsetX = Math.cos(normalizedAngle) * FLAMETHROWER_OFFSET;\n                const offsetY = Math.sin(normalizedAngle) * FLAMETHROWER_OFFSET;\n                // Adjust the world point position before setting weapon position\n                const adjustedWorldPoint = {\n                    x: worldPoint.x - offsetX,\n                    y: worldPoint.y - offsetY\n                };\n                // Set position with offset\n                this.currentWeapon.setPosition(adjustedWorldPoint.x, adjustedWorldPoint.y);\n                // Update flame damage if weapon is active\n                if (this.weapon === \"flamethrower\" && this.scene.input.activePointer.isDown) {\n                    this.updateFlameDamage();\n                }\n                break;\n            default:\n                GUN_SCALE = {\n                    length: this.currentWeapon.displayWidth * 0.3,\n                    barrelOffset: this.currentWeapon.displayHeight * 0.2\n                };\n                break;\n        }\n        // Calculate weapon tip position\n        const totalAngle = this.currentWeapon.rotation + (this.currentWeapon.flipX ? Math.PI : 0);\n        const perpAngle = totalAngle + Math.PI / 2;\n        const tipX = this.currentWeapon.x + Math.cos(totalAngle) * -GUN_SCALE.length + Math.cos(perpAngle) * (this.currentWeapon.flipX ? GUN_SCALE.barrelOffset : -GUN_SCALE.barrelOffset);\n        const tipY = this.currentWeapon.y + Math.sin(totalAngle) * -GUN_SCALE.length + Math.sin(perpAngle) * (this.currentWeapon.flipX ? GUN_SCALE.barrelOffset : -GUN_SCALE.barrelOffset);\n        this.barrelPoint.set(tipX, tipY);\n    }\n    destroy() {\n        this.stopFiring();\n    }\n    updateChainsawDamage() {\n        // Return early if input is locked\n        if (this.inputState.isLocked) {\n            this.scene.sound.stopByKey(\"chainsaw-fire\");\n            if (this.firingTimer) {\n                this.firingTimer.destroy();\n                this.firingTimer = undefined;\n            }\n            return;\n        }\n        const currentTime = this.scene.time.now;\n        // Check if enough time has passed since last damage\n        if (currentTime - this.lastDamageTime < Weapon.CHAINSAW_CONFIG.damageInterval) {\n            return;\n        }\n        const characterPos = this.character.getPosition();\n        if (!this.currentWeapon) return;\n        // Calculate distance between chainsaw tip and character\n        const distance = Phaser.Math.Distance.Between(this.barrelPoint.x, this.barrelPoint.y, characterPos.x, characterPos.y);\n        // Only apply damage if within range\n        if (distance <= Weapon.CHAINSAW_CONFIG.range) {\n            // Apply damage\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"health-changed\", Weapon.CHAINSAW_CONFIG.damagePerTick);\n            // Visual effects\n            this.randomBloodEffect(characterPos);\n            this.randomSlashEffect(characterPos);\n            // Spawn fewer coins than flamethrower but more frequently\n            for(let i = 0; i < 2; i++){\n                this.effects.spawnCoin(characterPos.x, characterPos.y);\n            }\n            this.lastDamageTime = currentTime;\n        }\n        // Optional: Debug visualization of range\n        if (this.debugGraphics) {\n            this.debugGraphics.clear();\n            this.debugGraphics.lineStyle(2, 0xff0000, 0.5);\n            this.debugGraphics.strokeCircle(this.barrelPoint.x, this.barrelPoint.y, Weapon.CHAINSAW_CONFIG.range);\n        }\n    }\n    // Add new methods for lightsaber handling\n    startLightsaberSwing() {\n        if (!this.isLightsaberOpen) return;\n        this.currentWeapon?.play(\"saberswipe\");\n        // Start damage checking\n        this.lightsaberSwingTimer = this.scene.time.addEvent({\n            delay: Weapon.LIGHTSABER_CONFIG.damageInterval,\n            callback: this.checkLightsaberDamage,\n            callbackScope: this,\n            loop: true\n        });\n    }\n    checkLightsaberDamage() {\n        if (!this.currentWeapon || !this.isLightsaberOpen) return;\n        const characterPos = this.character.getPosition();\n        const distance = Phaser.Math.Distance.Between(this.barrelPoint.x, this.barrelPoint.y, characterPos.x, characterPos.y);\n        if (distance <= Weapon.LIGHTSABER_CONFIG.range) {\n            _EventBus__WEBPACK_IMPORTED_MODULE_0__.EventBus.emit(\"health-changed\", Weapon.LIGHTSABER_CONFIG.damagePerTick);\n            this.scene.sound.play(\"lightsaber-hit\");\n            this.randomBloodEffect(characterPos);\n            this.randomSlashEffect(characterPos);\n            for(let i = 0; i < 2; i++){\n                this.effects.spawnCoin(characterPos.x, characterPos.y);\n            }\n        }\n        // Debug visualization\n        if (this.debugGraphics) {\n            this.debugGraphics.clear();\n            this.debugGraphics.lineStyle(2, 0x00ff00, 0.5);\n            this.debugGraphics.strokeCircle(this.barrelPoint.x, this.barrelPoint.y, Weapon.LIGHTSABER_CONFIG.range);\n        }\n    }\n} // private playWeaponAnimation(): void {\n //   if (!this.currentWeapon || !this.weapon) return;\n //   switch (this.weapon) {\n //     case \"deagle\":\n //       this.currentWeapon.play(\"deagleFire\");\n //       break;\n //     case \"tommy\":\n //       this.currentWeapon.play(\"tommyFire\");\n //       break;\n //     case \"rpg\":\n //       this.currentWeapon.play(\"rpgFire\");\n //       break;\n //     case \"mg\":\n //       this.currentWeapon.play(\"mgFire\");\n //       break;\n //     case \"raygun\":\n //       this.currentWeapon.play(\"raygunFire\");\n //       break;\n //     default:\n //       return;\n //   }\n // }\n // private playWeaponSound(config: WeaponConfig): void {\n //   if (config.fireSound) {\n //     this.scene.sound.play(config.fireSound);\n //   }\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/classes/Weapon.ts\n");

/***/ }),

/***/ "./src/game/config.ts":
/*!****************************!*\
  !*** ./src/game/config.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHARACTER_HEIGHT: () => (/* binding */ CHARACTER_HEIGHT),\n/* harmony export */   CHARACTER_WIDTH: () => (/* binding */ CHARACTER_WIDTH),\n/* harmony export */   GAME_HEIGHT: () => (/* binding */ GAME_HEIGHT),\n/* harmony export */   GAME_WIDTH: () => (/* binding */ GAME_WIDTH),\n/* harmony export */   JOINT_LENGTH: () => (/* binding */ JOINT_LENGTH),\n/* harmony export */   JOINT_STIFFNESS: () => (/* binding */ JOINT_STIFFNESS),\n/* harmony export */   SLOP: () => (/* binding */ SLOP)\n/* harmony export */ });\nconst GAME_WIDTH = 1280;\nconst GAME_HEIGHT = 720;\nconst JOINT_LENGTH = 10;\nconst JOINT_STIFFNESS = 1;\nconst CHARACTER_HEIGHT = 100;\nconst CHARACTER_WIDTH = 100;\nconst SLOP = 10;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9jb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFPLE1BQU1BLGFBQWEsS0FBSztBQUN4QixNQUFNQyxjQUFjLElBQUk7QUFFeEIsTUFBTUMsZUFBZSxHQUFHO0FBQ3hCLE1BQU1DLGtCQUFrQixFQUFFO0FBQzFCLE1BQU1DLG1CQUFtQixJQUFJO0FBQzdCLE1BQU1DLGtCQUFrQixJQUFJO0FBQzVCLE1BQU1DLE9BQU8sR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3BoYXNlci1lZGl0b3ItdGVtcGxhdGUtbmV4dGpzLy4vc3JjL2dhbWUvY29uZmlnLnRzP2ZiNmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEdBTUVfV0lEVEggPSAxMjgwO1xuZXhwb3J0IGNvbnN0IEdBTUVfSEVJR0hUID0gNzIwO1xuXG5leHBvcnQgY29uc3QgSk9JTlRfTEVOR1RIID0gMTA7XG5leHBvcnQgY29uc3QgSk9JTlRfU1RJRkZORVNTID0gMTtcbmV4cG9ydCBjb25zdCBDSEFSQUNURVJfSEVJR0hUID0gMTAwO1xuZXhwb3J0IGNvbnN0IENIQVJBQ1RFUl9XSURUSCA9IDEwMDtcbmV4cG9ydCBjb25zdCBTTE9QID0gMTA7Il0sIm5hbWVzIjpbIkdBTUVfV0lEVEgiLCJHQU1FX0hFSUdIVCIsIkpPSU5UX0xFTkdUSCIsIkpPSU5UX1NUSUZGTkVTUyIsIkNIQVJBQ1RFUl9IRUlHSFQiLCJDSEFSQUNURVJfV0lEVEgiLCJTTE9QIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game/config.ts\n");

/***/ }),

/***/ "./src/game/main.ts":
/*!**************************!*\
  !*** ./src/game/main.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _scenes_Boot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scenes/Boot */ \"./src/game/scenes/Boot.ts\");\n/* harmony import */ var _scenes_Game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scenes/Game */ \"./src/game/scenes/Game.ts\");\n/* harmony import */ var _scenes_Preloader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scenes/Preloader */ \"./src/game/scenes/Preloader.ts\");\n/* harmony import */ var _scenes_MainMenu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scenes/MainMenu */ \"./src/game/scenes/MainMenu.ts\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! phaser */ \"phaser\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst config = {\n    type: phaser__WEBPACK_IMPORTED_MODULE_4__.AUTO,\n    width: 1280,\n    height: 720,\n    parent: \"game-container\",\n    scale: {\n        mode: Phaser.Scale.FIT,\n        parent: \"game-container\",\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n        min: {\n            width: 640,\n            height: 360\n        },\n        max: {\n            width: 1280,\n            height: 720\n        },\n        zoom: 1\n    },\n    autoRound: false,\n    backgroundColor: \"#30cfd0\",\n    scene: [\n        _scenes_Boot__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        _scenes_MainMenu__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n        _scenes_Preloader__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        _scenes_Game__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ],\n    plugins: {},\n    physics: {\n        default: \"matter\",\n        matter: {\n            // constraintIterations: 10,\n            enableSleeping: true\n        }\n    }\n};\nconst StartGame = (parent)=>{\n    return new phaser__WEBPACK_IMPORTED_MODULE_4__.Game({\n        ...config,\n        parent\n    });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StartGame);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9tYWluLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBaUM7QUFDSTtBQUNNO0FBQ0Y7QUFDTDtBQUVwQyxNQUFNTSxTQUF1QztJQUMzQ0MsTUFBTUgsd0NBQUlBO0lBQ1ZJLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxRQUFRO0lBQ1JDLE9BQU87UUFDTEMsTUFBTUMsT0FBT0MsS0FBSyxDQUFDQyxHQUFHO1FBQ3RCTCxRQUFRO1FBQ1JNLFlBQVlILE9BQU9DLEtBQUssQ0FBQ0csV0FBVztRQUNwQ0MsS0FBSztZQUNIVixPQUFPO1lBQ1BDLFFBQVE7UUFDVjtRQUNBVSxLQUFLO1lBQ0hYLE9BQU87WUFDUEMsUUFBUTtRQUNWO1FBQ0FXLE1BQU07SUFDUjtJQUNBQyxXQUFXO0lBRVhDLGlCQUFpQjtJQUNqQkMsT0FBTztRQUFDdkIsb0RBQUlBO1FBQUVHLHdEQUFRQTtRQUFFRCx5REFBU0E7UUFBRUQsb0RBQVFBO0tBQUM7SUFDNUN1QixTQUFTLENBQUM7SUFDVkMsU0FBUztRQUNQQyxTQUFTO1FBQ1RDLFFBQVE7WUFDTiw0QkFBNEI7WUFDNUJDLGdCQUFnQjtRQWtFbEI7SUFDRjtBQUNGO0FBRUEsTUFBTUMsWUFBWSxDQUFDbkI7SUFDakIsT0FBTyxJQUFJTCx3Q0FBSUEsQ0FBQztRQUFFLEdBQUdDLE1BQU07UUFBRUk7SUFBTztBQUN0QztBQUVBLGlFQUFlbUIsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BoYXNlci1lZGl0b3ItdGVtcGxhdGUtbmV4dGpzLy4vc3JjL2dhbWUvbWFpbi50cz81MDc3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCb290IGZyb20gXCIuL3NjZW5lcy9Cb290XCI7XG5pbXBvcnQgTWFpbkdhbWUgZnJvbSBcIi4vc2NlbmVzL0dhbWVcIjtcbmltcG9ydCBQcmVsb2FkZXIgZnJvbSBcIi4vc2NlbmVzL1ByZWxvYWRlclwiO1xuaW1wb3J0IE1haW5NZW51IGZyb20gXCIuL3NjZW5lcy9NYWluTWVudVwiO1xuaW1wb3J0IHsgQVVUTywgR2FtZSB9IGZyb20gXCJwaGFzZXJcIjtcblxuY29uc3QgY29uZmlnOiBQaGFzZXIuVHlwZXMuQ29yZS5HYW1lQ29uZmlnID0ge1xuICB0eXBlOiBBVVRPLFxuICB3aWR0aDogMTI4MCxcbiAgaGVpZ2h0OiA3MjAsXG4gIHBhcmVudDogXCJnYW1lLWNvbnRhaW5lclwiLFxuICBzY2FsZToge1xuICAgIG1vZGU6IFBoYXNlci5TY2FsZS5GSVQsXG4gICAgcGFyZW50OiBcImdhbWUtY29udGFpbmVyXCIsXG4gICAgYXV0b0NlbnRlcjogUGhhc2VyLlNjYWxlLkNFTlRFUl9CT1RILFxuICAgIG1pbjoge1xuICAgICAgd2lkdGg6IDY0MCxcbiAgICAgIGhlaWdodDogMzYwLFxuICAgIH0sXG4gICAgbWF4OiB7XG4gICAgICB3aWR0aDogMTI4MCxcbiAgICAgIGhlaWdodDogNzIwLFxuICAgIH0sXG4gICAgem9vbTogMSxcbiAgfSxcbiAgYXV0b1JvdW5kOiBmYWxzZSxcblxuICBiYWNrZ3JvdW5kQ29sb3I6IFwiIzMwY2ZkMFwiLFxuICBzY2VuZTogW0Jvb3QsIE1haW5NZW51LCBQcmVsb2FkZXIsIE1haW5HYW1lXSxcbiAgcGx1Z2luczoge30sXG4gIHBoeXNpY3M6IHtcbiAgICBkZWZhdWx0OiBcIm1hdHRlclwiLFxuICAgIG1hdHRlcjoge1xuICAgICAgLy8gY29uc3RyYWludEl0ZXJhdGlvbnM6IDEwLFxuICAgICAgZW5hYmxlU2xlZXBpbmc6IHRydWUsXG4gICAgICAvLyBkZWJ1Zzoge1xuICAgICAgLy8gICBzaG93QXhlczogZmFsc2UsXG4gICAgICAvLyAgIHNob3dBbmdsZUluZGljYXRvcjogdHJ1ZSxcbiAgICAgIC8vICAgYW5nbGVDb2xvcjogMHhlODExNTMsXG5cbiAgICAgIC8vICAgLy8gc2hvd0Jyb2FkcGhhc2U6IGZhbHNlLFxuICAgICAgLy8gICAvLyBicm9hZHBoYXNlQ29sb3I6IDB4ZmZiNDAwLFxuXG4gICAgICAvLyAgIHNob3dCb3VuZHM6IHRydWUsXG4gICAgICAvLyAgIGJvdW5kc0NvbG9yOiAweGZmMDAwMCxcblxuICAgICAgLy8gICBzaG93VmVsb2NpdHk6IHRydWUsXG4gICAgICAvLyAgIHZlbG9jaXR5Q29sb3I6IDB4MDBhZWVmLFxuXG4gICAgICAvLyAgIHNob3dDb2xsaXNpb25zOiB0cnVlLFxuICAgICAgLy8gICBjb2xsaXNpb25Db2xvcjogMHhmNTk1MGMsXG5cbiAgICAgIC8vICAgc2hvd1NlcGFyYXRpb246IGZhbHNlLFxuICAgICAgLy8gICBzZXBhcmF0aW9uQ29sb3I6IDB4ZmZhNTAwLFxuXG4gICAgICAvLyAgIHNob3dCb2R5OiB0cnVlLFxuICAgICAgLy8gICBzaG93U3RhdGljQm9keTogdHJ1ZSxcbiAgICAgIC8vICAgc2hvd0ludGVybmFsRWRnZXM6IHRydWUsXG5cbiAgICAgIC8vICAgcmVuZGVyRmlsbDogZmFsc2UsXG4gICAgICAvLyAgIHJlbmRlckxpbmU6IHRydWUsXG5cbiAgICAgIC8vICAgZmlsbENvbG9yOiAweDEwNjkwOSxcbiAgICAgIC8vICAgZmlsbE9wYWNpdHk6IDEsXG4gICAgICAvLyAgIGxpbmVDb2xvcjogMHgyOGRlMTksXG4gICAgICAvLyAgIGxpbmVPcGFjaXR5OiAxLFxuICAgICAgLy8gICBsaW5lVGhpY2tuZXNzOiAxLFxuXG4gICAgICAvLyAgIHN0YXRpY0ZpbGxDb2xvcjogMHgwZDE3N2IsXG4gICAgICAvLyAgIHN0YXRpY0xpbmVDb2xvcjogMHgxMzI3ZTQsXG5cbiAgICAgIC8vICAgc2hvd1NsZWVwaW5nOiB0cnVlLFxuICAgICAgLy8gICBzdGF0aWNCb2R5U2xlZXBPcGFjaXR5OiAxLFxuICAgICAgLy8gICBzbGVlcEZpbGxDb2xvcjogMHg0NjQ2NDYsXG4gICAgICAvLyAgIHNsZWVwTGluZUNvbG9yOiAweDk5OWE5OSxcblxuICAgICAgLy8gICBzaG93U2Vuc29yczogdHJ1ZSxcbiAgICAgIC8vICAgc2Vuc29yRmlsbENvbG9yOiAweDBkMTc3YixcbiAgICAgIC8vICAgc2Vuc29yTGluZUNvbG9yOiAweDEzMjdlNCxcblxuICAgICAgLy8gICBzaG93UG9zaXRpb25zOiB0cnVlLFxuICAgICAgLy8gICBwb3NpdGlvblNpemU6IDQsXG4gICAgICAvLyAgIHBvc2l0aW9uQ29sb3I6IDB4ZTA0MmRhLFxuXG4gICAgICAvLyAgIHNob3dKb2ludDogdHJ1ZSxcbiAgICAgIC8vICAgam9pbnRDb2xvcjogMHhlMGUwNDIsXG4gICAgICAvLyAgIGpvaW50TGluZU9wYWNpdHk6IDEsXG4gICAgICAvLyAgIGpvaW50TGluZVRoaWNrbmVzczogMixcblxuICAgICAgLy8gICBwaW5TaXplOiA0LFxuICAgICAgLy8gICBwaW5Db2xvcjogMHg0MmUwZTAsXG5cbiAgICAgIC8vICAgc3ByaW5nQ29sb3I6IDB4ZTA0MmUwLFxuXG4gICAgICAvLyAgIGFuY2hvckNvbG9yOiAweGVmZWZlZixcbiAgICAgIC8vICAgYW5jaG9yU2l6ZTogNCxcblxuICAgICAgLy8gICBzaG93Q29udmV4SHVsbHM6IHRydWUsXG4gICAgICAvLyAgIGh1bGxDb2xvcjogMHhkNzAzZDAsXG4gICAgICAvLyB9LFxuICAgIH0sXG4gIH0sXG59O1xuXG5jb25zdCBTdGFydEdhbWUgPSAocGFyZW50OiBzdHJpbmcpID0+IHtcbiAgcmV0dXJuIG5ldyBHYW1lKHsgLi4uY29uZmlnLCBwYXJlbnQgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdGFydEdhbWU7XG5cbiJdLCJuYW1lcyI6WyJCb290IiwiTWFpbkdhbWUiLCJQcmVsb2FkZXIiLCJNYWluTWVudSIsIkFVVE8iLCJHYW1lIiwiY29uZmlnIiwidHlwZSIsIndpZHRoIiwiaGVpZ2h0IiwicGFyZW50Iiwic2NhbGUiLCJtb2RlIiwiUGhhc2VyIiwiU2NhbGUiLCJGSVQiLCJhdXRvQ2VudGVyIiwiQ0VOVEVSX0JPVEgiLCJtaW4iLCJtYXgiLCJ6b29tIiwiYXV0b1JvdW5kIiwiYmFja2dyb3VuZENvbG9yIiwic2NlbmUiLCJwbHVnaW5zIiwicGh5c2ljcyIsImRlZmF1bHQiLCJtYXR0ZXIiLCJlbmFibGVTbGVlcGluZyIsIlN0YXJ0R2FtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/game/main.ts\n");

/***/ }),

/***/ "./src/game/scenes/Boot.ts":
/*!*********************************!*\
  !*** ./src/game/scenes/Boot.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Boot)\n/* harmony export */ });\n/* harmony import */ var _lib_sets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/sets */ \"./src/lib/sets.ts\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! phaser */ \"phaser\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass Boot extends phaser__WEBPACK_IMPORTED_MODULE_1__.Scene {\n    constructor(){\n        super(\"Boot\");\n    }\n    preload() {\n        this.load.pack(\"pack\", \"assets/boot-asset-pack.json\");\n    }\n    createMarketcap() {\n        this.registry.set(\"marketcap\", _lib_sets__WEBPACK_IMPORTED_MODULE_0__.MARKETCAP);\n    }\n    create() {\n        this.createMarketcap();\n        this.scene.start(\"MainMenu\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9zY2VuZXMvQm9vdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVDO0FBQ1I7QUFFaEIsTUFBTUUsYUFBYUQseUNBQUtBO0lBQ3JDRSxhQUFjO1FBQ1osS0FBSyxDQUFDO0lBQ1I7SUFFQUMsVUFBVTtRQUNSLElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxJQUFJLENBQUMsUUFBUTtJQUN6QjtJQUVRQyxrQkFBd0I7UUFDOUIsSUFBSSxDQUFDQyxRQUFRLENBQUNDLEdBQUcsQ0FBQyxhQUFhVCxnREFBU0E7SUFDMUM7SUFFQVUsU0FBUztRQUNQLElBQUksQ0FBQ0gsZUFBZTtRQUNwQixJQUFJLENBQUNJLEtBQUssQ0FBQ0MsS0FBSyxDQUFDO0lBQ25CO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9waGFzZXItZWRpdG9yLXRlbXBsYXRlLW5leHRqcy8uL3NyYy9nYW1lL3NjZW5lcy9Cb290LnRzPzhlZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTUFSS0VUQ0FQIH0gZnJvbSBcIkAvbGliL3NldHNcIjtcbmltcG9ydCB7IFNjZW5lIH0gZnJvbSBcInBoYXNlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb290IGV4dGVuZHMgU2NlbmUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihcIkJvb3RcIik7XG4gIH1cblxuICBwcmVsb2FkKCkge1xuICAgIHRoaXMubG9hZC5wYWNrKFwicGFja1wiLCBcImFzc2V0cy9ib290LWFzc2V0LXBhY2suanNvblwiKTtcbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlTWFya2V0Y2FwKCk6IHZvaWQge1xuICAgIHRoaXMucmVnaXN0cnkuc2V0KFwibWFya2V0Y2FwXCIsIE1BUktFVENBUCk7XG4gIH1cblxuICBjcmVhdGUoKSB7XG4gICAgdGhpcy5jcmVhdGVNYXJrZXRjYXAoKTtcbiAgICB0aGlzLnNjZW5lLnN0YXJ0KFwiTWFpbk1lbnVcIik7XG4gIH1cbn1cblxuIl0sIm5hbWVzIjpbIk1BUktFVENBUCIsIlNjZW5lIiwiQm9vdCIsImNvbnN0cnVjdG9yIiwicHJlbG9hZCIsImxvYWQiLCJwYWNrIiwiY3JlYXRlTWFya2V0Y2FwIiwicmVnaXN0cnkiLCJzZXQiLCJjcmVhdGUiLCJzY2VuZSIsInN0YXJ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/game/scenes/Boot.ts\n");

/***/ }),

/***/ "./src/game/scenes/Game.ts":
/*!*********************************!*\
  !*** ./src/game/scenes/Game.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"phaser\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var _classes_Character__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes/Character */ \"./src/game/classes/Character.ts\");\n/* harmony import */ var _classes_GameButtons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../classes/GameButtons */ \"./src/game/classes/GameButtons.ts\");\n/* harmony import */ var _classes_Journal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../classes/Journal */ \"./src/game/classes/Journal.ts\");\n/* harmony import */ var _classes_ScoreBar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../classes/ScoreBar */ \"./src/game/classes/ScoreBar.ts\");\n/* harmony import */ var _classes_Weapon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../classes/Weapon */ \"./src/game/classes/Weapon.ts\");\n/* harmony import */ var _classes_Effects__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../classes/Effects */ \"./src/game/classes/Effects.ts\");\n\n\n\n\n\n\n\n\n//TODO: Fix sticky bomb, and lightsaber\n//TODO: make big coin drop on death\n//TODO: add buddy sounds\n//TODO: fix blob asset key for social buttons\n//TODO: optimize pack loading, split into smaller packs to make parallel loading possible\nclass Game extends (phaser__WEBPACK_IMPORTED_MODULE_0___default().Scene) {\n    constructor(){\n        super(\"MainGame\");\n        this.pointerOver = false;\n        this.characterTiers = [\n            \"paper\",\n            \"sol\",\n            \"mil\",\n            \"musk\"\n        ];\n    }\n    init() {\n        this.matter.world.autoUpdate = false;\n        this.matter.world.setBounds(50, 50, 1180, 620, 1000);\n        // this.pointerConstraint = new Phaser.Physics.Matter.PointerConstraint(\n        //   this.scene.scene,\n        //   this.matter.world,\n        //   {\n        //     length: 0.1,\n        //     stiffness: 1,\n        //   }\n        // );\n        // this.matter.add.pointerConstraint({});\n        const canDrag = this.matter.world.nextGroup();\n        // this.matter.add.pointerConstraint({\n        //   collisionFilter: {\n        //     category: COLLISION_CATEGORIES.POINTER,\n        //     mask: COLLISION_CATEGORIES.BOUNDS,\n        //   },\n        // });\n        // this.matter.add.mouse\n        this.matter.add.mouseSpring({\n            length: 1,\n            stiffness: 1,\n            // @ts-ignore\n            collisionFilter: {\n                group: canDrag\n            }\n        });\n        // this.soundManager = new SoundManager(this);\n        this.scoreBar = new _classes_ScoreBar__WEBPACK_IMPORTED_MODULE_5__.ScoreBar({\n            scene: this,\n            x: 640,\n            y: 30,\n            width: 300,\n            health: 100\n        });\n        this.gameButtons = new _classes_GameButtons__WEBPACK_IMPORTED_MODULE_3__.GameButtons({\n            scene: this,\n            x: 75,\n            y: 200,\n            spacing: 110\n        });\n        this.journalManager = new _classes_Journal__WEBPACK_IMPORTED_MODULE_4__.JournalManager({\n            scene: this,\n            x: 1450,\n            // x: this.HIDDEN_X,\n            y: 360\n        });\n        this.effects = new _classes_Effects__WEBPACK_IMPORTED_MODULE_7__.Effects(this);\n        this.character = new _classes_Character__WEBPACK_IMPORTED_MODULE_2__.Character({\n            scene: this,\n            x: 512,\n            y: 200,\n            tier: this.characterTiers[this.data.get(\"tier\")] ?? \"paper\",\n            collisionGroup: canDrag\n        }, this.effects);\n        this.weaponObject = new _classes_Weapon__WEBPACK_IMPORTED_MODULE_6__.Weapon(this, this.character, this.effects);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"bg-change\", (bg)=>{\n            this.bg.setTexture(bg);\n        });\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"pointer-over-button\", ()=>{\n            this.pointerOver = true;\n        });\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"pointer-out-button\", ()=>{\n            this.pointerOver = false;\n        });\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"skin-equipped\", (skin)=>{\n            this.character.changeSkin(skin);\n        });\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.on(\"character-out-of-bounds\", ()=>{\n        // this.pointerConstraint.stopDrag();\n        });\n        this.input.on(\"pointerdown\", ()=>{\n            if (!this.weaponObject) return;\n            // this.pointerConstraint.active = false;\n            this.weaponObject.startFiring();\n        });\n        this.input.on(\"pointerup\", ()=>{\n            if (!this.weaponObject) return;\n            // this.pointerConstraint.active = true;\n            this.weaponObject.stopFiring();\n        });\n        this.events.emit(\"scene-awake\");\n    }\n    create() {\n        this.bg = this.add.image(1280 / 2, 720 / 2, \"bg-main\").setDisplaySize(1280, 720).setDepth(-2);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"current-scene-ready\", this);\n    }\n    update(time, delta) {\n        this.updatePhysics(delta);\n        // Display FPS counter\n        this.character.update();\n        this.weaponObject.updateWeaponPosition();\n    }\n    updatePhysics(delta) {\n        // Run physics at 60Hz (16.666ms per step) for smooth simulation\n        // This is a common refresh rate that balances smoothness and performance\n        const fixedTimeStep = 1000 / 300; // Increased to 120Hz for smoother physics\n        // Allow up to 3 steps per frame to prevent spiral of death\n        // if frame rate drops temporarily\n        const maxSteps = Math.min(3, Math.floor(delta / fixedTimeStep));\n        // Run physics updates to catch up with any accumulated time\n        for(let i = 0; i < maxSteps; i++){\n            this.matter.world.step(fixedTimeStep);\n        }\n    }\n    changeScene() {\n        this.scene.start(\"GameOver\");\n    }\n    shutdown() {\n        this.character.destroy();\n        this.weaponObject.destroy();\n        this.fpsText.destroy();\n        this.bg.destroy();\n        this.input.destroy();\n        this.events.destroy();\n        this.sound.destroy();\n        this.scoreBar.destroy();\n        this.journalManager.destroy();\n    }\n} // private head!: Phaser.Physics.Matter.Image;\n // private body!: Phaser.Physics.Matter.Image;\n // private leftArm!: Phaser.Physics.Matter.Image;\n // private rightArm!: Phaser.Physics.Matter.Image;\n // private leftLeg!: Phaser.Physics.Matter.Image;\n // private rightLeg!: Phaser.Physics.Matter.Image;\n // private bloodSplatter!: Phaser.GameObjects.Sprite;\n // private explosion!: Phaser.GameObjects.Sprite;\n // private currentTierText!: Phaser.GameObjects.Text;\n // private currentWeapon?: Phaser.GameObjects.Sprite;\n // private pointerOver: boolean = false;\n // private barrelPoint!: Phaser.Math.Vector2;\n // private killCountText!: Phaser.GameObjects.Text;\n // // Weapons\n // private showWeapon = false;\n // private weapon?: GameWeaponKey;\n // private weaponText!: Phaser.GameObjects.Text;\n // private weaponButtons: Map<string, TextButton> = new Map();\n // private weaponSelectionArea!: Phaser.GameObjects.Rectangle;\n // private firingTimer?: Phaser.Time.TimerEvent;\n // private debugButton!: TextButton;\n // this.weaponText = this.add.text(\n //   850,\n //   30,\n //   `Weapon: ${this.weapon ?? \"none\"}`,\n //   {\n //     fontSize: \"16px\",\n //     color: \"#ffffff\",\n //   }\n // );\n // this.currentTierText = this.add.text(\n //   1150,\n //   90,\n //   `Tier: ${this.data.get(\"tier\") ?? \"none\"}`,\n //   {\n //     fontSize: \"16px\",\n //     color: \"#ffffff\",\n //   }\n // );\n // this.updateWeaponPosition();\n // Hide weapon if pointer is in weapon selection area and weapon is equipped\n // this.weaponSelectionAreaPointerOver();\n // this.weaponText.setText(`Weapon: ${this.weapon ?? \"none\"}`);\n // this.currentTierText.setText(`Tier: ${this.data.get(\"tier\") ?? \"none\"}`);\n // updateWeaponPosition() {\n //   if (!this.currentWeapon) {\n //     return;\n //   }\n //   const characterPos = this.character.getPosition();\n //   const pointer = this.input.activePointer;\n //   const worldPoint = pointer.positionToCamera(\n //     this.cameras.main\n //   ) as Phaser.Math.Vector2;\n //   this.currentWeapon.setPosition(worldPoint.x, worldPoint.y);\n //   // Calculate angle between weapon and body\n //   const angle = Phaser.Math.Angle.Between(\n //     this.currentWeapon.x,\n //     this.currentWeapon.y,\n //     characterPos.x,\n //     characterPos.y\n //   );\n //   // Add 180 degrees to point barrel at body\n //   const adjustedAngle = angle + Math.PI;\n //   // Normalize angle between -π and π\n //   const normalizedAngle =\n //     ((adjustedAngle + Math.PI) % (Math.PI * 2)) - Math.PI;\n //   // Flip weapon when angle would make it appear upside down\n //   this.currentWeapon.setFlipX(\n //     normalizedAngle > Math.PI / 2 || normalizedAngle < -Math.PI / 2\n //   );\n //   // Set rotation with flip adjustment\n //   this.currentWeapon.setRotation(\n //     this.currentWeapon.flipX ? adjustedAngle + Math.PI : adjustedAngle\n //   );\n //   // Scale constants for weapon tip positioning\n //   // Different weapons need different scale multipliers\n //   const GUN_SCALE =\n //     this.weapon === \"tommy\"\n //       ? {\n //           length: this.currentWeapon.displayWidth * 0.5,\n //           barrelOffset: this.currentWeapon.displayHeight * 0.08,\n //         }\n //       : {\n //           length: this.currentWeapon.displayWidth * 0.3,\n //           barrelOffset: this.currentWeapon.displayHeight * 0.2,\n //         };\n //   // Calculate weapon tip position\n //   const totalAngle =\n //     this.currentWeapon.rotation + (this.currentWeapon.flipX ? Math.PI : 0);\n //   const perpAngle = totalAngle + Math.PI / 2;\n //   const tipX =\n //     this.currentWeapon.x +\n //     Math.cos(totalAngle) * -GUN_SCALE.length +\n //     Math.cos(perpAngle) *\n //       (this.currentWeapon.flipX\n //         ? GUN_SCALE.barrelOffset\n //         : -GUN_SCALE.barrelOffset);\n //   const tipY =\n //     this.currentWeapon.y +\n //     Math.sin(totalAngle) * -GUN_SCALE.length +\n //     Math.sin(perpAngle) *\n //       (this.currentWeapon.flipX\n //         ? GUN_SCALE.barrelOffset\n //         : -GUN_SCALE.barrelOffset);\n //   // this.weaponTip.setPosition(tipX, tipY);\n //   this.barrelPoint = new Phaser.Math.Vector2(tipX, tipY);\n // }\n // updateEffectPosition() {\n //   this.bloodSplatter.setPosition(this.body.x, this.body.y);\n //   this.explosion.setPosition(this.body.x, this.body.y);\n // }\n // weaponSelectionAreaPointerOver() {\n //   if (\n //     Phaser.Geom.Rectangle.Contains(\n //       this.weaponSelectionArea.getBounds(),\n //       this.input.activePointer.x,\n //       this.input.activePointer.y\n //     )\n //   ) {\n //     this.showWeapon = false;\n //   } else if (\n //     !Phaser.Geom.Rectangle.Contains(\n //       this.weaponSelectionArea.getBounds(),\n //       this.input.activePointer.x,\n //       this.input.activePointer.y\n //     ) &&\n //     !this.showWeapon\n //   ) {\n //     this.showWeapon = true;\n //   }\n // }\n // ensureCharacterBounds() {\n //   const isOutOfBounds = (part: Phaser.Physics.Matter.Image) => {\n //     return (\n //       part &&\n //       (part.x > GAME_WIDTH || part.x < 0) &&\n //       (part.y > GAME_HEIGHT || part.y < 0)\n //     );\n //   };\n //   if (\n //     isOutOfBounds(this.head) ||\n //     isOutOfBounds(this.body) ||\n //     isOutOfBounds(this.leftArm) ||\n //     isOutOfBounds(this.rightArm) ||\n //     isOutOfBounds(this.leftLeg) ||\n //     isOutOfBounds(this.rightLeg)\n //   ) {\n //     this.pointerConstraint.stopDrag();\n //     const centerX = this.game.renderer.width / 2;\n //     const centerY = this.game.renderer.height / 2;\n //     this.head.setPosition(512, 200);\n //     this.body.setPosition(512, 384);\n //     this.leftArm.setPosition(750, 200);\n //     this.rightArm.setPosition(350, 200);\n //     this.leftLeg.setPosition(350, 500);\n //     this.rightLeg.setPosition(750, 500);\n //   }\n // }\n // private createHealthBar() {\n //   // Create health bar background\n //   const healthBarBackground = this.add.rectangle(\n //     1280 / 2,\n //     30,\n //     300,\n //     20,\n //     0x000000\n //   );\n //   healthBarBackground.setScrollFactor(0);\n //   // Create health bar fill\n //   const healthBarFill = this.add.rectangle(1280 / 2, 30, 300, 20, 0xff0000);\n //   healthBarFill.setScrollFactor(0);\n //   // Create health text\n //   const healthText = this.add.text(1280 / 2, 30, `${this.health}%`, {\n //     fontSize: \"16px\",\n //     color: \"#ffffff\",\n //   });\n //   healthText.setOrigin(0.5);\n //   healthText.setScrollFactor(0);\n //   this.killCountText = this.add.text(1150, 60, `Kills: 0`, {\n //     fontSize: \"16px\",\n //     color: \"#ffffff\",\n //   });\n //   // Update health bar when health changes\n //   this.events.on(\"health-changed\", () => {\n //     console.log(\"health changed\", this.health);\n //     const healthPercent = this.health / 100;\n //     healthBarFill.setScale(healthPercent, 1);\n //     healthBarFill.setX(GAME_WIDTH / 2 - (300 * (1 - healthPercent)) / 2);\n //     healthText.setText(`${this.health.toFixed(2)}%`);\n //   });\n // }\n // export class Weapon extends Phaser.GameObjects.Sprite {\n //   private weaponType:\n //     | \"fist\"\n //     | \"knives\"\n //     | \"desert-eagle\"\n //     | \"tommy-gun\"\n //     | \"rocket-launcher\";\n //   public barrelPoint: Phaser.GameObjects.Arc;\n //   constructor(\n //     scene: Scene,\n //     x: number,\n //     y: number,\n //     weaponType:\n //       | \"fist\"\n //       | \"knives\"\n //       | \"desert-eagle\"\n //       | \"tommy-gun\"\n //       | \"rocket-launcher\",\n //     texture: string\n //   ) {\n //     super(scene, x, y, texture);\n //     this.weaponType = weaponType;\n //     this.barrelPoint = scene.add.circle(x, y, 4, 0xff0000);\n //   }\n //   init() {\n //     this.setDisplaySize(200, 100);\n //     return this;\n //   }\n //   fire() {\n //     // Don't fire if using fists\n //     if (this.weaponType === \"fist\") {\n //       return;\n //     }\n //     // Calculate spawn position offset based on gun angle and flip\n //     const spawnOffset = this.flipX ? -100 : 100;\n //     const spawnX = this.x + spawnOffset;\n //     // Play weapon firing animation if it exists\n //     if (this.weaponType === \"desert-eagle\") {\n //       this.play(\"fireDeagle\").on(\n //         Phaser.Animations.Events.ANIMATION_COMPLETE,\n //         () => {\n //           this.scene.events.emit(\"weapon-fired\");\n //         }\n //       );\n //     } else if (this.weaponType === \"tommy-gun\") {\n //       this.play(\"fireTommy\");\n //     }\n //     // Spawn the projectile\n //     this.spawnProjectile(\n //       new Phaser.Math.Vector2(spawnX, this.y),\n //       new Phaser.Math.Vector2(\n //         this.scene.children.getByName(\"body\")?.body?.position.x,\n //         this.scene.children.getByName(\"body\")?.body?.position.y\n //       )\n //     );\n //   }\n //   spawnProjectile(\n //     startPoint: Phaser.Math.Vector2,\n //     targetPoint: Phaser.Math.Vector2\n //   ): void {\n //     // Calculate angle between start and target points\n //     const angle = Phaser.Math.Angle.Between(\n //       startPoint.x,\n //       startPoint.y,\n //       targetPoint.x,\n //       targetPoint.y\n //     );\n //     const speed = 50;\n //     const bullet = this.scene.add\n //       .image(this.barrelPoint.x, this.barrelPoint.y, \"deg-bullet\")\n //       .setScale(0.06, 0.1);\n //     const matterBullet = this.scene.matter.add.gameObject(bullet, {\n //       friction: 0,\n //       frictionStatic: 0,\n //       frictionAir: 0,\n //       restitution: 1,\n //       angle: angle + Math.PI,\n //       ignorePointer: true,\n //       shape: {\n //         type: \"circle\",\n //         radius: 10,\n //       },\n //       onCollideCallback: () => {\n //         matterBullet.destroy();\n //         // Reduce health on impact\n //         this.scene.health -= 2;\n //         if (this.scene.health < 0) this.scene.health = 0;\n //         this.scene.events.emit(\"health-changed\", this.scene.health);\n //       },\n //     });\n //     // Set velocity based on angle to target\n //     this.scene.matter.setVelocity(\n //       matterBullet,\n //       speed * Math.cos(angle),\n //       speed * Math.sin(angle)\n //     );\n //   }\n // }\n // private renderCharacter() {\n //   const characterShapes = this.cache.json.get(\"characterShapes\");\n //   // Create body parts with more realistic physics properties\n //   this.head = this.matter.add\n //     .image(\n //       512,\n //       200,\n //       `${this.characterTiers[this.data.get(\"tier\")] ?? \"paper\"}-Head`,\n //       undefined,\n //       {\n //         shape: characterShapes.head,\n //         friction: 0.1,\n //         restitution: 0.3,\n //         density: 0.001, // Light head for better swinging\n //       }\n //     )\n //     .setDisplaySize(CHARACTER_WIDTH, CHARACTER_HEIGHT)\n //     .setCollisionCategory(1)\n //     .setDepth(3);\n //   this.body = this.matter.add\n //     .image(\n //       512,\n //       384,\n //       `${this.characterTiers[this.data.get(\"tier\")] ?? \"paper\"}-Body`,\n //       undefined,\n //       {\n //         shape: characterShapes.body,\n //         friction: 0.1,\n //         restitution: 0.3,\n //         density: 0.005, // Heavier body acts as center of mass\n //       }\n //     )\n //     .setDisplaySize(CHARACTER_WIDTH, CHARACTER_HEIGHT)\n //     .setCollisionCategory(1)\n //     .setDepth(2);\n //   this.bloodSplatter = this.add.sprite(512, 384, \"blood1_00018\").setDepth(4);\n //   this.explosion = this.add\n //     .sprite(512, 384, \"firstexplosion_00094\")\n //     .setDepth(4);\n //   this.leftArm = this.matter.add\n //     .image(\n //       750,\n //       200,\n //       `${this.characterTiers[this.data.get(\"tier\")] ?? \"paper\"}-Rarm`,\n //       undefined,\n //       {\n //         shape: characterShapes.larm,\n //         friction: 0.1,\n //         density: 0.001,\n //       }\n //     )\n //     .setDisplaySize(CHARACTER_WIDTH, CHARACTER_HEIGHT)\n //     .setCollisionCategory(1)\n //     .setDepth(1);\n //   this.rightArm = this.matter.add\n //     .image(\n //       350,\n //       200,\n //       `${this.characterTiers[this.data.get(\"tier\")] ?? \"paper\"}-Larm`,\n //       undefined,\n //       {\n //         shape: characterShapes.rarm,\n //         friction: 0.1,\n //         density: 0.001,\n //       }\n //     )\n //     .setDisplaySize(CHARACTER_WIDTH, CHARACTER_HEIGHT)\n //     .setCollisionCategory(1)\n //     .setDepth(1);\n //   this.rightLeg = this.matter.add\n //     .image(\n //       350,\n //       500,\n //       `${this.characterTiers[this.data.get(\"tier\")] ?? \"paper\"}-Lleg`,\n //       undefined,\n //       {\n //         shape: characterShapes.rleg,\n //         friction: 0.1,\n //         density: 0.002,\n //       }\n //     )\n //     .setDisplaySize(CHARACTER_WIDTH - 30, CHARACTER_HEIGHT - 30)\n //     .setDepth(1);\n //   this.leftLeg = this.matter.add\n //     .image(\n //       350,\n //       500,\n //       `${this.characterTiers[this.data.get(\"tier\")] ?? \"paper\"}-Rleg`,\n //       undefined,\n //       {\n //         shape: characterShapes.lleg,\n //         friction: 0.1,\n //         density: 0.002,\n //       }\n //     )\n //     .setDisplaySize(CHARACTER_WIDTH - 30, CHARACTER_HEIGHT - 30)\n //     .setDepth(1);\n //   // Create joints with more flexibility for swinging\n //   //@ts-ignore\n //   const neckLeft = this.matter.add.joint(this.head, this.body, 10, 0.1, {\n //     pointA: { x: 0, y: CHARACTER_HEIGHT / 2.6 },\n //     pointB: { x: -25, y: -CHARACTER_HEIGHT / 2.6 },\n //     angularStiffness: 0.2,\n //     stiffness: 0.2,\n //   });\n //   //@ts-ignore\n //   const neckRight = this.matter.add.joint(this.head, this.body, 10, 0.1, {\n //     pointA: { x: 0, y: CHARACTER_HEIGHT / 2.6 },\n //     pointB: { x: 25, y: -CHARACTER_HEIGHT / 2.6 },\n //     angularStiffness: 0.2,\n //     stiffness: 0.2,\n //   });\n //   const leftShoulder = this.matter.add.joint(\n //     //@ts-ignore\n //     this.leftArm,\n //     this.body,\n //     JOINT_LENGTH,\n //     0.3,\n //     {\n //       pointA: { x: 35, y: -15 },\n //       pointB: { x: -25, y: -35 },\n //       angularStiffness: 0.2,\n //     }\n //   );\n //   const rightShoulder = this.matter.add.joint(\n //     //@ts-ignore\n //     this.rightArm,\n //     this.body,\n //     JOINT_LENGTH,\n //     0.3,\n //     {\n //       pointA: { x: -35, y: -15 },\n //       pointB: { x: 25, y: -35 },\n //       angularStiffness: 0.2,\n //     }\n //   );\n //   const leftKnee = this.matter.add.joint(\n //     //@ts-ignore\n //     this.leftLeg,\n //     this.body,\n //     1,\n //     0.4,\n //     {\n //       pointA: { x: 0, y: -20 },\n //       pointB: { x: -25, y: 35 },\n //       angularStiffness: 0.3,\n //     }\n //   );\n //   const rightKnee = this.matter.add.joint(\n //     //@ts-ignore\n //     this.rightLeg,\n //     this.body,\n //     1,\n //     0.4,\n //     {\n //       pointA: { x: 0, y: -20 },\n //       pointB: { x: 25, y: 35 },\n //       angularStiffness: 0.3,\n //     }\n //   );\n // }\n // private renderButtons() {\n //   this.debugButton = new TextButton(\n //     this,\n //     10,\n //     20,\n //     \"Journal\",\n //     {\n //       color: \"#ffffff\",\n //       backgroundColor: \"black\",\n //       padding: { left: 10, right: 10, top: 10, bottom: 10 },\n //       shadow: { color: \"#000\", offsetX: 1, offsetY: 1, blur: 1 },\n //     },\n //     () => {\n //       this.soundManager.play(\"click\");\n //       // Toggle debug state\n //       this.data.set(\"debug\", !this.data.get(\"debug\"));\n //       // Update button text to show current state\n //       this.debugButton.setText(\n //         this.data.get(\"debug\") ? \"Hide Journal\" : \"Journal\"\n //       );\n //       // if (this.data.get(\"debug\")) {\n //       //   this.classSelection.hide(false);\n //       // } else {\n //       //   this.classSelection.hide(true);\n //       // }\n //     }\n //   );\n //   this.add.existing(this.debugButton);\n //   const weapons: Array<{\n //     key: GameWeaponKey | undefined;\n //     label: string;\n //     y: number;\n //   }> = [\n //     { key: undefined, label: \"Fists\", y: 60 },\n //     { key: \"knife\", label: \"Knives\", y: 100 },\n //     { key: \"deagle\", label: \"Deagle\", y: 140 },\n //     { key: \"grenade\", label: \"Grenade\", y: 180 },\n //     { key: \"fire-bomb\", label: \"Fire Bomb\", y: 220 },\n //     { key: \"sticky-bomb\", label: \"Sticky Bomb\", y: 260 },\n //     { key: \"chainsaw\", label: \"Chainsaw\", y: 300 },\n //     { key: \"lightsaber\", label: \"Lightsaber\", y: 340 },\n //     { key: \"tommy\", label: \"Tommy Gun\", y: 380 },\n //     { key: \"mg\", label: \"Machine Gun\", y: 420 },\n //     { key: \"railgun\", label: \"Rail Gun\", y: 460 },\n //     { key: \"raygun\", label: \"Ray Gun\", y: 500 },\n //     { key: \"rpg\", label: \"Rocket Launcher\", y: 540 },\n //   ];\n //   weapons.forEach(({ key, label, y }) => {\n //     this.weaponButtons.set(\n //       key || \"fist\",\n //       new TextButton(\n //         this,\n //         10,\n //         y,\n //         label,\n //         {\n //           color: \"#ffffff\",\n //           backgroundColor: \"black\",\n //           padding: { left: 10, right: 10, top: 10, bottom: 10 },\n //           shadow: { color: \"#000\", offsetX: 1, offsetY: 1, blur: 1 },\n //         },\n //         () => {\n //           this.soundManager.play(\"click\");\n //           this.setWeapon(key);\n //         }\n //       )\n //     );\n //   });\n //   this.weaponButtons.forEach((button) => {\n //     this.add.existing(button);\n //   });\n // }\n // private createWeaponSelectionArea() {\n //   const text = this.add.text(0, 728, `Pointer Over ${this.pointerOver}`, {\n //     fontSize: \"16px\",\n //     color: \"#ffffff\",\n //   });\n //   this.weaponSelectionArea = this.add\n //     .rectangle(0, 0, 200, 768 * 2, 0x000000, 0)\n //     .setDepth(-1)\n //     .setInteractive()\n //     .on(\"pointerover\", () => {\n //       this.pointerOver = true;\n //       // text.setText(`Pointer Over ${this.pointerOver}`);\n //       // this.weaponSelectionArea.setFillStyle(0xff0000, 0.5);\n //     })\n //     .on(\"pointerout\", () => {\n //       this.pointerOver = false;\n //       // text.setText(`Pointer Over ${this.pointerOver}`);\n //       // this.weaponSelectionArea.setFillStyle(0x000000, 0.5);\n //     })\n //     .on(\"pointerdown\", () => {\n //       // this.weaponSelectionArea.setFillStyle(0x00ff00, 0.5);\n //     })\n //     .on(\"pointerup\", () => {\n //       // this.weaponSelectionArea.setFillStyle(0x000000, 0.5);\n //     });\n // }\n // setWeapon(weapon: GameWeaponKey | undefined) {\n //   // Remove current weapon from display\n //   if (this.currentWeapon) {\n //     this.currentWeapon.removeFromDisplayList();\n //   }\n //   // Destroy any previous weapon\n //   if (this.weapon && this.currentWeapon) {\n //     this.currentWeapon.destroy();\n //     this.weapon = undefined;\n //   }\n //   // Set and show the appropriate weapon\n //   if (!weapon) {\n //     this.currentWeapon = undefined;\n //     return;\n //   }\n //   const weaponConfig: Record<GameWeaponKey, WeaponConfig> = {\n //     deagle: {\n //       texture: \"deaglefiring_00018\",\n //       width: 200,\n //       height: 100,\n //       name: \"deagle\",\n //     },\n //     tommy: { texture: \"tommy\", width: 300, height: 150, name: \"tommy\" },\n //     knife: { texture: \"knife\", width: 300, height: 150, name: \"knife\" },\n //     rpg: { texture: \"rpg\", width: 300, height: 150, name: \"rpg\" },\n //     grenade: { texture: \"grenade\", width: 100, height: 100, name: \"grenade\" },\n //     \"fire-bomb\": {\n //       texture: \"fire-bomb\",\n //       width: 120,\n //       height: 70,\n //       name: \"fire-bomb\",\n //     },\n //     \"sticky-bomb\": {\n //       texture: \"sticky-bomb\",\n //       width: 100,\n //       height: 100,\n //       name: \"sticky-bomb\",\n //     },\n //     chainsaw: {\n //       texture: \"chainsaw\",\n //       width: 300,\n //       height: 150,\n //       name: \"chainsaw\",\n //     },\n //     lightsaber: {\n //       texture: \"lightsaber\",\n //       width: 300,\n //       height: 150,\n //       name: \"lightsaber\",\n //     },\n //     mg: { texture: \"mg\", width: 300, height: 150, name: \"mg\" },\n //     railgun: { texture: \"railgun\", width: 300, height: 150, name: \"railgun\" },\n //     raygun: { texture: \"raygun\", width: 300, height: 150, name: \"raygun\" },\n //   };\n //   const config = weapon ? weaponConfig[weapon] : undefined;\n //   if (config) {\n //     this.weapon = weapon;\n //     this.currentWeapon = this.add\n //       .sprite(1024 / 2, 768 / 2, config.texture)\n //       .setDisplaySize(config.width, config.height)\n //       .removeFromDisplayList()\n //       .setName(config.name);\n //   }\n // }\n // spawnProjectile(startPoint: Phaser.Math.Vector2): void {\n //   const characterPos = this.character.getPosition();\n //   const targetPoint = new Phaser.Math.Vector2(characterPos.x, characterPos.y);\n //   // Calculate angle between start and target points\n //   const angle = Phaser.Math.Angle.Between(\n //     startPoint.x,\n //     startPoint.y,\n //     targetPoint.x,\n //     targetPoint.y\n //   );\n //   let speed = 50;\n //   let projectile;\n //   let throwForce = 0;\n //   let projectileConfig = {\n //     friction: 0,\n //     frictionStatic: 0,\n //     frictionAir: 0.005, // Add air friction for arcing motion\n //     restitution: 0.3, // Reduce bounce\n //     angle: angle + Math.PI,\n //     density: 0.001, // Light enough to arc\n //     ignorePointer: true,\n //   };\n //   switch (this.weapon) {\n //     case \"deagle\":\n //       speed = 75;\n //       projectile = this.add\n //         .image(this.barrelPoint.x, this.barrelPoint.y, \"deagle-bullet\")\n //         .setScale(0.06, 0.1);\n //       break;\n //     case \"tommy\":\n //       speed = 50;\n //       projectile = this.add\n //         .image(this.barrelPoint.x, this.barrelPoint.y, \"tommy-bullet\")\n //         .setScale(0.04, 0.08);\n //       break;\n //     case \"rpg\":\n //       speed = 50;\n //       projectile = this.add\n //         .image(this.barrelPoint.x, this.barrelPoint.y, \"rpg-bullet\")\n //         .setScale(0.1, 0.1);\n //       break;\n //     case \"knife\":\n //       speed = 40;\n //       projectile = this.add\n //         .image(this.barrelPoint.x, this.barrelPoint.y, \"knife\")\n //         .setScale(0.08, 0.08);\n //       break;\n //     case \"raygun\":\n //       speed = 50;\n //       projectile = this.add.image(\n //         this.barrelPoint.x,\n //         this.barrelPoint.y,\n //         \"raygun-bullet\"\n //       );\n //       break;\n //     case \"mg\":\n //       speed = 50;\n //       projectile = this.add\n //         .image(this.barrelPoint.x, this.barrelPoint.y, \"mg-bullet\")\n //         .setScale(0.08, 0.08);\n //       break;\n //     case \"grenade\":\n //     case \"sticky-bomb\":\n //     case \"fire-bomb\":\n //       projectile = this.add\n //         .image(startPoint.x, startPoint.y, this.weapon)\n //         .setScale(0.15);\n //       // Add rotation to the throwable\n //       projectileConfig = {\n //         ...projectileConfig,\n //         //@ts-ignore\n //         shape: { type: \"circle\", radius: 15 },\n //         angularVelocity: 0.2, // Increased rotation speed\n //         label: this.weapon, // Used to identify projectile type in collision\n //       };\n //       // Calculate throw force based on distance to target with increased force\n //       const distance = Phaser.Math.Distance.Between(\n //         startPoint.x,\n //         startPoint.y,\n //         targetPoint.x,\n //         targetPoint.y\n //       );\n //       throwForce = Math.min(distance * 0.02, 25); // Slightly reduced multiplier and max force\n //       break;\n //     default:\n //       return;\n //   }\n //   if (\n //     this.weapon === \"grenade\" ||\n //     this.weapon === \"sticky-bomb\" ||\n //     this.weapon === \"fire-bomb\"\n //   ) {\n //     const matterBomb = this.matter.add.gameObject(projectile, {\n //       ...projectileConfig,\n //       onCollideCallback: (collision: MatterJS.ICollisionPair) => {\n //         const bodyA = collision.bodyA;\n //         const bodyB = collision.bodyB;\n //         const collisionPoint = {\n //           x: collision.collision.supports[0]?.x,\n //           y: collision.collision.supports[0]?.y,\n //         };\n //         switch (this.weapon) {\n //           case \"sticky-bomb\": {\n //             // Stick to the first thing hit\n //             if (!matterBomb.getData(\"stuck\")) {\n //               matterBomb.setData(\"stuck\", true);\n //               //@ts-ignore\n //               this.matter.add.joint(bodyA, bodyB, {\n //                 pointA: { x: 0, y: 0 },\n //                 pointB: { x: 0, y: 0 },\n //               });\n //               // this.matter.setStatic(matterBomb, true);\n //               // Explode after delay\n //               this.time.delayedCall(2000, () => {\n //                 this.createExplosion(collisionPoint.x, collisionPoint.y);\n //                 matterBomb.destroy();\n //               });\n //             }\n //             break;\n //           }\n //           case \"fire-bomb\": {\n //             // Create fire effect and DOT damage\n //             this.createFireEffect(collisionPoint.x, collisionPoint.y);\n //             matterBomb.destroy();\n //             break;\n //           }\n //           case \"grenade\": {\n //             // Explode immediately on impact\n //             this.createExplosion(collisionPoint.x, collisionPoint.y);\n //             matterBomb.destroy();\n //             break;\n //           }\n //         }\n //       },\n //     });\n //     // Apply arc trajectory\n //     this.matter.setVelocity(\n //       matterBomb,\n //       Math.cos(angle) * throwForce,\n //       Math.sin(angle) * throwForce - 5 // Negative Y for upward arc\n //     );\n //   } else {\n //     const matterBullet = this.matter.add.gameObject(projectile, {\n //       friction: 0,\n //       frictionStatic: 0,\n //       frictionAir: 0,\n //       restitution: 1,\n //       angle: angle + Math.PI,\n //       ignorePointer: true,\n //       shape: {\n //         type: \"circle\",\n //         radius: 10,\n //       },\n //       onCollideCallback: () => {\n //         if (this.weapon === \"rpg\") {\n //           this.soundManager.play(\"explode\");\n //         } else if (this.weapon === \"raygun\") {\n //           this.soundManager.play(\"raygun-impact\");\n //         }\n //         // Calculate damage based on weapon type\n //         let damage = 0.05; // default damage\n //         switch (this.weapon) {\n //           case \"rpg\":\n //             damage = 1;\n //             break;\n //           case \"deagle\":\n //             damage = 0.5;\n //             break;\n //           case \"tommy\":\n //             damage = 0.3;\n //             break;\n //           case \"mg\":\n //             damage = 0.4;\n //             break;\n //           case \"raygun\":\n //             damage = 0.3;\n //             break;\n //           // Add other weapon damage values as needed\n //         }\n //         const isExplosion = this.weapon === \"rpg\";\n //         EventBus.emit(\"projectile-hit\", { damage, isExplosion });\n //         matterBullet.destroy();\n //       },\n //     });\n //     // Set velocity based on angle to target\n //     this.matter.setVelocity(\n //       matterBullet,\n //       speed * Math.cos(angle),\n //       speed * Math.sin(angle)\n //     );\n //   }\n // }\n // fireWeapon() {\n //   const characterPos = this.character.getPosition();\n //   // Don't fire if pointer is over weapon selection area\n //   if (this.pointerOver) {\n //     return;\n //   }\n //   // Don't fire if using fists\n //   if (this.weapon === undefined) {\n //     return;\n //   }\n //   // Don't fire if no weapon equipped or weapon not visible\n //   if (!this.currentWeapon || !this.currentWeapon.getDisplayList()) {\n //     return;\n //   }\n //   // Calculate spawn position offset based on gun angle and flip\n //   const spawnOffset = this.currentWeapon.flipX ? -100 : 100;\n //   const spawnX = this.currentWeapon.x + spawnOffset;\n //   switch (this.weapon) {\n //     case \"deagle\":\n //       this.soundManager.play(\"deagle-cock\");\n //       this.soundManager.play(\"deagle-fire\");\n //       this.currentWeapon\n //         .play(\"deagleFire\")\n //         .on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n //           this.events.emit(\"deagle-fired\");\n //         });\n //       break;\n //     case \"tommy\":\n //       this.soundManager.play(\"deagle-fire\");\n //       this.currentWeapon\n //         .play(\"tommyFire\")\n //         .on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n //           this.events.emit(\"tommy-fired\");\n //         });\n //       break;\n //     case \"rpg\":\n //       this.soundManager.play(\"rpg-fire\");\n //       this.currentWeapon\n //         .play(\"rpgFire\")\n //         .on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n //           this.events.emit(\"rocket-fired\");\n //         });\n //       break;\n //     case \"mg\":\n //       this.soundManager.play(\"deagle-fire\");\n //       this.currentWeapon\n //         .play(\"mgFire\")\n //         .on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n //           this.events.emit(\"mg-fired\");\n //         });\n //       break;\n //     case \"raygun\":\n //       this.soundManager.play(\"raygun-fire\");\n //       this.currentWeapon\n //         .play(\"raygunFire\")\n //         .on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n //           this.events.emit(\"raygun-fired\");\n //         });\n //       break;\n //     case \"knife\":\n //       console.log(\"knives\");\n //       // this.soundManager.play()\n //       // this.currentWeapon\n //       //   .play(\"knifeThrow\")\n //       //   .on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n //       //     this.events.emit(\"knives-fired\");\n //       //   });\n //       break;\n //     case \"grenade\":\n //     case \"sticky-bomb\":\n //     case \"fire-bomb\":\n //       this.soundManager.play(\"fire-bomb-fire\");\n //       break;\n //     default:\n //       return;\n //   }\n //   this.spawnProjectile(new Phaser.Math.Vector2(spawnX, this.currentWeapon.y));\n // }\n // showAndFireWeapon() {\n //   if (!this.showWeapon || !this.weapon || this.pointerOver) {\n //     return;\n //   }\n //   // Show current weapon if it exists but isn't displayed\n //   if (this.currentWeapon && !this.currentWeapon.getDisplayList()) {\n //     this.currentWeapon.addToDisplayList();\n //   }\n //   // Clear any existing firing timer when changing weapons\n //   if (this.firingTimer) {\n //     this.firingTimer.destroy();\n //     this.firingTimer = undefined;\n //   }\n //   // Weapon configurations\n //   const weaponConfigs = {\n //     grenade: {\n //       fireRate: 1000,\n //       burstSize: 1,\n //       sound: \"fire-bomb-fire\",\n //     },\n //     \"sticky-bomb\": {\n //       fireRate: 1000,\n //       burstSize: 1,\n //       sound: \"fire-bomb-fire\",\n //     },\n //     \"fire-bomb\": {\n //       fireRate: 1000,\n //       burstSize: 1,\n //       sound: \"fire-bomb-fire\",\n //     },\n //     knives: {\n //       fireRate: 500,\n //       burstSize: 1,\n //     },\n //     \"tommy-gun\": {\n //       fireRate: 50, // Faster fire rate for tommy gun\n //       burstSize: 3, // Number of bullets per burst\n //       burstDelay: 300, // Delay between bursts\n //       sound: \"deagle-fire\",\n //     },\n //     \"desert-eagle\": {\n //       fireRate: 500, // Consistent delay between shots\n //       burstSize: 1,\n //       sound: \"deagle-fire\",\n //     },\n //     rpg: {\n //       fireRate: 1000,\n //       burstSize: 1,\n //       sound: \"rpg-fire\",\n //     },\n //     mg: {\n //       fireRate: 100,\n //       burstSize: 1,\n //       sound: \"deagle-fire\",\n //     },\n //     raygun: {\n //       fireRate: 200,\n //       burstSize: 1,\n //       sound: \"raygun-fire\",\n //     },\n //   };\n //   //@ts-ignore\n //   const config = weaponConfigs[this.weapon];\n //   if (!config) return;\n //   let lastFired = 0;\n //   let burstCount = 0;\n //   let canFire = true;\n //   // Initial fire on pointer down\n //   if (this.input.activePointer.isDown) {\n //     this.fireWeapon();\n //     lastFired = this.time.now;\n //   }\n //   this.firingTimer = this.time.addEvent({\n //     delay: 16, // Run at ~60fps for smooth firing checks\n //     callback: () => {\n //       const currentTime = this.time.now;\n //       if (!this.input.activePointer.isDown) {\n //         canFire = true;\n //         burstCount = 0;\n //         return;\n //       }\n //       // Check if enough time has passed since last shot\n //       if (currentTime - lastFired >= config.fireRate && canFire) {\n //         if (config.burstSize > 1) {\n //           // Burst fire logic\n //           this.fireWeapon();\n //           burstCount++;\n //           lastFired = currentTime;\n //           if (burstCount >= config.burstSize) {\n //             canFire = false;\n //             burstCount = 0;\n //             // Reset after burst delay\n //             this.time.delayedCall(config.burstDelay || 300, () => {\n //               canFire = true;\n //             });\n //           }\n //         } else {\n //           // Single shot logic\n //           this.fireWeapon();\n //           lastFired = currentTime;\n //         }\n //         // Play weapon sound\n //         if (config.sound) {\n //           this.soundManager.play(config.sound);\n //         }\n //       }\n //     },\n //     loop: true,\n //   });\n // }\n // hideWeapon() {\n //   if (this.currentWeapon && this.currentWeapon.getDisplayList()) {\n //     this.currentWeapon.removeFromDisplayList();\n //   }\n // }\n // private createFireEffect(x: number, y: number) {\n //   const fireEffect = this.add.sprite(x, y, \"groundfire_00016\").play(\"fire\");\n //   this.soundManager.play(\"fire-bomb-impact\");\n //   // Create damage over time effect\n //   let tickCount = 0;\n //   const maxTicks = 5;\n //   const fireDamage = this.time.addEvent({\n //     delay: 500, // Damage every 0.5 seconds\n //     callback: () => {\n //       const characterPos = this.character.getPosition();\n //       const distance = Phaser.Math.Distance.Between(\n //         x,\n //         y,\n //         characterPos.x,\n //         characterPos.y\n //       );\n //       if (distance <= 50) {\n //         // Fire damage radius\n //         EventBus.emit(\"projectile-hit\", {\n //           damage: 5,\n //           isExplosion: false,\n //         });\n //       }\n //       tickCount++;\n //       if (tickCount >= maxTicks) {\n //         fireDamage.destroy();\n //         fireEffect.destroy();\n //       }\n //     },\n //     loop: true,\n //   });\n // }\n // private createExplosion(x: number, y: number) {\n //   // Visual effect\n //   const explosion = this.add\n //     .sprite(x, y, \"firstexplosion_00094\")\n //     .play(\"explosion\");\n //   // Sound effect\n //   this.soundManager.play(\"explode\");\n //   // Damage calculation based on distance\n //   const blastRadius = 100;\n //   const characterPos = this.character.getPosition();\n //   const distance = Phaser.Math.Distance.Between(\n //     x,\n //     y,\n //     characterPos.x,\n //     characterPos.y\n //   );\n //   if (distance <= blastRadius) {\n //     const damage = 1 - distance / blastRadius; // More damage closer to explosion\n //     EventBus.emit(\"projectile-hit\", {\n //       damage: damage * 20, // Scale damage appropriately\n //       isExplosion: true,\n //     });\n //   }\n // }\n // showAndFireWeapon() {\n //   if (!this.showWeapon) {\n //     return;\n //   }\n //   // Show current weapon if it exists but isn't displayed\n //   if (this.currentWeapon && !this.currentWeapon.getDisplayList()) {\n //     this.currentWeapon.addToDisplayList();\n //   }\n //   // Clear any existing firing timer when changing weapons\n //   if (this.firingTimer) {\n //     this.firingTimer.destroy();\n //     this.firingTimer = undefined;\n //   }\n //   // Set up weapon-specific firing behavior\n //   let fireRate = 0;\n //   let fireEvent = \"\";\n //   let bulletsPerBurst = 1;\n //   let burstDelay = 0;\n //   let currentWeaponType = this.weapon; // Store current weapon type\n //   switch (this.weapon) {\n //     case \"tommy-gun\":\n //       fireRate = 100;\n //       fireEvent = \"tommy-fired\";\n //       bulletsPerBurst = 20;\n //       burstDelay = 50;\n //       break;\n //     case \"desert-eagle\":\n //       fireRate = 500;\n //       fireEvent = \"deagle-fired\";\n //       bulletsPerBurst = 1;\n //       break;\n //     case \"rpg\":\n //       fireRate = 1000;\n //       fireEvent = \"rocket-fired\";\n //       bulletsPerBurst = 1;\n //       break;\n //     case \"knives\":\n //       fireRate = 1000;\n //       fireEvent = \"knives-fired\";\n //       bulletsPerBurst = 1;\n //       break;\n //     case \"mg\":\n //       fireRate = 100;\n //       fireEvent = \"mg-fired\";\n //       bulletsPerBurst = 1;\n //       break;\n //     case \"raygun\":\n //       fireRate = 100;\n //       fireEvent = \"raygun-fired\";\n //       bulletsPerBurst = 1;\n //       break;\n //     default:\n //       return;\n //   }\n //   let canFire = true;\n //   let burstTimer: Phaser.Time.TimerEvent;\n //   // Start firing immediately on pointerdown\n //   if (this.input.activePointer.isDown) {\n //     this.fireWeapon();\n //   }\n //   this.firingTimer = this.time.addEvent({\n //     delay: fireRate,\n //     callback: () => {\n //       // Check if weapon has changed since starting the burst\n //       if (this.weapon !== currentWeaponType) {\n //         if (burstTimer) {\n //           burstTimer.destroy();\n //         }\n //         canFire = true;\n //         return;\n //       }\n //       if (this.input.activePointer.isDown && canFire) {\n //         canFire = false;\n //         if (bulletsPerBurst > 1) {\n //           // For burst weapons like tommy gun\n //           let bulletsShot = 0;\n //           burstTimer = this.time.addEvent({\n //             delay: burstDelay,\n //             callback: () => {\n //               // Check weapon hasn't changed during burst\n //               if (this.weapon === currentWeaponType) {\n //                 this.fireWeapon();\n //                 bulletsShot++;\n //                 if (bulletsShot >= bulletsPerBurst) {\n //                   burstTimer.destroy();\n //                   // Allow next burst after a short delay\n //                   this.time.delayedCall(300, () => {\n //                     canFire = true;\n //                   });\n //                 }\n //               } else {\n //                 burstTimer.destroy();\n //                 canFire = true;\n //               }\n //             },\n //             repeat: bulletsPerBurst - 1,\n //           });\n //         } else {\n //           // For single shot weapons like desert eagle\n //           this.fireWeapon();\n //           // Re-enable firing after animation completes\n //           this.events.once(fireEvent, () => {\n //             canFire = true;\n //           });\n //         }\n //       }\n //     },\n //     loop: true,\n //   });\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/scenes/Game.ts\n");

/***/ }),

/***/ "./src/game/scenes/MainMenu.ts":
/*!*************************************!*\
  !*** ./src/game/scenes/MainMenu.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MainMenu: () => (/* binding */ MainMenu),\n/* harmony export */   \"default\": () => (/* binding */ MainMenu)\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"phaser\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _EventBus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EventBus */ \"./src/game/EventBus.ts\");\n/* harmony import */ var _lib_sets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/sets */ \"./src/lib/sets.ts\");\n\n\n\nclass MainMenu extends (phaser__WEBPACK_IMPORTED_MODULE_0___default().Scene) {\n    constructor(){\n        super(\"MainMenu\");\n        this.infoButtonState = \"closed\";\n    }\n    preload() {\n        this.load.video(\"loading\", \"assets/loadingScreen/loadingScreen.mp4\");\n    }\n    onInfoButtonClick() {\n        this.infoButtonState = this.infoButtonState === \"open\" ? \"closed\" : \"open\";\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"show-info\", this.infoButtonState === \"open\");\n        // Update info button texture based on state\n        this.infoButton.setTexture(this.infoButtonState === \"open\" ? \"info-button\" : \"info-button-active\");\n    }\n    create() {\n        this.add.image(1280 / 2, 720 / 2, \"BG\").setDisplaySize(1280, 720).setDepth(-3);\n        _EventBus__WEBPACK_IMPORTED_MODULE_1__.EventBus.emit(\"current-scene-ready\", this);\n        this.music = this.sound.add(\"bgMusic\");\n        this.music.play({\n            loop: true,\n            volume: 0.5\n        });\n        this.background = this.add.video(1280 / 2, 720 / 2, \"loading\").setScale(0.68).setDepth(-2).play(true);\n        // Add social media buttons\n        const socialY = 500;\n        const spacing = 120;\n        // Twitter button\n        const twitterButton = this.add.image(400 - spacing, socialY, \"twitter-button\").setScale(0.2).setOrigin(0.5).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            twitterButton.setTexture(\"twitter-button-active\");\n        }).on(\"pointerout\", ()=>{\n            twitterButton.setTexture(\"twitter-button\");\n        }).on(\"pointerdown\", ()=>{\n            window.open(_lib_sets__WEBPACK_IMPORTED_MODULE_2__.X_LINK, \"_blank\");\n        });\n        this.infoButton = this.add.image(400, 600, \"info-button-active\").setDisplaySize(50, 50).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerdown\", ()=>this.onInfoButtonClick());\n        // Telegram button\n        const telegramButton = this.add.image(400, socialY, \"telegram-button\").setScale(0.2).setOrigin(0.5).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            telegramButton.setTexture(\"telegram-button-active\");\n        }).on(\"pointerout\", ()=>{\n            telegramButton.setTexture(\"telegram-button\");\n        }).on(\"pointerdown\", ()=>{\n            window.open(_lib_sets__WEBPACK_IMPORTED_MODULE_2__.TELEGRAM_LINK, \"_blank\");\n        });\n        // Discord button\n        const discordButton = this.add.image(400 + spacing, socialY, \"dex-button\").setScale(0.2).setOrigin(0.5).setInteractive({\n            useHandCursor: true\n        }).on(\"pointerover\", ()=>{\n            discordButton.setTexture(\"dex-button-active\");\n        }).on(\"pointerout\", ()=>{\n            discordButton.setTexture(\"dex-button\");\n        }).on(\"pointerdown\", ()=>{\n            window.open(_lib_sets__WEBPACK_IMPORTED_MODULE_2__.DEX_LINK, \"_blank\");\n        });\n        // Add play button\n        // Add play button\n        const playButton = this.add.text(400, 384, \"Play Game\", {\n            fontSize: \"32px\",\n            color: \"#ffffff\",\n            backgroundColor: \"#000000\",\n            padding: {\n                x: 20,\n                y: 10\n            },\n            fontFamily: \"Arial Black\"\n        }).setOrigin(0.5).setInteractive({\n            useHandCursor: true\n        });\n        // Add hover effects\n        playButton.on(\"pointerover\", ()=>{\n            playButton.setScale(1.1);\n        });\n        playButton.on(\"pointerout\", ()=>{\n            playButton.setScale(1);\n        });\n        // Change scene on click\n        playButton.on(\"pointerdown\", ()=>{\n            this.changeScene();\n        });\n    }\n    changeScene() {\n        this.background.destroy();\n        this.scene.start(\"Preloader\");\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/scenes/MainMenu.ts\n");

/***/ }),

/***/ "./src/game/scenes/Preloader.ts":
/*!**************************************!*\
  !*** ./src/game/scenes/Preloader.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Preloader)\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"phaser\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_sets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/sets */ \"./src/lib/sets.ts\");\n\n\nclass Preloader extends (phaser__WEBPACK_IMPORTED_MODULE_0___default().Scene) {\n    constructor(){\n        super(\"Preloader\");\n    }\n    init() {\n        // background\n        const width = this.cameras.main.width;\n        const height = this.cameras.main.height;\n        const gradient = this.add.graphics();\n        gradient.fillGradientStyle(0x1a1a1a, 0x1a1a1a, 0x0a0a0a, 0x0a0a0a, 1);\n        gradient.fillRect(0, 0, width, height);\n        // progressBar\n        const progressBar = this.add.rectangle(width / 2, height / 2, 468, 32);\n        progressBar.isFilled = true;\n        progressBar.fillColor = 0x30cfd0; // Bright green color\n        progressBar.isStroked = true;\n        progressBar.strokeColor = 0xffffff; // White stroke\n        progressBar.lineWidth = 2;\n        progressBar.setAlpha(0.8); // Slight transparency\n        this.progressBar = progressBar;\n        this.events.emit(\"scene-awake\");\n        //  This is the progress bar itself. It will increase in size from the left based on the % of progress.\n        const bar = this.add.rectangle(this.progressBar.x - this.progressBar.width / 2 + 4, this.progressBar.y, 4, 28, 0xffffff);\n        //  Use the 'progress' event emitted by the LoaderPlugin to update the loading bar\n        this.load.on(\"progress\", (progress)=>{\n            //  Update the progress bar (our bar is 464px wide, so 100% = 464px)\n            bar.width = 4 + 460 * progress;\n        });\n    }\n    async preload() {\n        // Load asset packs from blob storage\n        // this.load.pack(\"effect-pack\", \"assets/effects/effect-pack.json\");\n        // this.load.pack(\"weapon-pack\", \"assets/weapons/weapon-pack.json\");\n        // this.load.pack(\"character-pack\", \"assets/character/character-pack.json\");\n        // this.load.pack(\"sound-pack\", \"assets/sounds/sound-pack.json\");\n        // this.load.pack(\"button-pack\", \"assets/buttons/button-pack.json\");\n        // this.load.pack(\"background-pack\", \"assets/backgrounds/bg-pack.json\");\n        // await this.blobLoader.loadPack(\"character/character-pack.json\");\n        // await this.blobLoader.loadPack(\"weapons/weapon-pack.json\");\n        // await this.blobLoader.loadPack(\"effects/effect-pack.json\");\n        // await this.blobLoader.loadPack(\"sounds/sound-pack.json\");\n        // await this.blobLoader.loadPack(\"buttons/button-pack.json\");\n        // await this.blobLoader.loadPack(\"backgrounds/bg-pack.json\");\n        // this.load.pack('blob-pack', 'assets/blob-pack.json');\n        this.load.pack(\"blob-effects-pack\", \"assets/packs/blob-effects-pack.json\");\n        this.load.pack(\"blob-weapons-pack\", \"assets/packs/blob-weapons-pack.json\");\n        this.load.pack(\"blob-character-pack\", \"assets/packs/blob-character-pack.json\");\n        this.load.pack(\"blob-sounds-pack\", \"assets/packs/blob-sounds-pack.json\");\n        this.load.pack(\"blob-buttons-pack\", \"assets/packs/blob-buttons-pack.json\");\n        this.load.pack(\"blob-backgrounds-pack\", \"assets/packs/blob-backgrounds-pack.json\");\n        this.load.json(\"characterShapes\", \"assets/character/character.xml.json\");\n        this.load.animation(\"weapon-animations\", \"assets/weapons/weapon-animations.json\");\n        this.load.animation(\"effect-animations\", \"assets/effects/effect-animations.json\");\n        // Start the loading\n        this.load.start();\n    }\n    getPurchasedStates(key) {\n        console.log(key);\n        const stored = localStorage.getItem(key);\n        console.log(stored);\n        return stored ? JSON.parse(stored) : {};\n    }\n    getMarketcap() {\n        const marketcap = this.registry.get(\"marketcap\");\n        return parseInt(marketcap);\n    }\n    create() {\n        const weaponPurchases = this.getPurchasedStates(\"weapon-purchases\");\n        const itemPurchases = this.getPurchasedStates(\"item-purchases\");\n        const boxPurchases = this.getPurchasedStates(\"box-purchases\");\n        const skinPurchases = this.getPurchasedStates(\"skin-purchases\");\n        // Add weapons data to registry\n        const weapons = [\n            {\n                name: \"deagle\",\n                tier: 1,\n                price: 0,\n                purchased: true,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-25, -75, 250, 150)\n            },\n            {\n                name: \"grenade\",\n                tier: 1,\n                price: 0,\n                purchased: true,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-100, 100, 200, 250)\n            },\n            {\n                name: \"knife\",\n                tier: 1,\n                price: 0,\n                purchased: true,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(75, 75, 150, 300)\n            },\n            {\n                name: \"tommy\",\n                tier: 2,\n                price: 1000,\n                purchased: weaponPurchases[\"tommy\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-25, -100, 300, 150)\n            },\n            {\n                name: \"chainsaw\",\n                tier: 2,\n                price: 1500,\n                purchased: weaponPurchases[\"chainsaw\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-25, 40, 300, 150)\n            },\n            {\n                name: \"sticky-bomb\",\n                tier: 2,\n                price: 3500,\n                purchased: weaponPurchases[\"sticky-bomb\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-25, 200, 300, 150)\n            },\n            {\n                name: \"mg\",\n                tier: 3,\n                price: 2000,\n                purchased: weaponPurchases[\"mg\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(0, -100, 350, 100)\n            },\n            {\n                name: \"rpg\",\n                tier: 3,\n                price: 3500,\n                purchased: weaponPurchases[\"rpg\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(0, 40, 350, 100)\n            },\n            {\n                name: \"fire-bomb\",\n                tier: 3,\n                price: 1500,\n                purchased: weaponPurchases[\"fire-bomb\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-20, 175, 150, 150)\n            },\n            {\n                name: \"railgun\",\n                tier: 4,\n                price: 8000,\n                purchased: weaponPurchases[\"railgun\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(20, -75, 350, 150)\n            },\n            {\n                name: \"lightsaber\",\n                tier: 4,\n                price: 12000,\n                purchased: weaponPurchases[\"lightsaber\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(0, 45, 300, 75)\n            },\n            {\n                name: \"raygun\",\n                tier: 4,\n                price: 25000,\n                purchased: weaponPurchases[\"raygun\"] ?? false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(20, 175, 200, 200)\n            }\n        ];\n        this.registry.set(\"weapon-buttons\", weapons);\n        // Add shop items data to registry\n        const items = [\n            {\n                name: \"dynamite\",\n                tier: 1,\n                price: 3500,\n                purchased: itemPurchases[\"dynamite\"] ?? false,\n                unlocked: true,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-25, -100, 350, 200)\n            },\n            {\n                name: \"gasnade\",\n                tier: 1,\n                price: 0,\n                purchased: true,\n                unlocked: false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-25, 125, 350, 200)\n            },\n            {\n                name: \"katana\",\n                tier: 2,\n                price: 8000,\n                purchased: itemPurchases[\"katana\"] ?? false,\n                unlocked: true,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-125, 25, 150, 450)\n            },\n            {\n                name: \"battleaxe\",\n                tier: 2,\n                price: 1000,\n                purchased: true,\n                unlocked: false,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(75, 25, 150, 450)\n            },\n            {\n                name: \"kar98\",\n                tier: 3,\n                price: 13000,\n                purchased: itemPurchases[\"kar98\"] ?? false,\n                unlocked: true,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(-100, -25, 200, 350)\n            },\n            {\n                name: \"flamethrower\",\n                tier: 3,\n                price: 18000,\n                purchased: itemPurchases[\"flamethrower\"] ?? false,\n                unlocked: _lib_sets__WEBPACK_IMPORTED_MODULE_1__.BURNER_UNLOCKED,\n                hitbox: new (phaser__WEBPACK_IMPORTED_MODULE_0___default().Geom).Rectangle(50, 150, 200, 250)\n            }\n        ];\n        this.registry.set(\"shop-buttons\", items);\n        // Add boxes data to registry\n        const boxes = {\n            1: {\n                name: \"main\",\n                bg: \"bg-main\",\n                price: 0,\n                purchased: true\n            },\n            2: {\n                name: \"shoe\",\n                bg: \"bg-shoe\",\n                price: 5000,\n                purchased: boxPurchases[\"shoe\"] ?? false\n            },\n            3: {\n                name: \"present\",\n                bg: \"bg-present\",\n                price: 8000,\n                purchased: boxPurchases[\"present\"] ?? false\n            },\n            4: {\n                name: \"basket\",\n                bg: \"bg-basket\",\n                price: 13000,\n                purchased: boxPurchases[\"basket\"] ?? false\n            },\n            5: {\n                name: \"blood\",\n                bg: \"bg-bloody\",\n                price: 18000,\n                purchased: boxPurchases[\"blood\"] ?? false\n            },\n            6: {\n                name: \"coming-soon\",\n                bg: \"\",\n                price: 0,\n                purchased: true\n            }\n        };\n        this.registry.set(\"box-buttons\", boxes);\n        // Add skins data to registry\n        const skins = {\n            1: {\n                name: \"paper\",\n                price: 0,\n                purchased: true,\n                unlocked: true\n            },\n            2: {\n                name: \"buddy\",\n                price: 0,\n                purchased: skinPurchases[\"buddy\"] ?? false,\n                unlocked: true\n            },\n            3: {\n                name: \"musk\",\n                price: 5000,\n                purchased: skinPurchases[\"musk\"] ?? false,\n                unlocked: this.getMarketcap() >= 1000000\n            },\n            4: {\n                name: \"mil\",\n                price: 10000,\n                purchased: skinPurchases[\"mil\"] ?? false,\n                unlocked: this.getMarketcap() >= 5000000\n            },\n            5: {\n                name: \"santa\",\n                price: 13000,\n                purchased: skinPurchases[\"santa\"] ?? false,\n                unlocked: _lib_sets__WEBPACK_IMPORTED_MODULE_1__.SANTA_SKIN_UNLOCKED\n            },\n            6: {\n                name: \"sol\",\n                price: 22000,\n                purchased: skinPurchases[\"sol\"] ?? false,\n                unlocked: this.getMarketcap() >= 10000000\n            },\n            7: {\n                name: \"coming-soon\",\n                price: 0,\n                purchased: true,\n                unlocked: false\n            }\n        };\n        this.registry.set(\"skin-buttons\", skins);\n        const tierButtons = {\n            1: {\n                name: \"PAPER\",\n                bg: \"tier1-bg\",\n                unlocked: true\n            },\n            2: {\n                name: \"MUSK\",\n                bg: \"tier2-bg\",\n                unlocked: this.getMarketcap() >= 1000000\n            },\n            3: {\n                name: \"MIL\",\n                bg: \"tier3-bg\",\n                unlocked: this.getMarketcap() >= 5000000\n            },\n            4: {\n                name: \"SOL\",\n                bg: \"tier4-bg\",\n                unlocked: this.getMarketcap() >= 10000000\n            }\n        };\n        this.registry.set(\"tier-buttons\", tierButtons);\n        this.scene.start(\"MainGame\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/scenes/Preloader.ts\n");

/***/ }),

/***/ "./src/lib/sets.ts":
/*!*************************!*\
  !*** ./src/lib/sets.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOOD_BOX_UNLOCKED: () => (/* binding */ BLOOD_BOX_UNLOCKED),\n/* harmony export */   BURNER_UNLOCKED: () => (/* binding */ BURNER_UNLOCKED),\n/* harmony export */   DEX_LINK: () => (/* binding */ DEX_LINK),\n/* harmony export */   MARKETCAP: () => (/* binding */ MARKETCAP),\n/* harmony export */   SANTA_SKIN_UNLOCKED: () => (/* binding */ SANTA_SKIN_UNLOCKED),\n/* harmony export */   TELEGRAM_LINK: () => (/* binding */ TELEGRAM_LINK),\n/* harmony export */   X_LINK: () => (/* binding */ X_LINK)\n/* harmony export */ });\nconst MARKETCAP = \"10000000\";\nconst SANTA_SKIN_UNLOCKED = false;\nconst BLOOD_BOX_UNLOCKED = false;\nconst BURNER_UNLOCKED = false;\nconst X_LINK = \"https://x.com/kickthebuddy\";\nconst TELEGRAM_LINK = \"https://t.me/kickthebuddy\";\nconst DEX_LINK = \"https://dexscreener.com/\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL3NldHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFPLE1BQU1BLFlBQVksV0FBVztBQUM3QixNQUFNQyxzQkFBc0IsTUFBTTtBQUNsQyxNQUFNQyxxQkFBcUIsTUFBTTtBQUNqQyxNQUFNQyxrQkFBa0IsTUFBTTtBQUM5QixNQUFNQyxTQUFTLDZCQUE2QjtBQUM1QyxNQUFNQyxnQkFBZ0IsNEJBQTRCO0FBQ2xELE1BQU1DLFdBQVcsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGhhc2VyLWVkaXRvci10ZW1wbGF0ZS1uZXh0anMvLi9zcmMvbGliL3NldHMudHM/NjY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgTUFSS0VUQ0FQID0gXCIxMDAwMDAwMFwiO1xuZXhwb3J0IGNvbnN0IFNBTlRBX1NLSU5fVU5MT0NLRUQgPSBmYWxzZTtcbmV4cG9ydCBjb25zdCBCTE9PRF9CT1hfVU5MT0NLRUQgPSBmYWxzZTtcbmV4cG9ydCBjb25zdCBCVVJORVJfVU5MT0NLRUQgPSBmYWxzZTtcbmV4cG9ydCBjb25zdCBYX0xJTksgPSBcImh0dHBzOi8veC5jb20va2lja3RoZWJ1ZGR5XCI7XG5leHBvcnQgY29uc3QgVEVMRUdSQU1fTElOSyA9IFwiaHR0cHM6Ly90Lm1lL2tpY2t0aGVidWRkeVwiO1xuZXhwb3J0IGNvbnN0IERFWF9MSU5LID0gXCJodHRwczovL2RleHNjcmVlbmVyLmNvbS9cIjtcblxuIl0sIm5hbWVzIjpbIk1BUktFVENBUCIsIlNBTlRBX1NLSU5fVU5MT0NLRUQiLCJCTE9PRF9CT1hfVU5MT0NLRUQiLCJCVVJORVJfVU5MT0NLRUQiLCJYX0xJTksiLCJURUxFR1JBTV9MSU5LIiwiREVYX0xJTksiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/sets.ts\n");

/***/ }),

/***/ "./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentMarketcap: () => (/* binding */ getCurrentMarketcap),\n/* harmony export */   getPurchasedStates: () => (/* binding */ getPurchasedStates)\n/* harmony export */ });\nfunction getPurchasedStates(key) {\n    console.log(key);\n    const stored = localStorage.getItem(key);\n    console.log(stored);\n    return stored ? JSON.parse(stored) : {};\n}\nfunction getCurrentMarketcap() {\n    const stored = localStorage.getItem(\"marketcap\");\n    return stored ? JSON.parse(stored) : 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL3V0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsbUJBQW1CQyxHQUFXO0lBQzVDQyxRQUFRQyxHQUFHLENBQUNGO0lBQ1osTUFBTUcsU0FBU0MsYUFBYUMsT0FBTyxDQUFDTDtJQUNwQ0MsUUFBUUMsR0FBRyxDQUFDQztJQUNaLE9BQU9BLFNBQVNHLEtBQUtDLEtBQUssQ0FBQ0osVUFBVSxDQUFDO0FBQ3hDO0FBRU8sU0FBU0s7SUFDZCxNQUFNTCxTQUFTQyxhQUFhQyxPQUFPLENBQUM7SUFDcEMsT0FBT0YsU0FBU0csS0FBS0MsS0FBSyxDQUFDSixVQUFVO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGhhc2VyLWVkaXRvci10ZW1wbGF0ZS1uZXh0anMvLi9zcmMvbGliL3V0aWxzLnRzPzdjMWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldFB1cmNoYXNlZFN0YXRlcyhrZXk6IHN0cmluZyk6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+IHtcbiAgY29uc29sZS5sb2coa2V5KTtcbiAgY29uc3Qgc3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgY29uc29sZS5sb2coc3RvcmVkKTtcbiAgcmV0dXJuIHN0b3JlZCA/IEpTT04ucGFyc2Uoc3RvcmVkKSA6IHt9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3VycmVudE1hcmtldGNhcCgpOiBudW1iZXIge1xuICBjb25zdCBzdG9yZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIm1hcmtldGNhcFwiKTtcbiAgcmV0dXJuIHN0b3JlZCA/IEpTT04ucGFyc2Uoc3RvcmVkKSA6IDA7XG59XG5cbiJdLCJuYW1lcyI6WyJnZXRQdXJjaGFzZWRTdGF0ZXMiLCJrZXkiLCJjb25zb2xlIiwibG9nIiwic3RvcmVkIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsImdldEN1cnJlbnRNYXJrZXRjYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/utils.ts\n");

/***/ })

};
;